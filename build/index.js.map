{"version":3,"file":"index.js","mappings":"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","sources":["webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/base/math-array.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/base/vector.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/vector3.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/lib/assert.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/lib/common.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/lib/gl-matrix-extras.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/lib/validators.js","webpack://razor/./src/engine/math/Orientation.ts","webpack://razor/./src/engine/gl/GLUtils.ts","webpack://razor/./src/engine/core/InputManager.ts","webpack://razor/./src/engine/core/Razor.ts","webpack://razor/./src/engine/core/GameLoop.ts","webpack://razor/./src/engine/renderer/Renderer.ts","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/base/matrix.js","webpack://razor/./node_modules/gl-matrix/esm/mat4.js","webpack://razor/./node_modules/gl-matrix/esm/vec2.js","webpack://razor/./node_modules/gl-matrix/esm/vec4.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/matrix4.js","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/vector2.js","webpack://razor/./src/engine/math/math.ts","webpack://razor/./src/engine/math/Transform.ts","webpack://razor/./src/engine/core/entities/Entity.ts","webpack://razor/./src/engine/core/scenes/Scene.ts","webpack://razor/./src/engine/renderer/RenderStrategy.ts","webpack://razor/./src/engine/core/scenes/SceneManager.ts","webpack://razor/./src/engine/utils/FileUtils.ts","webpack://razor/./src/engine/buffer/VBO.ts","webpack://razor/./src/engine/buffer/VAO.ts","webpack://razor/./src/engine/loader/OBJLoader.ts","webpack://razor/./src/engine/appearance/Texture.ts","webpack://razor/./src/engine/loader/TextureLoader.ts","webpack://razor/./src/engine/core/ResourceManager.ts","webpack://razor/./src/engine/appearance/Shader.ts","webpack://razor/./src/game/entities/SimpleEntity.ts","webpack://razor/./src/game/entities/Lamp.ts","webpack://razor/./src/engine/core/entities/SolidEntity.ts","webpack://razor/./src/engine/core/entities/StaticEntity.ts","webpack://razor/./src/game/entities/MapEntity.ts","webpack://razor/./src/engine/buffer/FrameBuffer.ts","webpack://razor/./src/game/renderers/FrameRenderer.ts","webpack://razor/./src/engine/core/Camera.ts","webpack://razor/./src/game/Sound.ts","webpack://razor/./src/game/entities/gui/RectangleEntity.ts","webpack://razor/./src/game/utils/Text.ts","webpack://razor/./src/game/entities/gui/TextEntity.ts","webpack://razor/./src/game/entities/gui/GuiEntity.ts","webpack://razor/./src/game/entities/gui/DialogEntity.ts","webpack://razor/./src/engine/core/entities/DynamicEntity.ts","webpack://razor/./src/game/GameController.ts","webpack://razor/./src/engine/physics/hitboxes/HitBox.ts","webpack://razor/./src/engine/physics/hitboxes/CircleHitbox.ts","webpack://razor/./src/game/entities/monster/Monster.ts","webpack://razor/./src/game/entities/player/Gun.ts","webpack://razor/./src/game/entities/player/Player.ts","webpack://razor/./src/game/entities/HallDoorEntity.ts","webpack://razor/./src/game/entities/DoorPanelEntity.ts","webpack://razor/./src/game/renderers/MapRenderer.ts","webpack://razor/./src/game/CanvasCamera.ts","webpack://razor/./src/engine/appearance/material/Material.ts","webpack://razor/./src/engine/appearance/material/DefaultMaterial.ts","webpack://razor/./node_modules/@math.gl/core/dist/esm/classes/vector4.js","webpack://razor/./src/game/renderers/GuiRenderer.ts","webpack://razor/./src/game/entities/gui/OptionEntity.ts","webpack://razor/./src/game/entities/gui/SelectEntity.ts","webpack://razor/./src/game/renderers/MonsterRenderer.ts","webpack://razor/./src/game/entities/DisplayEntity.ts","webpack://razor/./src/game/entities/gui/ImageEntity.ts","webpack://razor/./src/engine/physics/hitboxes/EdgeHitbox.ts","webpack://razor/./src/engine/physics/intersections/Intersection.ts","webpack://razor/./src/engine/physics/intersections/CircleCircleIntersection.ts","webpack://razor/./src/engine/physics/intersections/CircleEdgeIntersection.ts","webpack://razor/./src/engine/core/scenes/PhysicsScene.ts","webpack://razor/./src/engine/physics/Physics.ts","webpack://razor/./src/game/pathfinding/PathNode.ts","webpack://razor/./src/game/pathfinding/EntityNode.ts","webpack://razor/./src/game/scenes/MainScene.ts","webpack://razor/./src/game/entities/EntityFactory.ts","webpack://razor/./src/game/pathfinding/PathFinding.ts","webpack://razor/./src/game/materials/DoorPanelMaterial.ts","webpack://razor/./src/game/renderers/PlayerRenderer.ts","webpack://razor/./src/game/entities/CreditsEntity.ts","webpack://razor/./src/game/GameTest.ts","webpack://razor/./src/engine/core/GameCore.ts","webpack://razor/./src/main.ts","webpack://razor/./node_modules/gl-matrix/esm/common.js","webpack://razor/./node_modules/gl-matrix/esm/vec3.js","webpack://razor/./node_modules/obj-file-parser/dist/OBJFile.js"],"sourcesContent":["function _extendableBuiltin(cls) {\n  function ExtendableBuiltin() {\n    var instance = Reflect.construct(cls, Array.from(arguments));\n    Object.setPrototypeOf(instance, Object.getPrototypeOf(this));\n    return instance;\n  }\n\n  ExtendableBuiltin.prototype = Object.create(cls.prototype, {\n    constructor: {\n      value: cls,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (Object.setPrototypeOf) {\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n  } else {\n    ExtendableBuiltin.__proto__ = cls;\n  }\n\n  return ExtendableBuiltin;\n}\n\nimport { config, formatValue, equals, isArray } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class MathArray extends _extendableBuiltin(Array) {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  clone() {\n    return new this.constructor().copy(this);\n  }\n\n  from(arrayOrObject) {\n    return Array.isArray(arrayOrObject) ? this.copy(arrayOrObject) : this.fromObject(arrayOrObject);\n  }\n\n  fromArray(array, offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = array[i + offset];\n    }\n\n    return this.check();\n  }\n\n  to(arrayOrObject) {\n    if (arrayOrObject === this) {\n      return this;\n    }\n\n    return isArray(arrayOrObject) ? this.toArray(arrayOrObject) : this.toObject(arrayOrObject);\n  }\n\n  toTarget(target) {\n    return target ? this.to(target) : this;\n  }\n\n  toArray(array = [], offset = 0) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      array[offset + i] = this[i];\n    }\n\n    return array;\n  }\n\n  toFloat32Array() {\n    return new Float32Array(this);\n  }\n\n  toString() {\n    return this.formatString(config);\n  }\n\n  formatString(opts) {\n    let string = '';\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      string += (i > 0 ? ', ' : '') + formatValue(this[i], opts);\n    }\n\n    return \"\".concat(opts.printTypes ? this.constructor.name : '', \"[\").concat(string, \"]\");\n  }\n\n  equals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (!equals(this[i], array[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  exactEquals(array) {\n    if (!array || this.length !== array.length) {\n      return false;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      if (this[i] !== array[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  negate() {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = -this[i];\n    }\n\n    return this.check();\n  }\n\n  lerp(a, b, t) {\n    if (t === undefined) {\n      t = b;\n      b = a;\n      a = this;\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const ai = a[i];\n      this[i] = ai + t * (b[i] - ai);\n    }\n\n    return this.check();\n  }\n\n  min(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  max(vector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.max(vector[i], this[i]);\n    }\n\n    return this.check();\n  }\n\n  clamp(minVector, maxVector) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], minVector[i]), maxVector[i]);\n    }\n\n    return this.check();\n  }\n\n  add(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] += vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  subtract(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] -= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  scale(scale) {\n    if (Array.isArray(scale)) {\n      return this.multiply(scale);\n    }\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scale;\n    }\n\n    return this.check();\n  }\n\n  sub(a) {\n    return this.subtract(a);\n  }\n\n  setScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = a;\n    }\n\n    return this.check();\n  }\n\n  addScalar(a) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] += a;\n    }\n\n    return this.check();\n  }\n\n  subScalar(a) {\n    return this.addScalar(-a);\n  }\n\n  multiplyScalar(scalar) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] *= scalar;\n    }\n\n    return this.check();\n  }\n\n  divideScalar(a) {\n    return this.scale(1 / a);\n  }\n\n  clampScalar(min, max) {\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      this[i] = Math.min(Math.max(this[i], min), max);\n    }\n\n    return this.check();\n  }\n\n  multiplyByScalar(scalar) {\n    return this.scale(scalar);\n  }\n\n  get elements() {\n    return this;\n  }\n\n  check() {\n    if (config.debug && !this.validate()) {\n      throw new Error(\"math.gl: \".concat(this.constructor.name, \" some fields set to invalid numbers'\"));\n    }\n\n    return this;\n  }\n\n  validate() {\n    let valid = this.length === this.ELEMENTS;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      valid = valid && Number.isFinite(this[i]);\n    }\n\n    return valid;\n  }\n\n}\n//# sourceMappingURL=math-array.js.map","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport assert from '../../lib/assert';\nexport default class Vector extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  copy(vector) {\n    assert(false);\n    return this;\n  }\n\n  get x() {\n    return this[0];\n  }\n\n  set x(value) {\n    this[0] = checkNumber(value);\n  }\n\n  get y() {\n    return this[1];\n  }\n\n  set y(value) {\n    this[1] = checkNumber(value);\n  }\n\n  len() {\n    return Math.sqrt(this.lengthSquared());\n  }\n\n  magnitude() {\n    return this.len();\n  }\n\n  lengthSquared() {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      length += this[i] * this[i];\n    }\n\n    return length;\n  }\n\n  magnitudeSquared() {\n    return this.lengthSquared();\n  }\n\n  distance(mathArray) {\n    return Math.sqrt(this.distanceSquared(mathArray));\n  }\n\n  distanceSquared(mathArray) {\n    let length = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      const dist = this[i] - mathArray[i];\n      length += dist * dist;\n    }\n\n    return checkNumber(length);\n  }\n\n  dot(mathArray) {\n    let product = 0;\n\n    for (let i = 0; i < this.ELEMENTS; ++i) {\n      product += this[i] * mathArray[i];\n    }\n\n    return checkNumber(product);\n  }\n\n  normalize() {\n    const length = this.magnitude();\n\n    if (length !== 0) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= length;\n      }\n    }\n\n    return this.check();\n  }\n\n  multiply(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] *= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  divide(...vectors) {\n    for (const vector of vectors) {\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        this[i] /= vector[i];\n      }\n    }\n\n    return this.check();\n  }\n\n  lengthSq() {\n    return this.lengthSquared();\n  }\n\n  distanceTo(vector) {\n    return this.distance(vector);\n  }\n\n  distanceToSquared(vector) {\n    return this.distanceSquared(vector);\n  }\n\n  getComponent(i) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    return checkNumber(this[i]);\n  }\n\n  setComponent(i, value) {\n    assert(i >= 0 && i < this.ELEMENTS, 'index is out of range');\n    this[i] = value;\n    return this.check();\n  }\n\n  addVectors(a, b) {\n    return this.copy(a).add(b);\n  }\n\n  subVectors(a, b) {\n    return this.copy(a).subtract(b);\n  }\n\n  multiplyVectors(a, b) {\n    return this.copy(a).multiply(b);\n  }\n\n  addScaledVector(a, b) {\n    return this.add(new this.constructor(a).multiplyScalar(b));\n  }\n\n}\n//# sourceMappingURL=vector.js.map","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec3 from 'gl-matrix/vec3';\nimport { vec3_transformMat2, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nconst ORIGIN = [0, 0, 0];\nconst constants = {};\nexport default class Vector3 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector3(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0) {\n    super(-0, -0, -0);\n\n    if (arguments.length === 1 && isArray(x)) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n    }\n  }\n\n  set(x, y, z) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 3;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  angle(vector) {\n    return vec3.angle(this, vector);\n  }\n\n  cross(vector) {\n    vec3.cross(this, this, vector);\n    return this.check();\n  }\n\n  rotateX({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateX(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateY({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateY(this, this, origin, radians);\n    return this.check();\n  }\n\n  rotateZ({\n    radians,\n    origin = ORIGIN\n  }) {\n    vec3.rotateZ(this, this, origin, radians);\n    return this.check();\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec3.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec3_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec3.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec3_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec3.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector3.js.map","export default function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"math.gl assertion \".concat(message));\n  }\n}\n//# sourceMappingURL=assert.js.map","import assert from './assert';\nconst RADIANS_TO_DEGREES = 1 / Math.PI * 180;\nconst DEGREES_TO_RADIANS = 1 / 180 * Math.PI;\nconst config = {};\nconfig.EPSILON = 1e-12;\nconfig.debug = false;\nconfig.precision = 4;\nconfig.printTypes = false;\nconfig.printDegrees = false;\nconfig.printRowMajor = true;\nexport { config };\nexport function configure(options = {}) {\n  for (const key in options) {\n    assert(key in config);\n    config[key] = options[key];\n  }\n\n  return config;\n}\n\nfunction round(value) {\n  return Math.round(value / config.EPSILON) * config.EPSILON;\n}\n\nexport function formatValue(value, {\n  precision = config.precision || 4\n} = {}) {\n  value = round(value);\n  return \"\".concat(parseFloat(value.toPrecision(precision)));\n}\nexport function isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value) && !(value instanceof DataView);\n}\n\nfunction duplicateArray(array) {\n  return array.clone ? array.clone() : new Array(array.length);\n}\n\nexport function clone(array) {\n  return array.clone ? array.clone() : new Array(...array);\n}\n\nfunction map(value, func, result) {\n  if (isArray(value)) {\n    result = result || duplicateArray(value);\n\n    for (let i = 0; i < result.length && i < value.length; ++i) {\n      result[i] = func(value[i], i, result);\n    }\n\n    return result;\n  }\n\n  return func(value);\n}\n\nexport function toRadians(degrees) {\n  return radians(degrees);\n}\nexport function toDegrees(radians) {\n  return degrees(radians);\n}\nexport function radians(degrees, result) {\n  return map(degrees, degrees => degrees * DEGREES_TO_RADIANS, result);\n}\nexport function degrees(radians, result) {\n  return map(radians, radians => radians * RADIANS_TO_DEGREES, result);\n}\nexport function sin(radians) {\n  return map(radians, angle => Math.sin(angle));\n}\nexport function cos(radians) {\n  return map(radians, angle => Math.cos(angle));\n}\nexport function tan(radians) {\n  return map(radians, angle => Math.tan(angle));\n}\nexport function asin(radians) {\n  return map(radians, angle => Math.asin(angle));\n}\nexport function acos(radians) {\n  return map(radians, angle => Math.acos(angle));\n}\nexport function atan(radians) {\n  return map(radians, angle => Math.atan(angle));\n}\nexport function clamp(value, min, max) {\n  return map(value, value => Math.max(min, Math.min(max, value)));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n\n  return t * b + (1 - t) * a;\n}\nexport function equals(a, b, epsilon) {\n  const oldEpsilon = config.EPSILON;\n\n  if (epsilon) {\n    config.EPSILON = epsilon;\n  }\n\n  try {\n    if (a === b) {\n      return true;\n    }\n\n    if (isArray(a) && isArray(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (let i = 0; i < a.length; ++i) {\n        if (!equals(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    if (a && a.equals) {\n      return a.equals(b);\n    }\n\n    if (b && b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isFinite(a) && Number.isFinite(b)) {\n      return Math.abs(a - b) <= config.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n    }\n\n    return false;\n  } finally {\n    config.EPSILON = oldEpsilon;\n  }\n}\nexport function exactEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a && typeof a === 'object' && b && typeof b === 'object') {\n    if (a.constructor !== b.constructor) {\n      return false;\n    }\n\n    if (a.exactEquals) {\n      return a.exactEquals(b);\n    }\n  }\n\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (let i = 0; i < a.length; ++i) {\n      if (!exactEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\nexport function withEpsilon(EPSILON, func) {\n  const oldPrecision = config.EPSILON;\n  config.EPSILON = EPSILON;\n  let value;\n\n  try {\n    value = func();\n  } finally {\n    config.EPSILON = oldPrecision;\n  }\n\n  return value;\n}\n//# sourceMappingURL=common.js.map","export function vec2_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const w = m[3] * x + m[7] * y || 1.0;\n  out[0] = (m[0] * x + m[4] * y) / w;\n  out[1] = (m[1] * x + m[5] * y) / w;\n  return out;\n}\nexport function vec3_transformMat4AsVector(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  const w = m[3] * x + m[7] * y + m[11] * z || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n  return out;\n}\nexport function vec3_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  return out;\n}\nexport function vec4_transformMat2(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\nexport function vec4_transformMat3(out, a, m) {\n  const x = a[0];\n  const y = a[1];\n  const z = a[2];\n  out[0] = m[0] * x + m[3] * y + m[6] * z;\n  out[1] = m[1] * x + m[4] * y + m[7] * z;\n  out[2] = m[2] * x + m[5] * y + m[8] * z;\n  out[3] = a[3];\n  return out;\n}\n//# sourceMappingURL=gl-matrix-extras.js.map","import { config } from './common';\nexport function validateVector(v, length) {\n  if (v.length !== length) {\n    return false;\n  }\n\n  for (let i = 0; i < v.length; ++i) {\n    if (!Number.isFinite(v[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function checkNumber(value) {\n  if (!Number.isFinite(value)) {\n    throw new Error(\"Invalid number \".concat(value));\n  }\n\n  return value;\n}\nexport function checkVector(v, length, callerName = '') {\n  if (config.debug && !validateVector(v, length)) {\n    throw new Error(\"math.gl: \".concat(callerName, \" some fields set to invalid numbers'\"));\n  }\n\n  return v;\n}\nconst map = {};\nexport function deprecated(method, version) {\n  if (!map[method]) {\n    map[method] = true;\n    console.warn(\"\".concat(method, \" has been removed in version \").concat(version, \", see upgrade guide for more information\"));\n  }\n}\n//# sourceMappingURL=validators.js.map","import {Vector3} from \"@math.gl/core\"\n\nclass Orientation extends Vector3 {\n\n  public constructor(pitch: number = 0, yaw: number = 0, roll: number = 0) {\n    super(pitch, yaw, roll)\n  }\n\n  public add(orientation: Orientation): Orientation {\n    super.add(orientation)\n    return this\n  }\n  \n  public get pitch() : number {\n    return this.x\n  }\n\n  public get yaw() : number {\n    return this.y\n  }\n\n  public get roll() : number {\n    return this.z\n  }\n\n  public set pitch(x: number) {\n    this.x = x\n  }\n\n  public set yaw(y: number) {\n    this.y = y\n  }\n\n  public set roll(z: number) {\n    this.z = z\n  }\n\n}\n\nexport default Orientation","\n/* eslint-disable */\nexport var gl : WebGLRenderingContext = null;\n\nclass GLUtils {\n\n    public static init(canvas?: HTMLCanvasElement): HTMLCanvasElement {\n        if(!canvas) {\n            canvas = document.createElement('canvas') as HTMLCanvasElement;\n            document.body.appendChild(canvas);\n        }\n        gl = canvas.getContext('webgl');\n        if(gl === undefined) {\n            throw new Error('Unable to initialize WebGL!');\n        }\n\n        return canvas;\n    }\n\n    public static drawByIndices(iboLength: number) {\n        gl.drawElements(gl.TRIANGLES, iboLength, gl.UNSIGNED_SHORT, 0);\n    }\n\n    public static draw(vaoLength: number) {\n        gl.drawArrays(gl.TRIANGLES, 0, vaoLength);\n    }\n\n    public static drawBuffer(attachments : number[]){\n        \n    //   gl.drawBuffers(attachments); //Só funicona no WebGL2\n    }\n}\n\nexport default GLUtils;\n","import Razor from \"./Razor\"\n\nexport const Keys = {\n    KEY_0: 'Digit0',\n    KEY_1: 'Digit1',\n    KEY_2: 'Digit2',\n    KEY_3: 'Digit3',\n    KEY_4: 'Digit4',\n    KEY_5: 'Digit5',\n    KEY_6: 'Digit6',\n    KEY_7: 'Digit7',\n    KEY_8: 'Digit8',\n    KEY_9: 'Digit9',\n\n    KEY_A: 'KeyA',\n    KEY_B: 'KeyB',\n    KEY_C: 'KeyC',\n    KEY_D: 'KeyD',\n    KEY_E: 'KeyE',\n    KEY_F: 'KeyF',\n    KEY_G: 'KeyG',\n    KEY_H: 'KeyH',\n    KEY_I: 'KeyI',\n    KEY_J: 'KeyJ',\n    KEY_K: 'KeyK',\n    KEY_L: 'KeyL',\n    KEY_M: 'KeyM',\n    KEY_N: 'KeyN',\n    KEY_O: 'KeyO',\n    KEY_P: 'KeyP',\n    KEY_Q: 'KeyQ',\n    KEY_R: 'KeyR',\n    KEY_S: 'KeyS',\n    KEY_T: 'KeyT',\n    KEY_U: 'KeyU',\n    KEY_V: 'KeyV',\n    KEY_X: 'KeyX',\n    KEY_W: 'KeyW',\n    KEY_Y: 'KeyY',\n    KEY_Z: 'KeyZ',\n\n    KEY_SPACE: 'Space',\n    KEY_ESCAPE: 'Escape',\n    KEY_ENTER: 'Enter',\n    KEY_BACKSPACE: 'Backspace',\n    KEY_INSERT: 'Insert',\n    KEY_DELETE: 'Delete',\n\n    KEY_ALT_L: 'AltLeft',\n    KEY_ALT_R: 'AltRight',\n    KEY_CTRL_L: 'ControlLeft',\n    KEY_CTRL_R: 'ControlRight',\n    KEY_SHIFT_L: 'ShiftLeft',\n    KEY_SHIFT_R: 'ShiftRight',\n\n    KEY_UP: 'ArrowUp',\n    KEY_DOWN: 'ArrowDown',\n    KEY_LEFT: 'ArrowLeft',\n    KEY_RIGHT: 'ArrowRight',\n\n    KEY_HOME: 'Home',\n    KEY_END: 'End',\n    KEY_PAGEUP: 'PageUp',\n    KEY_PAGEDOWN: 'PageDown',\n\n    KEY_BACKQUOTE: 'Backquote',\n    KEY_MINUS: 'Minus',\n    KEY_EQUAL: 'Equal',\n    KEY_BRACKET_L: 'Bracketleft',\n    KEY_BRACKET_R: 'BracketRight',\n    KEY_BACKSLASH: 'Backslash',\n    KEY_SEMICOLON: 'Semicolon',\n    KEY_QUOTE: 'Quote',\n    KEY_COMMA: 'Comma',\n    KEY_PERIOD: 'Period',\n    KEY_SLASH: 'Slash',\n}\n\n\nclass InputManager {\n\n\n    private static _mouseButtons: [boolean, boolean, boolean]\n    private static _currentMousePosition: [number, number]\n    private static _previousMousePosition: [number, number]\n    private static _mouseMovement: [number, number]\n    private static _bufferKeys: string[]\n\n    private static _keys: Map<string, boolean>\n\n    private static _shouldDebug: boolean\n\n    public static init() {\n        InputManager._bufferKeys = [];\n        InputManager._keys = new Map<string, boolean>()\n        Object.keys(Keys).forEach((key: string) => {\n            InputManager._keys.set(key, false)\n        })\n        window.addEventListener('keydown', InputManager.onKeyDown)\n        window.addEventListener('keyup', InputManager.onKeyUp)\n        InputManager._mouseButtons = [false, false, false]\n        InputManager._currentMousePosition = [0, 0]\n        InputManager._previousMousePosition = [0, 0]\n        InputManager._mouseMovement = [0, 0]\n        Razor.CANVAS.addEventListener('mousedown', InputManager.onMouseDown)\n        Razor.CANVAS.addEventListener('mouseup', InputManager.onMouseUp)\n        Razor.CANVAS.addEventListener('mousemove', InputManager.onMouseMove)\n\n        this._shouldDebug = false\n    }\n\n    // KEYBOARD EVENTS\n\n    public static isKeyPressedDown(key: string): boolean {\n        if (InputManager._bufferKeys.includes(key)) return false;\n        if (InputManager._keys.get(key) == true) {\n            InputManager._bufferKeys.push(key);\n            return true;\n        }\n        return false;\n    }\n\n    public static isKeyPressed(key: string): boolean {\n        return InputManager._keys.get(key)\n    }\n\n    private static onKeyDown(event: KeyboardEvent): void {\n        if (Razor.IS_MOUSE_INSIDE) {\n            event.stopPropagation()\n            event.preventDefault()\n            InputManager._keys.set(event.code, true)\n        }\n    }\n\n    private static onKeyUp(event: KeyboardEvent): void {\n        if (Razor.IS_MOUSE_INSIDE) {\n            event.stopPropagation()\n            event.preventDefault()\n            InputManager._keys.set(event.code, false)\n            InputManager._bufferKeys = InputManager._bufferKeys.filter((name) => name != event.code)\n        }\n    }\n\n    public static update() {\n\n        InputManager._mouseMovement[0] = InputManager._currentMousePosition[0] - InputManager._previousMousePosition[0]\n        InputManager._mouseMovement[1] = InputManager._currentMousePosition[1] - InputManager._previousMousePosition[1]\n        InputManager._previousMousePosition[0] = InputManager._currentMousePosition[0]\n        InputManager._previousMousePosition[1] = InputManager._currentMousePosition[1]\n\n    }\n\n    // MOUSE EVENTS\n\n    public static isMouseLeft(): boolean {\n        return InputManager._mouseButtons[0]\n    }\n\n    public static isMouseMiddle(): boolean {\n        return InputManager._mouseButtons[1]\n    }\n\n    public static isMouseRight(): boolean {\n        return InputManager._mouseButtons[2]\n    }\n\n    public static getMouseX(): number {\n        return InputManager._currentMousePosition[0]\n    }\n\n    public static getMouseY(): number {\n        return InputManager._currentMousePosition[1]\n    }\n\n    public static getMouseDX(): number {\n        return InputManager._mouseMovement[0]\n    }\n\n    public static getMouseDY(): number {\n        return InputManager._mouseMovement[1]\n    }\n\n    private static onMouseDown(event: MouseEvent): void {\n        event.stopPropagation()\n        event.preventDefault()\n        InputManager._mouseButtons[event.button] = Razor.IS_MOUSE_INSIDE\n    }\n\n    private static onMouseUp(event: MouseEvent): void {\n        if (Razor.IS_MOUSE_INSIDE) {\n            event.stopPropagation()\n            event.preventDefault()\n            InputManager._mouseButtons[event.button] = false\n        }\n    }\n\n    private static onMouseMove(event: MouseEvent): void {\n        if (Razor.IS_MOUSE_INSIDE) {\n            event.stopPropagation()\n            event.preventDefault()\n\n            InputManager._currentMousePosition[0] -= event.movementX//offsetX\n            InputManager._currentMousePosition[1] -= event.movementY//offsetY\n            //InputManager._currentMousePosition[0] = event.offsetX\n            //InputManager._currentMousePosition[1] = event.offsetY\n\n            if (InputManager._shouldDebug) {\n                console.log(`offset:  ${event.offsetX}X ${event.offsetY}Y`);\n                console.log(`client:  ${event.clientX}X ${event.clientY}Y`);\n                console.log(`screen:  ${event.screenX}X ${event.screenY}Y`);\n            }\n        }\n    }\n\n    public static setDebug(value: boolean) {\n        InputManager._shouldDebug = value\n    }\n\n    public static shouldDebug() {\n        return InputManager._shouldDebug\n    }\n\n}\n\nexport default InputManager","import GLUtils, { gl } from '../gl/GLUtils';\nimport GameCore from './GameCore';\nimport GameLoop from './GameLoop';\nimport InputManager from './InputManager';\n\n/**\n * Canvas management class\n */\nclass Razor {\n\n    public static CANVAS: HTMLCanvasElement;\n    public static FOCUSED: boolean\n    public static IS_MOUSE_INSIDE: boolean\n\n    private _gameLoop: GameLoop;\n    private _gameCore: GameCore;\n    private _started: boolean\n\n    public constructor(gameCore: GameCore, canvas?: HTMLCanvasElement) {\n        Razor.CANVAS = GLUtils.init(canvas);\n        Object.defineProperty(this, \"CANVAS\", {\n            writable: false\n        })\n        gl.clearColor(0, 0, 0, 1);\n        this._gameLoop = new GameLoop(gameCore);  \n        this._started = false\n        this._gameCore = gameCore;\n        Razor.FOCUSED = Boolean(!!canvas)\n        Razor.IS_MOUSE_INSIDE = Boolean(!!canvas)\n    }\n\n    public start() : void {\n        if(!Razor.IS_MOUSE_INSIDE) {\n            this.configs()\n        }\n        this.resize();\n        InputManager.init()\n        this._gameLoop.start();\n        this._started = true\n    }\n\n    public resize() : void {\n        if(Razor.CANVAS === undefined) {\n            throw new Error('Canvas was not initialized!');\n        }\n\n        Razor.CANVAS.width = Razor.CANVAS.offsetWidth\n        Razor.CANVAS.height = Razor.CANVAS.offsetHeight\n        gl.viewport(0, 0,Razor.CANVAS.width, Razor.CANVAS.height);\n        \n    }\n\n    private configs() {\n        Razor.CANVAS.addEventListener('click', (e) => {\n            if(!Razor.IS_MOUSE_INSIDE){\n\n                Razor.FOCUSED = Razor.isInsideCanvas(e.clientX, e.clientY)\n                Razor.CANVAS.requestPointerLock();// (Responsável por remover o mouse)\n            }\n            //Razor.IS_MOUSE_INSIDE = true;\n        })\n        document.addEventListener('pointerlockchange', event => { \n            Razor.IS_MOUSE_INSIDE = !Razor.IS_MOUSE_INSIDE;\n        });\n\n        Razor.CANVAS.addEventListener('mousemove', (e) => {\n         //   Razor.IS_MOUSE_INSIDE = Razor.isInsideCanvas(e.clientX, e.clientY)\n        })\n        Razor.CANVAS.addEventListener('mouseleave', (e) => {\n            Razor.IS_MOUSE_INSIDE = false;\n        })\n    }\n\n    public static isInsideCanvas(x: number, y: number) {\n        return (\n            x > Razor.CANVAS.offsetLeft &&\n            x < Razor.CANVAS.offsetLeft+Razor.CANVAS.offsetWidth &&\n            y > Razor.CANVAS.offsetTop &&\n            y < Razor.CANVAS.offsetTop+Razor.CANVAS.offsetHeight\n        )\n    }\n\n    public isStarted(): boolean {\n        return this._started\n    }\n\n    public getGameCore(): GameCore {\n        return this._gameCore\n    }\n}\n\nexport default Razor;\n","import { gl } from \"../gl/GLUtils\";\nimport GameCore from \"./GameCore\";\nimport InputManager from \"./InputManager\";\nimport Framebuffer from \"../buffer/FrameBuffer\";\nclass GameLoop {\n\n    private _gameCore: GameCore;\n    private _then: number\n    private _frameBuffer : Framebuffer;\n\n    public constructor(gameCore: GameCore) {\n        this._gameCore = gameCore;\n        this._then = 0\n     //   this._frameBuffer = new Framebuffer;\n    }\n\n    private loop = (time: number) : void => {\n\n        time *= 0.001;  // seconds;\n        const delta = time - this._then;\n        this._then = time;\n        const fps = 1 / delta;             // compute frames per second\n        document.querySelector(\"#fps span\").textContent = fps.toFixed(1);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\n        InputManager.update()\n        this._gameCore.update(time, delta);\n        this._gameCore.render();\n        //this._frameBuffer.render();\n        requestAnimationFrame(this.loop);\n    }\n\n    public start() : void {\n        this._gameCore.start();\n        gl.enable(gl.DEPTH_TEST)\n        gl.enable(gl.BLEND)\n        gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n        gl.enable(gl.CULL_FACE)\n        // gl.frontFace(gl.CW)\n        gl.depthFunc(gl.LESS)\n       // this._frameBuffer.start();\n        this.loop(0);\n    }\n\n}\n\nexport default GameLoop;","import Entity from \"../core/entities/Entity\";\nimport Scene from \"../core/scenes/Scene\";\nimport Shader from \"../appearance/Shader\";\nimport Material from \"@razor/appearance/material/Material\";\nimport Camera from \"@razor/core/Camera\";\n\nabstract class Renderer {\n\n    private _name: string;\n\n    private _scene: Scene;\n    private _camera: Camera;\n\n    protected _maximumRenderDistance: number\n\n    protected constructor(name: string, camera: Camera) {\n        this._name = name;\n        this._camera = camera;\n        this._maximumRenderDistance = -1\n    }\n\n    protected getEntitiesByMaterial(material: Material): Entity[] {\n        return this._scene.filterVisible(\n            (entity: Entity) => \n                entity.getRenderer() &&\n                entity.getRenderer().getName() === this._name &&\n                entity.getMaterial() && \n                entity.getMaterial().getName() === material.getName() &&\n                (\n                    this._maximumRenderDistance < 0 ||\n                    this._camera.getTransform().getTranslation().distanceTo(entity.getTransform().getTranslation()) < this._maximumRenderDistance\n                )\n        )\n    }\n\n    protected getEntitiesByShader(shader: Shader): Entity[] {\n        return this._scene.filterVisible(\n            (entity: Entity) => \n                entity.getRenderer().getName() === this._name &&\n                entity.getMaterial().getShader().getName() === shader.getName()\n        )\n    }\n\n    public abstract render(): void;\n\n    public getName(): string { \n        return this._name\n    }\n\n    public setScene(scene: Scene) {\n        this._scene = scene;\n    }\n\n    public getScene(): Scene {\n        return this._scene\n    }\n\n    public getCamera(): Camera { \n        return this._camera\n    }\n}\n\nexport default Renderer","import MathArray from './math-array';\nimport { checkNumber } from '../../lib/validators';\nimport { config } from '../../lib/common';\nimport assert from '../../lib/assert';\nexport default class Matrix extends MathArray {\n  get ELEMENTS() {\n    assert(false);\n    return 0;\n  }\n\n  get RANK() {\n    assert(false);\n    return 0;\n  }\n\n  toString() {\n    let string = '[';\n\n    if (config.printRowMajor) {\n      string += 'row-major:';\n\n      for (let row = 0; row < this.RANK; ++row) {\n        for (let col = 0; col < this.RANK; ++col) {\n          string += \" \".concat(this[col * this.RANK + row]);\n        }\n      }\n    } else {\n      string += 'column-major:';\n\n      for (let i = 0; i < this.ELEMENTS; ++i) {\n        string += \" \".concat(this[i]);\n      }\n    }\n\n    string += ']';\n    return string;\n  }\n\n  getElementIndex(row, col) {\n    return col * this.RANK + row;\n  }\n\n  getElement(row, col) {\n    return this[col * this.RANK + row];\n  }\n\n  setElement(row, col, value) {\n    this[col * this.RANK + row] = checkNumber(value);\n    return this;\n  }\n\n  getColumn(columnIndex, result = new Array(this.RANK).fill(-0)) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      result[i] = this[firstIndex + i];\n    }\n\n    return result;\n  }\n\n  setColumn(columnIndex, columnVector) {\n    const firstIndex = columnIndex * this.RANK;\n\n    for (let i = 0; i < this.RANK; ++i) {\n      this[firstIndex + i] = columnVector[i];\n    }\n\n    return this;\n  }\n\n}\n//# sourceMappingURL=matrix.js.map","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(2);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {ReadonlyVec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\n\nexport function fromValues(x, y) {\n  var out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the source vector\n * @returns {vec2} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\n\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to ceil\n * @returns {vec2} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to floor\n * @returns {vec2} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec2} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to round\n * @returns {vec2} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\n * Calculates the length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\n * Calculates the squared length of a vec2\n *\n * @param {ReadonlyVec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to negate\n * @returns {vec2} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to invert\n * @returns {vec2} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a vector to normalize\n * @returns {vec2} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the first operand\n * @param {ReadonlyVec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat2d} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat3} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {ReadonlyVec2} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec2} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {ReadonlyVec2} a The vec2 point to rotate\n * @param {ReadonlyVec2} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec2} out\n */\n\nexport function rotate(out, a, b, rad) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(rad),\n      cosC = Math.cos(rad); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\n * Get the angle between two 2D vectors\n * @param {ReadonlyVec2} a The first operand\n * @param {ReadonlyVec2} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1],\n      // mag is the product of the magnitudes of a and b\n  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),\n      // mag &&.. short circuits if mag == 0\n  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1\n\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec2 to zero\n *\n * @param {vec2} out the receiving vector\n * @returns {vec2} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\n}\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec2} a The first vector.\n * @param {ReadonlyVec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\n * Alias for {@link vec2.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();","import * as glMatrix from \"./common.js\";\n/**\n * 4 Dimensional Vector\n * @module vec4\n */\n\n/**\n * Creates a new, empty vec4\n *\n * @returns {vec4} a new 4D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(4);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec4 initialized with values from an existing vector\n *\n * @param {ReadonlyVec4} a vector to clone\n * @returns {vec4} a new 4D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Creates a new vec4 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} a new 4D vector\n */\n\nexport function fromValues(x, y, z, w) {\n  var out = new glMatrix.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the source vector\n * @returns {vec4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\n\nexport function set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\n * Multiplies two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\n * Divides two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\n * Math.ceil the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to ceil\n * @returns {vec4} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\n * Math.floor the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to floor\n * @returns {vec4} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\n * Returns the minimum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\n * Returns the maximum of two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {vec4} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\n * Math.round the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to round\n * @returns {vec4} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\n * Adds two vec4's after scaling the second operand by a scalar value\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec4} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared euclidian distance between two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Calculates the length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\n * Calculates the squared length of a vec4\n *\n * @param {ReadonlyVec4} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\n * Negates the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to negate\n * @returns {vec4} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to invert\n * @returns {vec4} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a vector to normalize\n * @returns {vec4} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\n * Returns the cross-product of three vectors in a 4-dimensional space\n *\n * @param {ReadonlyVec4} result the receiving vector\n * @param {ReadonlyVec4} U the first vector\n * @param {ReadonlyVec4} V the second vector\n * @param {ReadonlyVec4} W the third vector\n * @returns {vec4} result\n */\n\nexport function cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the first operand\n * @param {ReadonlyVec4} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec4} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec4} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec4} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = glMatrix.RANDOM() * 2 - 1;\n    v2 = glMatrix.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = glMatrix.RANDOM() * 2 - 1;\n    v4 = glMatrix.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\n * Transforms the vec4 with a mat4.\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec4} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\n * Transforms the vec4 with a quat\n *\n * @param {vec4} out the receiving vector\n * @param {ReadonlyVec4} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec4} out\n */\n\nexport function transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\n * Set the components of a vec4 to zero\n *\n * @param {vec4} out the receiving vector\n * @returns {vec4} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec4} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec4} a The first vector.\n * @param {ReadonlyVec4} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\n * Alias for {@link vec4.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec4.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec4.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec4.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec4.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec4.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec4s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();","import { checkVector, deprecated } from '../lib/validators';\nimport Matrix from './base/matrix';\nimport { vec2_transformMat4AsVector, vec3_transformMat4AsVector } from '../lib/gl-matrix-extras';\nimport * as mat4 from 'gl-matrix/mat4';\nimport * as vec2 from 'gl-matrix/vec2';\nimport * as vec3 from 'gl-matrix/vec3';\nimport * as vec4 from 'gl-matrix/vec4';\nconst IDENTITY = Object.freeze([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]);\nconst ZERO = Object.freeze([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);\nconst INDICES = Object.freeze({\n  COL0ROW0: 0,\n  COL0ROW1: 1,\n  COL0ROW2: 2,\n  COL0ROW3: 3,\n  COL1ROW0: 4,\n  COL1ROW1: 5,\n  COL1ROW2: 6,\n  COL1ROW3: 7,\n  COL2ROW0: 8,\n  COL2ROW1: 9,\n  COL2ROW2: 10,\n  COL2ROW3: 11,\n  COL3ROW0: 12,\n  COL3ROW1: 13,\n  COL3ROW2: 14,\n  COL3ROW3: 15\n});\nconst constants = {};\nexport default class Matrix4 extends Matrix {\n  static get IDENTITY() {\n    constants.IDENTITY = constants.IDENTITY || Object.freeze(new Matrix4(IDENTITY));\n    return constants.IDENTITY;\n  }\n\n  static get ZERO() {\n    constants.ZERO = constants.ZERO || Object.freeze(new Matrix4(ZERO));\n    return constants.ZERO;\n  }\n\n  get INDICES() {\n    return INDICES;\n  }\n\n  get ELEMENTS() {\n    return 16;\n  }\n\n  get RANK() {\n    return 4;\n  }\n\n  constructor(array) {\n    super(-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0);\n\n    if (arguments.length === 1 && Array.isArray(array)) {\n      this.copy(array);\n    } else {\n      this.identity();\n    }\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    this[4] = array[4];\n    this[5] = array[5];\n    this[6] = array[6];\n    this[7] = array[7];\n    this[8] = array[8];\n    this[9] = array[9];\n    this[10] = array[10];\n    this[11] = array[11];\n    this[12] = array[12];\n    this[13] = array[13];\n    this[14] = array[14];\n    this[15] = array[15];\n    return this.check();\n  }\n\n  set(m00, m10, m20, m30, m01, m11, m21, m31, m02, m12, m22, m32, m03, m13, m23, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  setRowMajor(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    this[0] = m00;\n    this[1] = m10;\n    this[2] = m20;\n    this[3] = m30;\n    this[4] = m01;\n    this[5] = m11;\n    this[6] = m21;\n    this[7] = m31;\n    this[8] = m02;\n    this[9] = m12;\n    this[10] = m22;\n    this[11] = m32;\n    this[12] = m03;\n    this[13] = m13;\n    this[14] = m23;\n    this[15] = m33;\n    return this.check();\n  }\n\n  toRowMajor(result) {\n    result[0] = this[0];\n    result[1] = this[4];\n    result[2] = this[8];\n    result[3] = this[12];\n    result[4] = this[1];\n    result[5] = this[5];\n    result[6] = this[9];\n    result[7] = this[13];\n    result[8] = this[2];\n    result[9] = this[6];\n    result[10] = this[10];\n    result[11] = this[14];\n    result[12] = this[3];\n    result[13] = this[7];\n    result[14] = this[11];\n    result[15] = this[15];\n    return result;\n  }\n\n  identity() {\n    return this.copy(IDENTITY);\n  }\n\n  fromQuaternion(q) {\n    mat4.fromQuat(this, q);\n    return this.check();\n  }\n\n  frustum({\n    left,\n    right,\n    bottom,\n    top,\n    near,\n    far\n  }) {\n    if (far === Infinity) {\n      Matrix4._computeInfinitePerspectiveOffCenter(this, left, right, bottom, top, near);\n    } else {\n      mat4.frustum(this, left, right, bottom, top, near, far);\n    }\n\n    return this.check();\n  }\n\n  static _computeInfinitePerspectiveOffCenter(result, left, right, bottom, top, near) {\n    const column0Row0 = 2.0 * near / (right - left);\n    const column1Row1 = 2.0 * near / (top - bottom);\n    const column2Row0 = (right + left) / (right - left);\n    const column2Row1 = (top + bottom) / (top - bottom);\n    const column2Row2 = -1.0;\n    const column2Row3 = -1.0;\n    const column3Row2 = -2.0 * near;\n    result[0] = column0Row0;\n    result[1] = 0.0;\n    result[2] = 0.0;\n    result[3] = 0.0;\n    result[4] = 0.0;\n    result[5] = column1Row1;\n    result[6] = 0.0;\n    result[7] = 0.0;\n    result[8] = column2Row0;\n    result[9] = column2Row1;\n    result[10] = column2Row2;\n    result[11] = column2Row3;\n    result[12] = 0.0;\n    result[13] = 0.0;\n    result[14] = column3Row2;\n    result[15] = 0.0;\n    return result;\n  }\n\n  lookAt(eye, center, up) {\n    if (arguments.length === 1) {\n      ({\n        eye,\n        center,\n        up\n      } = eye);\n    }\n\n    center = center || [0, 0, 0];\n    up = up || [0, 1, 0];\n    mat4.lookAt(this, eye, center, up);\n    return this.check();\n  }\n\n  ortho({\n    left,\n    right,\n    bottom,\n    top,\n    near = 0.1,\n    far = 500\n  }) {\n    mat4.ortho(this, left, right, bottom, top, near, far);\n    return this.check();\n  }\n\n  orthographic({\n    fovy = 45 * Math.PI / 180,\n    aspect = 1,\n    focalDistance = 1,\n    near = 0.1,\n    far = 500\n  }) {\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    const halfY = fovy / 2;\n    const top = focalDistance * Math.tan(halfY);\n    const right = top * aspect;\n    return new Matrix4().ortho({\n      left: -right,\n      right,\n      bottom: -top,\n      top,\n      near,\n      far\n    });\n  }\n\n  perspective({\n    fovy = undefined,\n    fov = 45 * Math.PI / 180,\n    aspect = 1,\n    near = 0.1,\n    far = 500\n  } = {}) {\n    fovy = fovy || fov;\n\n    if (fovy > Math.PI * 2) {\n      throw Error('radians');\n    }\n\n    mat4.perspective(this, fovy, aspect, near, far);\n    return this.check();\n  }\n\n  determinant() {\n    return mat4.determinant(this);\n  }\n\n  getScale(result = [-0, -0, -0]) {\n    result[0] = Math.sqrt(this[0] * this[0] + this[1] * this[1] + this[2] * this[2]);\n    result[1] = Math.sqrt(this[4] * this[4] + this[5] * this[5] + this[6] * this[6]);\n    result[2] = Math.sqrt(this[8] * this[8] + this[9] * this[9] + this[10] * this[10]);\n    return result;\n  }\n\n  getTranslation(result = [-0, -0, -0]) {\n    result[0] = this[12];\n    result[1] = this[13];\n    result[2] = this[14];\n    return result;\n  }\n\n  getRotation(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = 0;\n    result[4] = this[4] * inverseScale0;\n    result[5] = this[5] * inverseScale1;\n    result[6] = this[6] * inverseScale2;\n    result[7] = 0;\n    result[8] = this[8] * inverseScale0;\n    result[9] = this[9] * inverseScale1;\n    result[10] = this[10] * inverseScale2;\n    result[11] = 0;\n    result[12] = 0;\n    result[13] = 0;\n    result[14] = 0;\n    result[15] = 1;\n    return result;\n  }\n\n  getRotationMatrix3(result = [-0, -0, -0, -0, -0, -0, -0, -0, -0], scaleResult = null) {\n    const scale = this.getScale(scaleResult || [-0, -0, -0]);\n    const inverseScale0 = 1 / scale[0];\n    const inverseScale1 = 1 / scale[1];\n    const inverseScale2 = 1 / scale[2];\n    result[0] = this[0] * inverseScale0;\n    result[1] = this[1] * inverseScale1;\n    result[2] = this[2] * inverseScale2;\n    result[3] = this[4] * inverseScale0;\n    result[4] = this[5] * inverseScale1;\n    result[5] = this[6] * inverseScale2;\n    result[6] = this[8] * inverseScale0;\n    result[7] = this[9] * inverseScale1;\n    result[8] = this[10] * inverseScale2;\n    return result;\n  }\n\n  transpose() {\n    mat4.transpose(this, this);\n    return this.check();\n  }\n\n  invert() {\n    mat4.invert(this, this);\n    return this.check();\n  }\n\n  multiplyLeft(a) {\n    mat4.multiply(this, a, this);\n    return this.check();\n  }\n\n  multiplyRight(a) {\n    mat4.multiply(this, this, a);\n    return this.check();\n  }\n\n  rotateX(radians) {\n    mat4.rotateX(this, this, radians);\n    return this.check();\n  }\n\n  rotateY(radians) {\n    mat4.rotateY(this, this, radians);\n    return this.check();\n  }\n\n  rotateZ(radians) {\n    mat4.rotateZ(this, this, radians);\n    return this.check();\n  }\n\n  rotateXYZ([rx, ry, rz]) {\n    return this.rotateX(rx).rotateY(ry).rotateZ(rz);\n  }\n\n  rotateAxis(radians, axis) {\n    mat4.rotate(this, this, radians, axis);\n    return this.check();\n  }\n\n  scale(factor) {\n    if (Array.isArray(factor)) {\n      mat4.scale(this, this, factor);\n    } else {\n      mat4.scale(this, this, [factor, factor, factor]);\n    }\n\n    return this.check();\n  }\n\n  translate(vec) {\n    mat4.translate(this, this, vec);\n    return this.check();\n  }\n\n  transform(vector, result) {\n    if (vector.length === 4) {\n      result = vec4.transformMat4(result || [-0, -0, -0, -0], vector, this);\n      checkVector(result, 4);\n      return result;\n    }\n\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformAsPoint(vector, result) {\n    const {\n      length\n    } = vector;\n\n    switch (length) {\n      case 2:\n        result = vec2.transformMat4(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3.transformMat4(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  transformAsVector(vector, result) {\n    switch (vector.length) {\n      case 2:\n        result = vec2_transformMat4AsVector(result || [-0, -0], vector, this);\n        break;\n\n      case 3:\n        result = vec3_transformMat4AsVector(result || [-0, -0, -0], vector, this);\n        break;\n\n      default:\n        throw new Error('Illegal vector');\n    }\n\n    checkVector(result, vector.length);\n    return result;\n  }\n\n  makeRotationX(radians) {\n    return this.identity().rotateX(radians);\n  }\n\n  makeTranslation(x, y, z) {\n    return this.identity().translate([x, y, z]);\n  }\n\n  transformPoint(vector, result) {\n    deprecated('Matrix4.transformPoint', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformVector(vector, result) {\n    deprecated('Matrix4.transformVector', '3.0');\n    return this.transformAsPoint(vector, result);\n  }\n\n  transformDirection(vector, result) {\n    deprecated('Matrix4.transformDirection', '3.0');\n    return this.transformAsVector(vector, result);\n  }\n\n}\n//# sourceMappingURL=matrix4.js.map","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec2 from 'gl-matrix/vec2';\nimport { vec2_transformMat4AsVector } from '../lib/gl-matrix-extras';\nexport default class Vector2 extends Vector {\n  constructor(x = 0, y = 0) {\n    super(2);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n      }\n\n      this[0] = x;\n      this[1] = y;\n    }\n  }\n\n  set(x, y) {\n    this[0] = x;\n    this[1] = y;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    return this.check();\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 2;\n  }\n\n  horizontalAngle() {\n    return Math.atan2(this.y, this.x);\n  }\n\n  verticalAngle() {\n    return Math.atan2(this.x, this.y);\n  }\n\n  transform(matrix4) {\n    return this.transformAsPoint(matrix4);\n  }\n\n  transformAsPoint(matrix4) {\n    vec2.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformAsVector(matrix4) {\n    vec2_transformMat4AsVector(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec2.transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2x3(matrix2x3) {\n    vec2.transformMat2d(this, this, matrix2x3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec2.transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n}\n//# sourceMappingURL=vector2.js.map","import { Vector2 } from \"@math.gl/core\";\n\nexport interface LineEquation {\n  a: number;\n  b: number;\n  c: number;\n}\n\nexport interface CircunferenceEquation {\n  a: number;\n  b: number;\n  r: number;\n}\n\nexport interface PairPoints {\n  p1: Vector2;\n  p2: Vector2;\n}\n\nexport interface BhaskaraResult {\n  v1: number;\n  v2: number;\n}\n\nexport type SecondDegreeFunction = LineEquation\n\nexport const toRadians = (angle: number): number => (angle * Math.PI) / 180\n\nexport const toDegrees = (radian: number): number => (radian * 180) / Math.PI\n\nexport const distanceBetweenPointAndLine = (point: Vector2, line: LineEquation): number => \n  Math.abs(line.a*point.x + line.b*point.y + line.c)/Math.sqrt(line.a**2 + line.b**2)\n\nexport const intersectionPointsBetweenLineAndCircunference = \n  (line: LineEquation, circunference: CircunferenceEquation): PairPoints => {\n\n    if(line.a === line.b) {\n      throw new Error('The points are equal')\n    }\n\n    if(line.a !== 0 && line.b !== 0) {\n      const m = -line.a/line.b\n      const n = -line.c/line.b\n  \n      const a = 1 + m**2\n      const b = -2*circunference.a - 2*circunference.b*m + 2*m*n\n      const c = circunference.a**2 + circunference.b**2 - circunference.r**2 + n**2 - 2*circunference.b*n\n  \n      const intersectionX = bhaskara({a, b, c})\n  \n      if(!intersectionX) {\n        return null;\n      }\n  \n      const y1 = functionOfXFromLineEquation(line, intersectionX.v1)\n  \n      return {\n        p1: new Vector2(intersectionX.v1, y1),\n        p2: new Vector2(intersectionX.v2, intersectionX.v1 === intersectionX.v2 ? y1 : functionOfXFromLineEquation(line, intersectionX.v2)),\n      }\n    }\n    else if(line.a === 0 && line.b !== 0) {\n\n      const n = -line.c/line.b\n  \n      const a = 1\n      const b = -2*circunference.a\n      const c = circunference.a**2 + circunference.b**2 - circunference.r**2 + n**2 - 2*circunference.b*n\n\n      const intersectionX = bhaskara({a, b, c})\n  \n      if(!intersectionX) {\n        return null;\n      }\n  \n      const y1 = functionOfXFromLineEquation(line, intersectionX.v1)\n  \n      return {\n        p1: new Vector2(intersectionX.v1, y1),\n        p2: new Vector2(intersectionX.v2, intersectionX.v1 === intersectionX.v2 ? y1 : functionOfXFromLineEquation(line, intersectionX.v2)),\n      }\n\n    }\n\n    const n = -line.c/line.a\n  \n    const a = 1\n    const b = -2*circunference.b\n    const c = circunference.a**2 + circunference.b**2 - circunference.r**2 + n**2 - 2*circunference.a*n\n\n    const intersectionY = bhaskara({a, b, c})\n\n    if(!intersectionY) {\n      return null;\n    }\n\n    const x1 = functionOfYFromLineEquation(line, intersectionY.v1)\n\n    return {\n      p1: new Vector2(x1, intersectionY.v1),\n      p2: new Vector2(intersectionY.v1 === intersectionY.v2 ? x1 : functionOfYFromLineEquation(line, intersectionY.v2), intersectionY.v2),\n    }\n\n  }\n\nexport const lineEquationOf = (p1: Vector2, p2: Vector2): LineEquation => ({\n  a: p1.y - p2.y,\n  b: p2.x - p1.x,\n  c: p1.x*p2.y - p1.y*p2.x\n})\n\nexport const circunferenceEquationOf = (p1: Vector2, r: Vector2|number): CircunferenceEquation => ({\n  a: p1.x,\n  b: p1.y,\n  r: r instanceof Vector2 ? p1.distanceTo(r) : r\n})\n\nexport const functionOfXFromLineEquation = (line: LineEquation, x: number) => (-line.a*x - line.c)/line.b\nexport const functionOfYFromLineEquation = (line: LineEquation, y: number) => (-line.b*y - line.c)/line.a\n\nexport const bhaskara = (f: SecondDegreeFunction): BhaskaraResult => {\n  const delta = f.b**2 - 4*f.a*f.c\n\n  if(delta < 0) return null\n\n  const rDelta = Math.sqrt(delta)\n\n  const x1 = (-f.b + rDelta)/(2*f.a)\n\n  const x2 = delta === 0 ? x1 : (-f.b - rDelta)/(2*f.a)\n\n  return {v1: x1, v2: x2}\n}\n\n/*============================\n            VECTORS\n=============================*/\n\n\n","import Orientation from \"./Orientation\"\nimport {Vector3, Pose, Euler, Matrix4} from \"@math.gl/core\"\nimport { toRadians } from \"./math\";\nimport Scene from \"@razor/core/scenes/Scene\";\nimport Entity from \"@razor/core/entities/Entity\";\n\nclass Transform {\n\n    private _entity : Entity;\n    private _translation: Vector3;\n    private _rotation: Orientation;\n    private _scale: Vector3;\n    private _children : Scene;\n    private _parent : Transform;\n\n    public constructor(translation?: Vector3, rotation?: Orientation, scale?: Vector3) {\n        this._translation = translation ?? new Vector3()\n        this._rotation = rotation ?? new Orientation()\n        this._scale = scale ?? new Vector3(1, 1, 1)\n        \n    }\n    \n    public setEntity(entity : Entity){\n        this._entity = entity;\n        this._children = new Scene(entity.getName()+\"_children\");\n    }\n\n    public get children() : Scene{\n        return this._children;\n    }\n\n    public set parent(parent : Transform) {\n        //entity.getTransform().children.add(this._entity);\n        this._parent = parent;\n    }\n\n    public get parent(){\n        return this._parent;\n    }\n    \n    public getTranslation() : Vector3 {\n        return new Vector3(\n            this._translation.x, \n            this._translation.y, \n            this._translation.z\n        )\n    }\n\n    public setTranslation(translation: Vector3) {\n        this._translation.x = translation.x\n        this._translation.y = translation.y\n        this._translation.z = translation.z\n    }\n\n    public setX(x: number) {\n        this._translation.x = x\n    }\n    public setY(y: number) {\n        this._translation.y = y\n    }\n    public setZ(z: number) {\n        this._translation.z = z\n    }\n    public getX(): number {\n        return this._translation.x\n    }\n    public getY(): number {\n        return this._translation.y\n    }\n    public getZ(): number {\n        return this._translation.z\n    }\n\n    public getRotation() : Orientation {\n        return new Orientation(this._rotation.pitch, this._rotation.yaw, this._rotation.roll)\n    }\n\n    public setRotation(rotation: Orientation) {\n        this._fixRotation(rotation.pitch, (v) => {this._rotation.pitch = v})\n        this._fixRotation(rotation.yaw, (v) => {this._rotation.yaw = v})\n        this._fixRotation(rotation.roll, (v) => {this._rotation.roll = v})\n    }\n\n    public setPitch(pitch: number) {\n        this._fixRotation(pitch, (v) => {this._rotation.pitch = v})\n    }\n    public setYaw(yaw: number) {\n        this._fixRotation(yaw, (v) => {this._rotation.yaw = v})\n    }\n    public setRoll(roll: number) {\n        this._fixRotation(roll, (v) => {this._rotation.roll = v})\n    }\n    public getPitch(): number {\n        return this._rotation.pitch\n    }\n    public getYaw(): number {\n        return this._rotation.yaw\n    }\n    public getRoll(): number {\n        return this._rotation.roll\n    }\n\n    private _fixRotation(v: number, set: (v: number) => void): void {\n        if(v >= 360) {\n            v %= 360\n            v -= 360\n        }\n        if(v <= -360) {\n            v %= 360\n            v += 360\n        }\n        set(v)\n    }\n\n    public getScale() : Vector3 {\n        return new Vector3(this._scale.x, this._scale.y, this._scale.z)\n    }\n\n    public setScale(scale: Vector3) {\n        this._scale = scale\n    }\n\n    public toMatrix() : Matrix4 {\n\n        const translation = new Matrix4().translate(this._translation.clone().negate());\n\n        //const rotation = new Matrix4().fromQuaternion(this._rotation);\n        //const rotation = this._rotation.getRotationMatrix();\n        \n\n        const rotationX = new Matrix4().rotateX(toRadians(this._rotation.pitch))\n        const rotationY = new Matrix4().rotateY(toRadians(this._rotation.yaw))\n        const rotationZ = new Matrix4().rotateZ(toRadians(this._rotation.roll))\n\n        const rotation = rotationX.multiplyRight(rotationY.multiplyRight(rotationZ))\n\n        const scale = new Matrix4().scale(this._scale);\n\n        return translation.multiplyRight(rotation.multiplyRight(scale))\n        //return scale.multiplyRight(this._pose.getTransformationMatrix())\n    }\n\n    public toInversePositionMatrix() : Matrix4 {\n\n        const translation = new Matrix4().translate(this._translation.clone());\n\n        const rotationX = new Matrix4().rotateX(toRadians(this._rotation.pitch))\n        const rotationY = new Matrix4().rotateY(toRadians(this._rotation.yaw))\n        const rotationZ = new Matrix4().rotateZ(toRadians(this._rotation.roll))\n\n        const rotation = rotationX.multiplyRight(rotationY.multiplyRight(rotationZ))\n\n        const scale = new Matrix4().scale(this._scale);\n\n        return translation.multiplyRight(rotation.multiplyRight(scale))\n    }\n\n    public worldMatrix() : Matrix4{\n        const localMatrix = this.toMatrix();\n        let worldMatrix = localMatrix.clone();\n        if(this._parent){\n            worldMatrix = this._parent.worldMatrix().multiplyRight(localMatrix);\n        }\n        return worldMatrix;\n    }\n\n    public worldMatrixFrom(transform: Transform): Matrix4 {\n        const translation = new Matrix4().translate(transform.getTranslation());\n\n        const rotationX = new Matrix4().rotateX(toRadians(transform.getPitch()))\n        const rotationY = new Matrix4().rotateY(toRadians(transform.getYaw()))\n        const rotationZ = new Matrix4().rotateZ(toRadians(transform.getRoll()))\n\n        const rotation = rotationX.multiplyRight(rotationY.multiplyRight(rotationZ))\n\n        const scale = new Matrix4().scale(transform.getScale());\n\n        return translation.multiplyRight(rotation.multiplyRight(scale))\n    }\n    \n    public worldTranslation(): Vector3 {\n        let worldTranslation = this._translation.clone()\n        if(this._parent){\n            worldTranslation = this._parent.worldTranslation().add(worldTranslation);\n        }\n        return worldTranslation;\n    }\n\n}\n\nexport default Transform","import VAO from \"../../buffer/VAO\";\nimport Renderer from \"../../renderer/Renderer\";\nimport Transform from \"../../math/Transform\"\nimport Material from \"../../appearance/material/Material\";\nimport Scene from \"../scenes/Scene\";\nimport { Matrix4 } from \"@math.gl/core\";\n\ntype Constructor<T> = { new (...args: any[]): T };\n\ntype NonConstructorKeys<T> = ({[P in keyof T]: T[P] extends new () => any ? never : P })[keyof T];\ntype NonConstructor<T> = Pick<T, NonConstructorKeys<T>>;\nexport type ModelStatic<M extends Entity> = NonConstructor<typeof Entity> & { new(...args: any[]): M };\n\nabstract class Entity {\n\n    private _name: string;\n\n    private _vao: VAO;\n    private _material: Material;\n    private _renderer: Renderer;\n\n    private _transform: Transform\n    private _scene : Scene;\n\n    private static _listEntities: Map<string,Entity> = new Map();\n\n    public constructor(name: string, vao?: VAO, material?: Material, renderer?: Renderer) {\n        Entity._listEntities.set(name,this);\n        this._name = name;\n        this._vao = vao;\n        this._material = material;\n        this._renderer = renderer;\n        this._transform = new Transform()\n        this.getTransform().setEntity(this);\n    }\n\n    public static Find<T extends Entity>(this : ModelStatic<T>,name: string) : T{\n        return Entity._listEntities.get(name) as T;\n    }\n\n    //public abstract start() : void;\n\n    public abstract update(time: number, delta: number): void;\n\n    public render(): void{\n\n    }\n\n    public setVAO(vao: VAO) {\n        this._vao = vao\n    }\n    \n    public setMaterial(material: Material) {\n        this._material = material\n    }\n\n    public setRenderer(renderer: Renderer) {\n        this._renderer = renderer;\n    }\n    \n    public getVAO() : VAO {\n        return this._vao\n    }\n    \n    public getMaterial() : Material {\n        return this._material\n    }\n\n    public getRenderer(): Renderer {\n        return this._renderer;\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n    public getTransform() : Transform {\n        return this._transform\n    }\n\n    public setScene(scene : Scene) : void{\n        this._scene = scene;\n    }\n\n    public getScene() : Scene{\n        return this._scene;\n    }\n\n}\n\nexport default Entity;","import RenderStrategy from \"@razor/renderer/RenderStrategy\";\nimport Entity from \"../entities/Entity\";\n\nclass Scene {\n\n    private _name: string;\n\n    /* All entities */\n    private _entities: Map<string, Entity>;\n    /* Only visible entities */\n    private _visible: Map<string, Entity>;\n    /* Only hidden entities */\n    private _hidden: Map<string, Entity>;\n\n    private _renderStrategy: RenderStrategy\n\n    public constructor(name: string) {\n        this._name = name;\n        this._entities = new Map<string, Entity>();\n        this._visible = new Map<string, Entity>();\n        this._hidden = new Map<string, Entity>();\n        this._renderStrategy = new RenderStrategy()\n    }\n\n    public update(time: number, delta: number): void {\n        this.forEachVisible((entity) => {\n            entity.update(time, delta);\n        })\n    }\n\n    public render(): void {\n        this._renderStrategy.render(this);\n    }\n\n    /**\n     * Adds a new entity, visible by default\n     * @param entity entity or the name of the entity to be added\n     * @param visible default visibility\n     */\n    public add(entity: Entity, visible: boolean = true): Scene {\n        const key: string = this._validate(entity, this._entities);\n        entity.setScene(this);\n        this._entities.set(entity.getName(), entity);\n        if(visible) {\n            this._visible.set(entity.getName(), entity);\n        }\n        else { \n            this._hidden.set(entity.getName(), entity);\n        }\n        return this\n    }\n\n    /**\n     * Remove an existent entity\n     * @param entity entity or the name of the entity to be removed\n     */\n    public remove(entity: Entity|string): Scene {\n        const key: string = this._validate(entity, this._entities, false);\n        this._entities.delete(key);\n        if(this._visible.has(key)) {\n            this._visible.delete(key);\n        }\n        if(this._hidden.has(key)) {\n            this._hidden.delete(key);\n        }\n        return this\n    }\n\n    /**\n     * Sets the visibility of an existent entity\n     * @param entity entity or the name of the entity to have the visibility changed\n     * @param visible the visibility value\n     */\n    public setVisibility(entity: Entity|string, visible: boolean): Scene|never {\n        const key: string = this._validate(entity, this._entities, false);\n        if(visible) {\n            this._visible.set(key, this._hidden.get(key));\n            this._hidden.delete(key);\n        } else {\n            this._hidden.set(key, this._visible.get(key));\n            this._visible.delete(key);\n        }\n        return this\n    }\n\n    /**\n     * Returns an existent entity\n     * @param entity the name of the entity to be returned\n     */\n    public get(name: string): Entity {\n        this._validate(name, this._entities, false);\n        return this._entities.get(name);\n    }\n\n    /**\n     * Returns the keys of all entities\n     */\n    public getKeys(): string[] {\n        return this._keys(this._entities);\n    }\n\n    /**\n     * Returns the keys of only the visible entities\n     */\n    public getKeysFromVisible(): string[] {\n        return this._keys(this._visible);\n    }\n\n    /**\n     * Returns the keys of only the hidden entities\n     */\n    public getKeysFromHidden(): string[] {\n        return this._keys(this._hidden);\n    }\n\n    /**\n     * Common behavior pattern for 'getKeys' methods\n     */\n    private _keys = (map: Map<string, Entity>): string[] => [...map.keys()];\n\n    /**\n     * Iterates all entities\n     * @param fn do something with each entity\n     */\n    public forEach(fn: (entity: Entity, key?: string) => void): Scene {\n        this._forEach(fn, this._entities);\n        return this\n    }\n\n    /**\n     * Iterates visible entities\n     * @param fn do something with each entity\n     */\n    public forEachVisible(fn: (entity: Entity, key?: string) => void): Scene {\n        this._forEach(fn, this._visible);\n        return this\n    }\n    /**\n     * Iterates hidden entities\n     * @param fn do something with each entity\n     */\n    public forEachHidden(fn: (entity: Entity, key?: string) => void): Scene {\n        this._forEach(fn, this._hidden);\n        return this\n    }\n\n    /**\n     * Common behavior pattern for 'forEach' methods\n     * @param fn do something with each entity\n     * @param map map to be iterated\n     */\n    private _forEach(fn: (entity: Entity, key?: string) => void, map: Map<string, Entity>): void {\n        map.forEach(fn)\n    }\n\n    /**\n     * Checks if there is a given entity\n     * @param entity entity or the name of the entity to be checked\n     */\n    public has(entity: Entity|string): boolean {\n        return this._has(entity, this._entities);\n    }\n\n    /**\n     * Checks if there is a given entity among the visibles\n     * @param entity entity or the name of the entity to be checked\n     */\n    public hasInVisible(entity: Entity|string): boolean {\n        return this._has(entity, this._visible);\n    }\n\n    /**\n     * Checks if there is a given entity among the hiddens\n     * @param entity entity or the name of the entity to be checked\n     */\n    public hasInHidden(entity: Entity|string): boolean {\n        return this._has(entity, this._hidden);\n    }\n\n    /**\n     * Common behavior pattern for 'has' methods\n     * @param entity entity or the name of the entity to be checked\n     * @param map map to be iterated\n     */\n    private _has(entity: Entity|string, map: Map<string, Entity>): boolean {\n        const name = this._getName(entity);\n        return map.has(name);\n    }\n\n    public filterVisible(predicate: (entity: Entity) => boolean): Entity[] {\n        const filterResult = []\n        this._visible.forEach((entity) => {\n            if(predicate(entity)) {\n                filterResult.push(entity)\n            }\n        })\n        return filterResult\n    }\n\n    /**\n     * Validates the existence or not of a given entity in a given map and\n     * returns the entity key in case of success.\n     * Fail case is defined by 'exists' param.\n     * @param entity entity or the name of the entity to be validated\n     * @param map map where entity should exists or not\n     * @param exists fail case of the validation\n     * @returns the entity name\n     */\n    private _validate(entity: Entity|string, map: Map<string, Entity>, exists: boolean = true): string|never {\n        const name = this._getName(entity);\n        if(exists && map.has(name)) {\n            throw new Error(`Entity ${name} already exists!`);\n        }\n        if(!exists && !map.has(name)) {\n            throw new Error(`Entity ${name} does not exists!`);\n        }\n        return name;\n    }\n\n    /**\n     * Resolves the entity name\n     * @param entity entity or the name of the entity to be resolved\n     */\n    private _getName(entity: Entity|string): string {\n        return entity instanceof Entity ? entity.getName() : entity;\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n    public get entities() : Map<string, Entity> {\n        return this._entities;\n    }\n\n    public getRenderStrategy(): RenderStrategy {\n        return this._renderStrategy\n    }\n\n}\n\nexport default Scene;","import Scene from \"../core/scenes/Scene\";\nimport Renderer from \"./Renderer\"\n\nclass RenderStrategy {\n\n    private _renderers: Map<string, Renderer>\n\n    public constructor() {\n        this._renderers = new Map<string, Renderer>()\n    }\n\n    public render(scene: Scene) {\n        this._renderers.forEach((renderer) => {\n            renderer.setScene(scene);\n            renderer.render();\n        })\n    }\n\n    /**\n     * Adds a new renderer\n     * @param renderer renderer or the name of the renderer to be added\n     */\n     public add(renderer: Renderer, active: boolean = false): void {\n        const key: string = this._validate(renderer);\n        this._renderers.set(key, renderer);\n    }\n\n    /**\n     * Remove an existent renderer\n     * @param renderer renderer or the name of the renderer to be removed\n     */\n    public remove(renderer: Renderer|string): void {\n        const key: string = this._validate(renderer, false);\n        this._renderers.delete(key);\n    }\n\n    /**\n     * Returns an existent renderer\n     * @param name the name of the renderer to be returned\n     */\n    public get(name: string): Renderer {\n        this._validate(name, false);\n        return this._renderers.get(name);\n    }\n\n    /**\n     * Returns the keys of all scenes\n     */\n    public getKeys(): string[] {\n        return [...this._renderers.keys()];\n    }\n\n    /**\n     * Iterates all scenes\n     * @param fn do something with each scene\n     */\n    public forEach(fn: (renderer: Renderer, key?: string) => void): void {\n        this._renderers.forEach((renderer, key) => {\n            fn(renderer, key);\n        })\n    }\n\n    /**\n     * Checks if there is a given renderer\n     * @param renderer renderer or the name of the renderer to be checked\n     */\n    public has(renderer: Renderer|string): boolean {\n        const name = this._getName(renderer);\n        return this._renderers.has(name);\n    }\n\n    /**\n     * Validates the existence or not of a given renderer and\n     * returns the renderer key in case of success.\n     * Fail case is defined by 'exists' param.\n     * @param renderer renderer or the name of the renderer to be validated\n     * @param exists fail case of the validation\n     * @returns the scene name\n     */\n    private _validate(renderer: Renderer|string, exists: boolean = true): string|never {\n        const name = this._getName(renderer);\n        if(exists && this._renderers.has(name)) {\n            throw new Error(`Renderer ${name} already exists!`);\n        }\n        if(!exists && !this._renderers.has(name)) {\n            throw new Error(`Renderer ${name} does not exists!`);\n        }\n        return name;\n    }\n\n    /**\n     * Resolves the scene name\n     * @param scene scene or the name of the scene to be resolved\n     */\n    private _getName(renderer: Renderer|string): string {\n        return renderer instanceof Renderer ? renderer.getName() : renderer;\n    }\n\n}\n\nexport default RenderStrategy","import RenderStrategy from \"../../renderer/RenderStrategy\";\nimport Scene from \"./Scene\";\nimport Event from \"src/event\";\n\nclass SceneManager {\n\n    /* All entities */\n    private _scenes: Map<string, Scene>;\n    /* Active scene: the scene that is being rendered currently */\n    private _active: Scene;\n\n    public constructor() {\n        this._scenes = new Map<string, Scene>();\n        this._active = null;\n    }\n\n    public render(): void {\n        this._active.render()\n    }\n\n    public update(time: number, delta: number): void {\n        this._active.update(time, delta);\n    }\n\n    /**\n     * Adds a new scene, not active by default\n     * @param scene scene or the name of the scene to be added\n     * @param active set de scene to be active\n     */\n    public add(scene: Scene, active: boolean = false): SceneManager {\n        const key: string = this._validate(scene);\n        this._scenes.set(key, scene);\n        if(active) {\n            this._active = scene;\n            Event.trigger(\"loadScene\",this._active);\n        }\n        return this\n    }\n\n    /**\n     * Remove an existent scene\n     * @param scene scene or the name of the scene to be removed\n     */\n    public remove(scene: Scene|string): SceneManager {\n        const key: string = this._validate(scene, false);\n        this._scenes.delete(key);\n        if(this._active.getName() === key) {\n            this._active = null;\n        }\n        return this\n    }\n\n    /**\n     * Sets the active scene\n     * @param scene scene or the name of the scene to become active\n     */\n    public setActive(scene: Scene|string): SceneManager|never {\n        const key: string = this._validate(scene, false);\n        this._active = this._scenes.get(key);\n        Event.trigger(\"loadScene\",this._active);\n\n        return this\n    }\n\n    public getActive(): Scene {\n        return this._active;\n    }\n\n    /**\n     * Returns an existent scene\n     * @param scene the name of the scene to be returned\n     */\n    public get(name: string): Scene {\n        this._validate(name, false);\n        return this._scenes.get(name);\n    }\n\n    /**\n     * Returns the keys of all scenes\n     */\n    public getKeys(): string[] {\n        return [...this._scenes.keys()];\n    }\n\n    /**\n     * Iterates all scenes\n     * @param fn do something with each scene\n     */\n    public forEach(fn: (scene: Scene, key?: string) => void): SceneManager {\n        this._scenes.forEach((scene, key) => {\n            fn(scene, key);\n        })\n        return this\n    }\n\n    /**\n     * Checks if there is a given scene\n     * @param scene scene or the name of the scene to be checked\n     */\n    public has(scene: Scene|string): boolean {\n        const name = this._getName(scene);\n        return this._scenes.has(name);\n    }\n\n    /**\n     * Validates the existence or not of a given scene and\n     * returns the scene key in case of success.\n     * Fail case is defined by 'exists' param.\n     * @param scene scene or the name of the scene to be validated\n     * @param exists fail case of the validation\n     * @returns the scene name\n     */\n    private _validate(scene: Scene|string, exists: boolean = true): string|never {\n        const name = this._getName(scene);\n        if(exists && this._scenes.has(name)) {\n            throw new Error(`Scene ${name} already exists!`);\n        }\n        if(!exists && !this._scenes.has(name)) {\n            throw new Error(`Scene ${name} does not exists!`);\n        }\n        return name;\n    }\n\n    /**\n     * Resolves the scene name\n     * @param scene scene or the name of the scene to be resolved\n     */\n    private _getName(scene: Scene|string): string {\n        return scene instanceof Scene ? scene.getName() : scene;\n    }\n\n}\n\nexport default SceneManager;","\n\n/*\n\nvar xhr = new XMLHttpRequest();\nxhr.open(\"GET\", \"/bar/foo.txt\", true);\nxhr.onload = function (e) {\n  if (xhr.readyState === 4) {\n    if (xhr.status === 200) {\n      console.log(xhr.responseText);\n    } else {\n      console.error(xhr.statusText);\n    }\n  }\n};\nxhr.onerror = function (e) {\n  console.error(xhr.statusText);\n};\nxhr.send(null); \n\n\n*/\n\nclass FileUtils {\n\n    public static load(\n        pathname: string, \n        onSuccess: (file: any) => void, \n        onError: (err: string) => void\n        ) : void {\n\n        const xmlHttpRequest = new XMLHttpRequest();\n        xmlHttpRequest.open('GET', pathname, false);\n\n        xmlHttpRequest.onload = () => onSuccess(xmlHttpRequest.responseText);\n        xmlHttpRequest.onerror = () => onError(xmlHttpRequest.statusText);\n\n        xmlHttpRequest.send(null);\n\n    }\n\n    public static async loadAsync(pathname: string) : Promise<string> {\n        let reader : ReadableStreamDefaultReader<Uint8Array>;\n\n        await fetch(pathname)\n        .then(res => res.body)\n        .then(async body => {\n            reader = body.getReader()\n        })\n\n        return reader.read()\n            .then((stream) => new TextDecoder().decode(stream.value))\n    }\n}\n\nexport default FileUtils;","import { gl } from \"../gl/GLUtils\";\n//import Float32Buffer from \"../utils/Float32Buffer\";\n//import Int32Buffer from \"../utils/Int32Buffer\";\n\ntype IntTypedArray = BigInt64Array | Int32Array | Int16Array | Int8Array ;\ntype UintTypedArray = BigUint64Array | Uint32Array | Uint16Array | Uint8Array ;\ntype FloatTypedArray = Float64Array | Float32Array;\ntype TypedArray = IntTypedArray | UintTypedArray | FloatTypedArray;\n\nclass VBO {\n\n    _id : WebGLBuffer;\n    _buffer : TypedArray;\n    _offset : number;\n    _created : boolean;\n    _isAttribute : boolean;\n    _usage: number;\n    \n    public constructor(buffer: TypedArray, offset: number, isAttribute: boolean,usage : number = gl.STATIC_DRAW) {\n        this._buffer = buffer;\n        this._offset = offset;\n        this._created = false;\n        this._isAttribute = isAttribute;\n        this._usage = usage;\n    }\n\n    public getUsage() : number{\n        return this._usage;\n    }\n\n    public getId(): WebGLBuffer {\n        return this._id;\n    }\n\n    public setId(id : WebGLBuffer): void {\n        this._id = id;\n    }\n\n    public getBuffer() : TypedArray {\n        return this._buffer;\n    }\n\n    public setBuffer(buffer : TypedArray) : void {\n        this._buffer = buffer;\n    }\n\n    public getOffset(): number {\n        return this._offset;\n    }\n\n    public setCreated(isCreated: boolean) : void{\n        this._created = isCreated;\n    }\n\n    public isCreated() : boolean {\n        return this._created;\n    }\n\n    public getType(): number {\n        return this._isAttribute ? gl.ARRAY_BUFFER : gl.ELEMENT_ARRAY_BUFFER;\n    }\n\n    public getLength(): number {\n        return this._buffer.length;\n    }\n    \n}\n\nexport default VBO;","\nimport { gl } from '../gl/GLUtils';\nimport IResource from '../appearance/IResource';\nimport VBO from './VBO';\n\nexport interface VAOType {\n    name: string;\n    objectData: string | VBO[] | (() => VAO);\n}\n\nclass VAO implements IResource {\n\n    private _vboList: VBO[];\n    private _ibo: VBO;\n    private _vertexCoordsOffset: number\n\n    public constructor(vboList: VBO[], vertexCoordsOffset: number = 3) {\n        this._vboList = [];\n        vboList.forEach((vbo) => {\n            if (vbo !== null && vbo !== undefined) {\n                this._vboList.push(vbo);\n                if (vbo.getType() === gl.ELEMENT_ARRAY_BUFFER) {\n                    this._ibo = vbo;\n                }\n            }\n        })\n        if (vboList.length > 0 && !this._ibo) {\n            this._ibo = vboList[0];\n        }\n        this._vertexCoordsOffset = vertexCoordsOffset\n    }\n\n    public addEmpty(n : number){\n        const vbo = [] as VBO[];\n        for(let i=0;i<n;i++) vbo.push(new VBO(new Float32Array([]), 2, true, gl.DYNAMIC_DRAW));\n        this._vboList = vbo;\n        this._ibo = this._vboList[0]\n    }\n\n    public create(): void {\n        for (let i = 0; i < this._vboList.length; i++) {\n            this._createVBO(i, this._vboList[i]);\n        }\n    }\n\n    private _createVBO(target: number, vbo: VBO): void {\n        if(vbo.getId() == null) vbo.setId(gl.createBuffer());\n        gl.bindBuffer(vbo.getType(), vbo.getId());\n        if(vbo.getBuffer().length > 0) gl.bufferData(vbo.getType(), vbo.getBuffer(), vbo.getUsage());\n\n        if (vbo.getType() === gl.ARRAY_BUFFER) {\n            this._setAttributePointer(target, vbo);\n        }\n\n        gl.bindBuffer(vbo.getType(), undefined);\n    }\n\n    public bind(): void {\n        for (let i = 0; i < this._vboList.length; i++) {\n            gl.bindBuffer(this._vboList[i].getType(), this._vboList[i].getId());\n            if (this._vboList[i].getType() !== gl.ELEMENT_ARRAY_BUFFER) {\n                this._setAttributePointer(i, this._vboList[i])\n                gl.enableVertexAttribArray(i);\n            }\n        }\n    }\n\n    public unbind(): void {\n        for (let i = this._vboList.length - 1; i >= 0; i--) {\n            gl.bindBuffer(this._vboList[i].getType(), this._vboList[i].getId());\n            if (this._vboList[i].getType() !== gl.ELEMENT_ARRAY_BUFFER) {\n                gl.disableVertexAttribArray(i);\n            }\n        }\n    }\n\n    public destroy(): void {\n        for (let i = this._vboList.length - 1; i >= 0; i--) {\n            gl.deleteBuffer(this._vboList[i].getId());\n        }\n    }\n\n    private _setAttributePointer(target: number, vbo: VBO): void {\n\n        const setAttributePointer = (dataType) => {\n            gl.vertexAttribPointer(target, vbo.getOffset(), dataType, false, 0, 0);\n        }\n\n        if (vbo.getBuffer() instanceof Int8Array) {\n            setAttributePointer(gl.BYTE);\n        }\n        if (vbo.getBuffer() instanceof Int16Array) {\n            setAttributePointer(gl.SHORT);\n        }\n        if (vbo.getBuffer() instanceof Int32Array) {\n            setAttributePointer(gl.INT);\n        }\n        if (vbo.getBuffer() instanceof Uint8Array) {\n            setAttributePointer(gl.UNSIGNED_BYTE);\n        }\n        if (vbo.getBuffer() instanceof Uint16Array) {\n            setAttributePointer(gl.UNSIGNED_SHORT);\n        }\n        if (vbo.getBuffer() instanceof Uint32Array) {\n            setAttributePointer(gl.UNSIGNED_INT);\n        }\n        if (vbo.getBuffer() instanceof Float32Array) {\n            setAttributePointer(gl.FLOAT);\n        }\n\n    }\n\n    public getVbo(i: number): VBO {\n        return this._vboList[i];\n    }\n\n    public getIbo(): VBO {\n        return this._ibo;\n    }\n\n    public getLength(): number {\n        if (!this._ibo) return 0;\n        return this._ibo.getLength() / this._vertexCoordsOffset;\n    }\n\n}\n\nexport default VAO;","import OBJFile from 'obj-file-parser'\nimport VAO from '../buffer/VAO'\nimport VBO from '../buffer/VBO';\nimport FileUtils from '../utils/FileUtils';\n\n\nexport interface HitboxesJSON {\n    circle: {\n        [name: string]: {\n            radius: number\n        }\n    },\n    edge: {\n        [name: string]: {\n            indices: number[],\n            vertices: number[]\n        }\n    }\n}\n\nclass OBJLoader {\n    \n\n    public load(pathname: string): VAO {\n\n        let vao = null\n\n        FileUtils.load(\n            pathname, \n            function onSuccess(file) {\n\n                const data = new OBJFile(file).parse()\n\n                const vbos = []\n                const vertices = []\n                const normals = []\n                const uvCoords = []\n\n                //console.log(data);\n\n                data.models[0].faces.forEach((face) => {\n                    const v0 = face.vertices[0].vertexIndex-1\n                    const v1 = face.vertices[1].vertexIndex-1\n                    const v2 = face.vertices[2].vertexIndex-1\n\n                    vertices.push(data.models[0].vertices[v0].x)\n                    vertices.push(data.models[0].vertices[v0].y)\n                    vertices.push(data.models[0].vertices[v0].z)\n\n                    vertices.push(data.models[0].vertices[v1].x)\n                    vertices.push(data.models[0].vertices[v1].y)\n                    vertices.push(data.models[0].vertices[v1].z)\n\n                    vertices.push(data.models[0].vertices[v2].x)\n                    vertices.push(data.models[0].vertices[v2].y)\n                    vertices.push(data.models[0].vertices[v2].z)\n\n                    if(\n                        data.models[0].vertexNormals && \n                        data.models[0].vertexNormals.length > 0\n                    ) {\n                        const n0 = face.vertices[0].vertexNormalIndex-1\n                        const n1 = face.vertices[1].vertexNormalIndex-1\n                        const n2 = face.vertices[2].vertexNormalIndex-1\n    \n                        normals.push(data.models[0].vertexNormals[n0].x)\n                        normals.push(data.models[0].vertexNormals[n0].y)\n                        normals.push(data.models[0].vertexNormals[n0].z)\n    \n                        normals.push(data.models[0].vertexNormals[n1].x)\n                        normals.push(data.models[0].vertexNormals[n1].y)\n                        normals.push(data.models[0].vertexNormals[n1].z)\n    \n                        normals.push(data.models[0].vertexNormals[n2].x)\n                        normals.push(data.models[0].vertexNormals[n2].y)\n                        normals.push(data.models[0].vertexNormals[n2].z)\n                    }\n\n                    if(\n                        data.models[0].textureCoords && \n                        data.models[0].textureCoords.length > 0\n                    ) {\n                        const uv0 = face.vertices[0].textureCoordsIndex-1\n                        const uv1 = face.vertices[1].textureCoordsIndex-1\n                        const uv2 = face.vertices[2].textureCoordsIndex-1\n    \n                        uvCoords.push(data.models[0].textureCoords[uv0].u)\n                        uvCoords.push(data.models[0].textureCoords[uv0].v)\n                        //normals.push(data.models[0].textureCoords[uv0].w)\n    \n                        uvCoords.push(data.models[0].textureCoords[uv1].u)\n                        uvCoords.push(data.models[0].textureCoords[uv1].v)\n                        //normals.push(data.models[0].textureCoords[uv1].w)\n    \n                        uvCoords.push(data.models[0].textureCoords[uv2].u)\n                        uvCoords.push(data.models[0].textureCoords[uv2].v)\n                        //normals.push(data.models[0].textureCoords[uv2].w)\n                    }\n                })\n\n                vbos.push(new VBO(new Float32Array(vertices), 3, true))\n\n                if(normals.length > 0) {\n                    vbos.push(new VBO(new Float32Array(normals), 3, true))\n                }\n                if(uvCoords.length > 0) {\n                    vbos.push(new VBO(new Float32Array(uvCoords), 2, true))\n                }\n\n                vao = new VAO(vbos)\n                \n            },\n            function onError(err) {\n                throw new Error(`Error trying to load object data: ${pathname}.\\n ${err}`);\n            },\n        );\n\n        return vao\n    }\n\n\n    public loadHitboxes(pathname: string): HitboxesJSON {\n\n        let data: HitboxesJSON\n\n        FileUtils.load(\n            pathname, \n            function onSuccess(file) {\n                data = JSON.parse(file)\n            },\n            function onError(err) {\n                throw new Error(`Error trying to load hitbox data: ${pathname}.\\n ${err}`);\n            },\n        )\n\n        return data\n\n    }\n\n}\n\nexport default OBJLoader","import { gl } from \"../gl/GLUtils\"\nimport IResource from \"./IResource\"\n\nexport interface TextureType {\n  name: string\n  pathname?: string\n  texture?: Texture | (() => Texture)\n}\n\nclass Texture implements IResource{\n\n  private _program: WebGLTexture\n  private _width: number\n  private _height: number\n\n  private _created: boolean\n\n  private _data: Uint8Array\n\n  public constructor(width: number = 0, height: number = 0, data: Uint8Array = null) {\n    this._width = width\n    this._height = height\n    this._data = data\n    this._created = false\n    const observer = setInterval(() => {\n      if(this._created && this._data) {\n       // console.log(this);\n        \n        this._bindData()\n        clearInterval(observer)\n      }\n    }, 100)\n  }\n\n  public create() {\n\n    if(!this._created) {\n      this._program = gl.createTexture();\n    \n      if(this._data) {\n        this._bindData()\n      }\n      \n      if((this._width < 1 || this._height < 1) && this._data) {\n        throw new Error(\"Invalid image size!\")\n      }\n\n      this._created = true\n    }\n\n  }\n\n  public bind() {\n    gl.bindTexture(gl.TEXTURE_2D, this._program);\n    \n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n  }\n\n  public unbind() {\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  public destroy() {\n    gl.deleteTexture(this._program)\n    this._created = false\n  }\n\n  public getWidth(): number {\n    return this._width\n  }\n\n  public getHeight(): number {\n    return this._height\n  }\n\n  public setWidth(width: number): void {\n    this._width = width\n  }\n\n  public setHeight(height: number): void {\n    this._height = height\n  }\n\n  public getData(): Uint8Array {\n    return this._data\n  }\n\n  public setData(data?: Uint8Array): void {\n\n    if(data) {\n      delete this._data\n      this._data = data\n    }\n\n    if(this._created) {\n      this._bindData()\n    }\n    \n  }\n\n  protected _bindData(): void {\n    this.bind()\n    gl.texImage2D(\n      gl.TEXTURE_2D, \n      0, \n      gl.RGBA, \n      this._width, \n      this._height, \n      0, \n      gl.RGBA, \n      gl.UNSIGNED_BYTE, \n      this._data\n    );\n    \n  }\n\n  public getProgram(): WebGLTexture {\n    return this._program\n  }\n\n  \n}\n\nexport default Texture","import Texture from '../appearance/Texture';\n\nclass TextureLoader {\n    \n\n  public load(pathname: string,callback?: (texture : Texture) => void): Texture {\n    \n    const texture = new Texture()\n    const img = new Image();\n\n    img.onload = () => {\n      texture.setWidth(img.naturalWidth)\n      texture.setHeight(img.naturalHeight)  \n\n      //document.body.append(img)\n      const tempCanvas = document.createElement('canvas')\n      tempCanvas.width = img.naturalWidth\n      tempCanvas.height = img.naturalHeight\n      const ctx = tempCanvas.getContext('2d')\n      ctx.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight)\n      const data = new Uint8Array(ctx.getImageData(0, 0, img.naturalWidth, img.naturalHeight).data)\n\n      texture.setData(data)\n      if(callback) callback(texture);\n    }\n\n    img.onerror = (err) => {\n      throw new Error(`Error trying to load image: ${pathname}.\\n ${err}`);\n    }\n\n    img.src = pathname\n\n    return texture\n  }\n\n}\n\nexport default TextureLoader","import Shader, { ShaderType } from '../appearance/Shader'\nimport VAO, { VAOType } from '../buffer/VAO'\nimport VBO from '../buffer/VBO'\nimport OBJLoader from '../loader/OBJLoader'\nimport Texture, { TextureType } from '../appearance/Texture'\nimport Material from '../appearance/material/Material'\nimport TextureLoader from '../loader/TextureLoader'\n\nclass ResourceManager {\n\n    private static _instance: ResourceManager\n\n    private _shaders: Map<string, Shader>\n    private _vaos: Map<string, VAO>\n    private _textures: Map<string, Texture>\n    private _materials: Map<string, Material>\n\n    private constructor() {\n        this._shaders = new Map<string, Shader>();\n        this._vaos = new Map<string, VAO>();\n        this._textures = new Map<string, Texture>();\n        this._materials = new Map<string, Material>();\n    }\n\n    private static getInstance() {\n        if (!ResourceManager._instance) {\n            ResourceManager._instance = new ResourceManager();\n        }\n        return ResourceManager._instance\n    }\n\n    /* =====================\n              VAO'S\n    ======================*/\n\n    public static loadVAO(vaos: VAOType[]): ResourceManager {\n        return ResourceManager.getInstance().loadVAO(vaos);\n    }\n\n    public loadVAO(vaos: VAOType[]): ResourceManager {\n        vaos.forEach((vao) => {\n            if (this._vaos.has(vao.name)) {\n                throw new Error(`Shader '${vao.name}' already exists!`)\n            }\n\n            if (typeof vao.objectData === 'string') {\n                // todo: mesh loader \n                this._vaos.set(vao.name, new OBJLoader().load(vao.objectData as string));\n                return;\n            }\n            if (typeof vao.objectData === 'function') {\n                this._vaos.set(vao.name, vao.objectData());\n                return;\n            }\n            this._vaos.set(vao.name, new VAO(vao.objectData as VBO[]));\n        });\n        return this;\n    }\n\n    public static getVAO(name: string): VAO {\n        return ResourceManager.getInstance().getVAO(name);\n    }\n\n    public getVAO(name: string): VAO {\n        return this._vaos.get(name);\n    }\n\n    public static forEachVAO(callback: (vao: VAO) => void): ResourceManager {\n        return ResourceManager.getInstance().forEachVAO(callback);\n    }\n\n    public forEachVAO(callback: (vao: VAO) => void): ResourceManager {\n        this._vaos.forEach(callback);\n        return this;\n    }\n\n    /* =====================\n            SHADERS\n    ======================*/\n\n    public static loadShader(shaders: ShaderType[]): ResourceManager {\n        return ResourceManager.getInstance().loadShader(shaders);\n    }\n\n    public loadShader(shaders: ShaderType[]): ResourceManager {\n        shaders.forEach((shader) => {\n            if (this._shaders.has(shader.name)) {\n                throw new Error(`Shader '${shader.name}' already exists!`)\n            }\n            this._shaders.set(shader.name, new Shader(shader))\n        })\n        return this\n    }\n\n    public static getShader(name: string): Shader {\n        return ResourceManager.getInstance().getShader(name);\n    }\n\n    public getShader(name: string): Shader {\n        return this._shaders.get(name);\n    }\n\n    public static forEachShader(callback: (shader: Shader) => void): ResourceManager {\n        return ResourceManager.getInstance().forEachShader(callback);\n    }\n\n    public forEachShader(callback: (shader: Shader) => void): ResourceManager {\n        this._shaders.forEach(callback);\n        return this\n    }\n\n    /* =====================\n            TEXTURES\n    ======================*/\n\n    public static loadTextures(textures: TextureType[]): ResourceManager {\n        return ResourceManager.getInstance().loadTextures(textures);\n    }\n\n    public loadTextures(textures: TextureType[]): ResourceManager {\n        textures.forEach((texture) => {\n            if (this._textures.has(texture.name)) {\n                throw new Error(`Texture '${texture.name}' already exists!`)\n            }\n            if (texture.texture == null) {\n                this._textures.set(texture.name, new TextureLoader().load(texture.pathname))\n                return;\n            }\n            if (typeof texture.texture == \"function\") {\n                this._textures.set(texture.name, texture.texture());\n                return\n            }\n            this._textures.set(texture.name, texture.texture);\n        })\n        return this\n    }\n\n    public static getTexture(name: string): Texture {\n        return ResourceManager.getInstance().getTexture(name);\n    }\n\n    public getTexture(name: string): Texture {\n        return this._textures.get(name);\n    }\n\n    public static forEachTexture(callback: (texture: Texture) => void): ResourceManager {\n        return ResourceManager.getInstance().forEachTexture(callback);\n    }\n\n    public forEachTexture(callback: (texture: Texture) => void): ResourceManager {\n        this._textures.forEach(callback);\n        return this\n    }\n\n    /* =====================\n            MATERIALS\n    ======================*/\n\n    public static addMaterials(materials: Material[]): ResourceManager {\n        return ResourceManager.getInstance().addMaterials(materials);\n    }\n\n    public addMaterials(materials: Material[]): ResourceManager {\n        materials.forEach((material) => {\n            if (this._materials.has(material.getName())) {\n                throw new Error(`Material '${material.getName()}' already exists!`)\n            }\n            this._materials.set(material.getName(), material)\n        })\n        return this\n    }\n\n    public static getMaterial(name: string): Material {\n        return ResourceManager.getInstance().getMaterial(name);\n    }\n\n    public getMaterial(name: string): Material {\n        return this._materials.get(name);\n    }\n\n    public static forEachMaterial(callback: (material: Material) => void): ResourceManager {\n        return ResourceManager.getInstance().forEachMaterial(callback);\n    }\n\n    public forEachMaterial(callback: (material: Material) => void): ResourceManager {\n        this._materials.forEach(callback);\n        return this\n    }\n\n\n}\n\nexport default ResourceManager","import {Matrix4, Vector3, Vector4} from \"@math.gl/core\"\n\nimport IResource from './IResource';\nimport { gl } from \"../gl/GLUtils\";\nimport FileUtils from '../utils/FileUtils';\n\nexport interface ShaderType {\n    name: string\n    vertexShaderPathname: string\n    fragmentShaderPathname: string\n}\n\nclass Shader implements IResource{\n\n    private _name: string;\n    private _vertexShaderPathname: string;\n    private _fragmentShaderPathname: string;\n    private _program: WebGLProgram;\n\n    private _textureCounter: number\n    private _created: boolean\n\n    public constructor(params: ShaderType) {\n        this._name = params.name;\n        this._vertexShaderPathname = params.vertexShaderPathname;\n        this._fragmentShaderPathname = params.fragmentShaderPathname;\n        this._textureCounter = 0;\n        this._created = false\n    }\n    \n    public create() : void {\n        if(!this._created) {\n            this._program = gl.createProgram();\n            \n            const vertexShader : WebGLShader = this.load(this._vertexShaderPathname, gl.VERTEX_SHADER);\n            const fragmentShader : WebGLShader = this.load(this._fragmentShaderPathname, gl.FRAGMENT_SHADER);\n            \n            gl.attachShader(this._program, vertexShader);\n            gl.attachShader(this._program, fragmentShader);\n            \n            gl.linkProgram(this._program);\n            \n            const error : string = gl.getProgramInfoLog(this._program).trim();\n            if(error !== '') {\n                throw new Error(`Error trying to link shader: ${this._name}.\\n ${error}`);\n            }\n            this._created = true\n        }\n    }\n\n    private load(pathname: string, type: number) : WebGLShader {\n        const shader : WebGLShader = gl.createShader(type);\n\n        FileUtils.load(\n            pathname, \n            function onSuccess(file) {\n                gl.shaderSource(shader, file);\n            },\n            function onError(err) {\n                throw new Error(`Error trying to load shader: ${pathname}.\\n ${err}`);\n            },\n        );\n\n        gl.compileShader(shader);\n        const error : string = gl.getShaderInfoLog(shader).trim();\n        if( error !== '') {\n            throw new Error(`Error trying to compile shader: ${pathname}.\\n ${error}`);\n        }\n\n        return shader;\n    }\n\n    public bind() : void {\n        gl.useProgram(this._program);\n        this._textureCounter = 0\n    }\n\n    public unbind() : void {\n        gl.useProgram(null);\n    }\n\n    public destroy() : void {\n        gl.deleteShader(this._program)\n        this._created = false\n    }\n\n    public getUniformLocation(name : string) : WebGLUniformLocation {\n        return gl.getUniformLocation(this._program, name);\n    }\n\n    /**\n     * Check if the given name matches an actual uniform in the shader,\n     * if so sets the value, otherwise throw an error\n     * @param name uniform name\n     * @param setValue callback to set the value in case of success\n     */\n    private _checkIfUniformExists(name : string, \n        setValue: (location: WebGLUniformLocation) => void) : void {\n        const location = gl.getUniformLocation(this._program, name);\n        if(location === -1) {\n            throw new Error(`Uniform '${name}' does not exist in shader: ${this._name}`);\n        }\n        setValue(location);\n    }\n\n    /**\n     * Sets the value of a 32 bits integer uniform\n     * @param name uniform name on shader\n     * @param value value to set\n     */\n    public setInt(name : string, value : number) : void {\n        this._checkIfUniformExists(name, (location) => gl.uniform1i(location, value));\n    }\n\n    /**\n     * Sets the value of a 32 bits integer array uniform\n     * @param name uniform name on shader\n     * @param value value to set\n     */\n     public setIntArray(name : string, arrayValue: number[]) : void {\n        this._checkIfUniformExists(name, \n            (location) => gl.uniform1iv(location, new Int32Array(arrayValue)));\n    }\n\n    /**\n     * Sets the value of a 32 bits precision float uniform\n     * @param name uniform name on shader\n     * @param value value to set\n     */\n    public setFloat(name : string, value : number) : void {\n        this._checkIfUniformExists(name, (location) => gl.uniform1f(location, value));\n    }\n\n    /**\n     * Sets the value of a 32 bits precision float array uniform\n     * @param name uniform name on shader\n     * @param value value to set\n     */\n    public setFloatArray(name : string, arrayValue: number[]) : void {\n        this._checkIfUniformExists(name, \n            (location) => gl.uniform1fv(location, new Float32Array(arrayValue)));\n    }\n\n    public setVector3(name: string, vector: Vector3) : void{\n        this._checkIfUniformExists(name, \n            (location) => gl.uniform3fv(location, vector));\n    }\n\n    public setVector4(name: string, vector: Vector4) : void{\n        this._checkIfUniformExists(name, \n            (location) => gl.uniform4fv(location, vector));\n    }\n\n    public setMatrix4x4(name: string, matrix: Matrix4): void {\n        this._checkIfUniformExists(name, \n            (location) => gl.uniformMatrix4fv(location, false, matrix));\n    }\n\n    public setTexture(name : string) : void {\n        this._checkIfUniformExists(name, \n            (location) => {\n                gl.activeTexture(gl.TEXTURE0+this._textureCounter);\n                gl.uniform1i(location, this._textureCounter)\n                this._textureCounter++\n            });\n    }\n\n    public getName(): string { \n        return this._name\n    }\n    \n}\n\nexport default Shader;","import Material from \"../../engine/appearance/material/Material\";\nimport VAO from \"../../engine/buffer/VAO\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport Lamp from \"./Lamp\";\n\nclass SimpleEntity extends Entity {\n\n    private _lampList: Lamp[]\n\n    public constructor(name: string, vao: VAO, material: Material, renderer: Renderer) {\n        super(name, vao, material, renderer);\n        this._lampList = []\n    }\n    public update(time: number, delta: number): void {\n        /*\n\n        this.getTransform().getRotation().y += 15 * delta\n        this.getTransform().getRotation().x += 20 * delta\n\n        if(this.getTransform().getRotation().y >= 360) {\n            this.getTransform().getRotation().y %= 360\n        }\n\n        if(this.getTransform().getRotation().x >= 360) {\n            this.getTransform().getRotation().x %= 360\n        }\n\n        */\n\n    }\n\n    public setLampList(lampList: Lamp[]): void {\n        this._lampList = lampList\n    }\n\n    public getLampList(): Lamp[] {\n        return this._lampList\n    }\n}\n\nexport default SimpleEntity","import {Vector3} from \"@math.gl/core\"\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport SimpleEntity from \"./SimpleEntity\";\n\nclass Lamp extends SimpleEntity {\n\n    public color : Vector3\n    public distance: number = 100;\n    public shininess:number = 32;\n\n    public constructor(name: string, renderer: Renderer, color: Vector3 ) {\n        super(\n            name, \n            ResourceManager.getVAO('lamp'), \n            ResourceManager.getMaterial('lamp'), \n            renderer\n        );\n        this.color = color;\n        //this.color = new Vector3(Math.random(),Math.random(),Math.random());\n    }\n    \n    public update(time: number, delta: number): void {\n\n        /*\n\n        this.getTransform().getRotation().y += 15 * delta\n        this.getTransform().getRotation().x += 20 * delta\n\n        if(this.getTransform().getRotation().y >= 360) {\n            this.getTransform().getRotation().y %= 360\n        }\n\n        if(this.getTransform().getRotation().x >= 360) {\n            this.getTransform().getRotation().x %= 360\n        }\n\n        */\n\n    }\n}\n\nexport default Lamp;","import Material from \"../../appearance/material/Material\";\nimport VAO from \"../../buffer/VAO\";\nimport Hitbox from \"../../physics/hitboxes/HitBox\";\nimport Renderer from \"../../renderer/Renderer\";\nimport Entity from \"./Entity\";\n\nabstract class SolidEntity extends Entity {\n\n  private _hitbox: Hitbox;\n\n  constructor(\n    name: string, \n    hitbox: Hitbox,\n    vao?: VAO, \n    material?: Material, \n    renderer?: Renderer\n  ) {\n    super(name, vao, material, renderer);\n    this._hitbox = hitbox;\n  }\n\n  public setHitbox(hitbox: Hitbox) {\n    this._hitbox = hitbox\n  }\n\n  public getHitbox(): Hitbox {\n    return this._hitbox;\n  }\n\n}\n\nexport default SolidEntity","import Material from \"../../appearance/material/Material\";\nimport VAO from \"../../buffer/VAO\";\nimport Hitbox from \"../../physics/hitboxes/HitBox\";\nimport Renderer from \"../../renderer/Renderer\";\nimport SolidEntity from \"./SolidEntity\";\n\n\nabstract class StaticEntity extends SolidEntity {\n\n  private _friction: number;\n\n  constructor(\n    name: string, \n    hitbox: Hitbox,\n    friction: number,\n    vao?: VAO, \n    material?: Material, \n    renderer?: Renderer\n  ) {\n    super(name, hitbox, vao, material, renderer);\n    this._friction = friction;\n  }\n\n  public setFriction(friction: number) {\n    this._friction = friction\n  }\n\n  public getFriction(): number {\n    return this._friction;\n  }\n\n}\n\nexport default StaticEntity","import StaticEntity from '@razor/core/entities/StaticEntity';\nimport Hitbox from '@razor/physics/hitboxes/HitBox';\nimport Material from \"../../engine/appearance/material/Material\";\nimport VAO from \"../../engine/buffer/VAO\";\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport { IEntityWithLight } from './IEntityWithLight';\nimport Lamp from \"./Lamp\";\n\nclass MapEntity extends StaticEntity implements IEntityWithLight {\n\n    private _lampList: Lamp[]\n\n    public constructor(\n      name: string, \n      hitbox: Hitbox,\n      friction: number,\n      vao: VAO, \n      material: Material, \n      renderer: Renderer\n    ) {\n        super(name, hitbox, friction, vao, material, renderer);\n        this._lampList = []\n    }\n\n    public update(time: number, delta: number): void {\n        \n    }\n\n    public setLampList(lampList: Lamp[]): void {\n        this._lampList = lampList\n    }\n\n    public getLampList(): Lamp[] {\n        return this._lampList\n    }\n}\n\nexport default MapEntity","import Shader from \"@razor/appearance/Shader\";\nimport Texture from \"@razor/appearance/Texture\";\nimport { gl } from \"@razor/gl/GLUtils\";\nimport Razor from \"../core/Razor\";\n\nclass Framebuffer {\n\n    private _fbo: WebGLFramebuffer;\n    private _rbo: WebGLRenderbuffer;\n    private _attachment: number;\n    private _texture: Texture\n\n    constructor(attachemnt: number, width: number = Razor.CANVAS.width, height: number = Razor.CANVAS.height) {\n        this._attachment = attachemnt;\n        this._texture = new Texture(width, height)\n    }\n\n    public bindTexture() {\n        gl.bindTexture(gl.TEXTURE_2D, this._texture.getProgram());\n        gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            this._texture.getWidth(),\n            this._texture.getHeight(),\n            0,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            null\n        );\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    }\n\n    public create() {\n        gl.viewport(0, 0, this._texture.getWidth(), this._texture.getHeight());\n        // Create FBO\n        this._fbo = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n\n        // Create Texture\n        this._texture.create();\n        //this._texture.bind();\n        this.bindTexture();\n        gl.framebufferTexture2D(\n            gl.FRAMEBUFFER,\n            this._attachment,\n            gl.TEXTURE_2D,\n            this._texture.getProgram(),\n            0\n        );\n        // Create RBO\n        this._rbo = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this._rbo);\n\n        gl.renderbufferStorage(\n            gl.RENDERBUFFER,\n            gl.DEPTH_COMPONENT16,\n            this._texture.getWidth(),\n            this._texture.getHeight()\n        );\n\n        gl.framebufferRenderbuffer(\n            gl.FRAMEBUFFER,\n            gl.DEPTH_ATTACHMENT,\n            gl.RENDERBUFFER,\n            this._rbo\n        );\n        if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) != gl.FRAMEBUFFER_COMPLETE) {\n            console.log(\"Error at Framebuffer setting.\");\n        }\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    public bind() {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this._fbo);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    }\n\n    public unbind() {\n        //this.storeBuffer();\n        this._texture.unbind()\n        gl.viewport(0, 0, Razor.CANVAS.width, Razor.CANVAS.height);\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.clearColor(0, 0, 0, 0);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        // debugger;\n    }\n\n\n    public destroy() {\n        gl.deleteFramebuffer(this._fbo);\n        gl.deleteRenderbuffer(this._rbo);\n    }\n\n    public storeBuffer(): void {\n        const data = new Uint8Array(this._texture.getWidth() * this._texture.getHeight() * 4)\n\n        gl.readPixels(\n            0,\n            0,\n            this._texture.getWidth(),\n            this._texture.getHeight(),\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            data\n        )\n        this._texture.setData(data);\n    }\n\n    public getTexture(): Texture {\n        return this._texture\n    }\n\n    public getAttachemnt() : number{\n        return this._attachment;\n    }\n\n}\n\nexport default Framebuffer","import { Matrix4, Vector3, cos } from \"@math.gl/core\"\n\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport ResourceManager from \"../../engine/core/ResourceManager\";\nimport GLUtils, { gl } from \"../../engine/gl/GLUtils\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport CanvasCamera from '../CanvasCamera'\nimport { toRadians } from \"@razor/math/math\";\nimport Lamp from \"../entities/Lamp\";\nimport SimpleEntity from \"../entities/SimpleEntity\";\nimport SceneManager from \"@razor/core/scenes/SceneManager\";\nimport Texture from \"@razor/appearance/Texture\";\nimport Shader from \"@razor/appearance/Shader\";\nimport Camera from \"@razor/core/Camera\";\nimport Razor from \"@razor/core/Razor\";\nimport Framebuffer from \"@razor/buffer/FrameBuffer\";\nimport VAO from \"@razor/buffer/VAO\";\nimport Buffer from \"@razor/buffer/Buffer\";\n\ntype FrameRendererMode = 'albedo' | 'mascara';\n\nclass FrameRenderer extends Renderer {\n\n    private static _modeStatic: FrameRendererMode;\n    private _mode: FrameRendererMode;\n    private _frameBuffer: Framebuffer;\n    private _shader: Shader;\n    private _vao: VAO;\n    private _buffers: Framebuffer[] = [];\n    private static _texture : Texture;\n\n    constructor(cameraManager: Camera, mode: FrameRendererMode) {\n        super('frameRenderer', cameraManager)\n        this._mode = mode;\n        this._frameBuffer = new Framebuffer(gl.COLOR_ATTACHMENT0);\n        this._frameBuffer.create();\n        this._shader = ResourceManager.getShader(\"effect\");\n        this._shader.create();\n        this._vao = ResourceManager.getVAO(\"effect\");\n        this._buffers.push(new Framebuffer(gl.COLOR_ATTACHMENT0));\n        this._buffers.push(new Framebuffer(gl.COLOR_ATTACHMENT0));\n\n        this._buffers[0].create();\n        this._buffers[1].create();\n    }\n\n    public get _texture(): Texture {\n        return this._frameBuffer.getTexture();\n    }\n\n    public get attachemnt(): number {\n        return this._frameBuffer.getAttachemnt();\n    }\n\n    public static get mode(): FrameRendererMode {\n        return FrameRenderer._modeStatic;\n    }\n\n    public bind() {\n        this._frameBuffer.bind();\n        FrameRenderer._modeStatic = this._mode;\n    }\n\n    public render(): void {\n        this._shader.bind();\n        gl.activeTexture(gl.TEXTURE0);\n        this._texture.bind();\n        this._shader.setInt('u_texture', 0)\n        this._vao.bind();\n        const shader = this._shader;\n        shader.setInt(\"mode\", this._mode == \"mascara\" ? 1 : 0);\n        if (this._mode == \"albedo\") {\n            FrameRenderer._texture = this._texture;\n            //this.draw();\n        } else {\n            shader.setFloat(\"weight[0]\", 0.227027);\n            shader.setFloat(\"weight[1]\", 0.1945946);\n            shader.setFloat(\"weight[2]\", 0.1216216);\n            shader.setFloat(\"weight[3]\", 0.054054);\n            shader.setFloat(\"weight[4]\", 0.016216);\n            shader.setFloat(\"sizeTexture[0]\", this._texture.getWidth());\n            shader.setFloat(\"sizeTexture[1]\", this._texture.getHeight());\n\n            let horizontal = true, first_iteration = true, amount = 10;\n            for (let i = 0; i < amount; i++) {\n                //\n                this._buffers[Number(horizontal)].bind();\n                shader.setInt(\"horizontal\", Number(horizontal));\n                if (!first_iteration) {\n                    this._buffers[Number(!horizontal)].getTexture().bind();\n                }\n                this.draw();\n                this._buffers[Number(horizontal)].unbind();\n                horizontal = !horizontal;\n                if (first_iteration) first_iteration = false;\n            }\n            shader.setInt(\"mode\",2);\n            gl.activeTexture(gl.TEXTURE0);\n            FrameRenderer._texture.bind();\n            this._shader.setInt('u_texture', 0)\n            gl.activeTexture(gl.TEXTURE1);\n            this._buffers[Number(!horizontal)].getTexture().bind();\n            this._shader.setInt('u_mascara', 1)\n            this.draw();\n            FrameRenderer._modeStatic = \"albedo\";\n        }\n        this._vao.unbind();\n        this._texture.unbind();\n        this._shader.unbind();\n    }\n\n    public draw() {\n        gl.clearColor(0, 0, 0, 1);\n        gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n        GLUtils.draw(this._vao.getLength())\n    }\n\n    public unbind() {\n        this._frameBuffer.unbind();\n    }\n}\n\nexport default FrameRenderer;","import {Vector3, Matrix4} from \"@math.gl/core\"\nimport Orientation from \"@razor/math/Orientation\"\nimport { toRadians } from \"@razor/math/math\"\nimport Transform from \"../math/Transform\"\n\nclass Camera {\n\n    private _transform: Transform\n    \n    private static _mainCamera : Camera;\n\n    public constructor(translation: Vector3, rotation: Orientation) {\n        this._transform = new Transform(translation, rotation)\n        Camera._mainCamera = this;\n    }\n\n    public static get Main() : Camera{\n        return this._mainCamera;\n    }\n\n    public static setMainCamera(camera: Camera){\n        this._mainCamera = camera;\n    }\n\n    public getTransform() : Transform {\n        return this._transform\n    }\n\n    /* \n    \n    public static view(translation: Vec3, rotation: Vec3): Mat4 {\n\n        const TRANSLATION = Mat4.translate(new Vec3(-translation.x, -translation.y, -translation.z));\n\n        const ROTATION_X = Mat4.xRotate(rotation.x);\n        const ROTATION_Y = Mat4.yRotate(rotation.y);\n        const ROTATION_Z = Mat4.zRotate(rotation.z);\n\n        return TRANSLATION.mult(ROTATION_Y.mult(ROTATION_X).mult(ROTATION_Z))\n    }\n    \n    */\n\n    public getView(): Matrix4 {\n        \n        const translation = new Matrix4()\n            .translate(this._transform.getTranslation().negate());\n        //const rotation = new Matrix4().fromQuaternion(this._transform.getRotation());\n\n\n        const euler = this._transform.getRotation()\n\n        const rotationX = new Matrix4().rotateX(toRadians(euler.pitch))\n        const rotationY = new Matrix4().rotateY(toRadians(euler.yaw))\n        const rotationZ = new Matrix4().rotateZ(toRadians(euler.roll))\n\n        const rotation = rotationZ.multiplyRight(rotationY.multiplyRight(rotationX))\n\n        return translation.multiplyRight(rotation).invert()\n        \n\n        //return this._transform.toMatrix()\n\n    }\n\n}\n\nexport default Camera","import { Vector3 } from \"@math.gl/core\"\nimport Camera from \"@razor/core/Camera\"\n\ntype SoundList = {\n    [key: string]: Sound\n}\n\ntype SoundOptions = {\n    loop?: boolean\n    autoplay?: boolean\n    volume?: number\n}\nclass Sound {\n\n    readonly name : string;\n    private _audio: HTMLAudioElement;\n    private _translation?: Vector3;\n\n    private static Sounds: SoundList = {}\n    constructor(name: string, pathname: string,options?: SoundOptions) {\n        Sound.Sounds[name] = this;\n        this.name = name;\n        this._audio = new Audio(pathname);\n        this._audio.loop = options?.loop ?? false;\n        this._audio.autoplay = options?.autoplay ?? false;\n        this._audio.volume = (options?.volume ?? 100)/100;\n        this._audio.pause();\n    }\n    \n    public setTranslation(translation : Vector3){\n        this._translation = translation;\n    }\n\n    public getTranslation(): Vector3{\n        return this._translation;\n    }\n\n    public play(loop = false,force: boolean = false, translation? : Vector3) : Promise<void>{\n        if(!force && !this._audio.paused) return;\n        if(force){\n            this._audio.pause();\n            this._audio.currentTime = 0;\n        }\n        this._audio.loop = loop;\n        //console.time(this.name);\n        const play = this._audio.play();\n        if(translation){\n            const clear = setInterval(() => {\n                if(this._audio.paused) clearInterval(clear);\n                const vectorDistance = translation.subtract(Camera.Main.getTransform().getTranslation());\n                const distanceLength = Math.sqrt(Math.pow(vectorDistance[0],2) + Math.pow(vectorDistance[1],2) + Math.pow(vectorDistance[2],2))\n                this._audio.volume = 1.0 / (1.0 + 0.022 * distanceLength + 0.0019 * (distanceLength * distanceLength));\n                \n            },1000)\n        }\n        const clear2 = setInterval(() => {\n            if(this._audio.paused){\n               // console.timeEnd(this.name);\n                this._audio.currentTime = 0;\n                clearInterval(clear2);\n            }\n        },1000);\n        /*\n        if (resetTime != -1) {\n            while (!this._audio.paused) {\n                if (this._audio.currentTime >= resetTime) {\n                    this._audio.currentTime = 0;\n                }\n            }\n        }*/\n        return play;\n    }\n\n    public pause() {\n        this._audio.pause();\n        this._audio.currentTime = 0;\n    }\n\n    public static Find(name: string): Sound {\n        return Sound.Sounds[name];\n    }\n\n    public static pauseAll(){\n        Object.keys(Sound.Sounds).map((key) => {\n            Sound.Sounds[key].pause();\n        })\n    }\n}\n\nexport default Sound;","import { Matrix4, Vector2, Vector3 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport Razor from \"@razor/core/Razor\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\n\nimport {PositionOptions,PositionRelative} from './gui';\n\nclass RectangleEntity extends Entity {\n    private size: Vector2;\n\n    public color : Vector3 = new Vector3(0.3,0.3,0.3);\n    private alpha : number = 0.1;\n    public constructor(name: string, vao: VAO, material: Material, renderer: Renderer) {\n        super(name, vao, material, renderer);\n        this.size = new Vector2(1,1);\n        //this.DrawRectangle();\n    }\n    private DrawRectangle(){\n        const positions = [\n            0, 0,\n            1, 0,\n            0, 1,\n            0, 1,\n            1, 0,\n            1, 1,\n        ];\n        this.getVAO().getIbo().setBuffer(new Float32Array(positions));\n        this.getVAO().create();\n    }\n    \n    public setSize(width: number,height : number){\n        this.getTransform().setScale(new Vector3(width,height ,1));\n    }\n\n    public getSize(){\n        const scale = this.getTransform().getScale();\n        return {width: scale[0],height: scale[1]}\n    }\n\n    public updatePosition(position: PositionOptions,relativeTo: PositionRelative = \"Razor\") {\n        const { width, height } = this.getSize();\n        const relative = {\n            width: relativeTo == \"Razor\" ? Razor.CANVAS.width : relativeTo.getScale()[0],\n            height: relativeTo == \"Razor\" ? Razor.CANVAS.height : relativeTo.getScale()[1]\n        }\n        let top = 0, left = 0;\n        switch (position.vertical) {\n            case \"center\":\n            case \"bottom\":\n                top = relative.height;\n                if (position.vertical == \"bottom\") top = - height;\n                if (position.vertical == \"center\") top = top / 2 - height / 2;\n                break;\n            case \"top\":\n                break;\n            default:\n                const [, x, metric] = position.vertical.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    top = Number(x);\n                } else {\n                    top = relative.height * Number(x) / 100;\n                }\n\n        }\n        switch (position.horizontal) {\n            case \"center\":\n            case \"right\":\n                left = relative.width;\n                if (position.horizontal == \"right\") left -= width;\n                if (position.horizontal == \"center\") left = left / 2 - width / 2;\n                break;\n            case \"left\":\n                break;\n            default:\n                const [, x, metric] = position.vertical.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    left = Number(x);\n                } else {\n                    left = relative.width * Number(x) / 100;\n                }\n        }\n        this.getTransform().setTranslation(new Vector3(left, top, 0).negate())\n    }\n\n    public setAlpha(value : number){\n        return this.alpha = value;\n    }\n\n    \n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default RectangleEntity","class Text {\n    private static fontInfo = {\n        letterHeight: 8,\n        spaceWidth: 8,\n        spacing: -1,\n        textureWidth: 64,\n        textureHeight: 40,\n        glyphInfos: {\n            'a': { x: 0, y: 0, width: 8, },\n            'b': { x: 8, y: 0, width: 8, },\n            'c': { x: 16, y: 0, width: 8, },\n            'd': { x: 24, y: 0, width: 8, },\n            'e': { x: 32, y: 0, width: 8, },\n            'f': { x: 40, y: 0, width: 8, },\n            'g': { x: 48, y: 0, width: 8, },\n            'h': { x: 56, y: 0, width: 8, },\n            'i': { x: 0, y: 8, width: 8, },\n            'j': { x: 8, y: 8, width: 8, },\n            'k': { x: 16, y: 8, width: 8, },\n            'l': { x: 24, y: 8, width: 8, },\n            'm': { x: 32, y: 8, width: 8, },\n            'n': { x: 40, y: 8, width: 8, },\n            'o': { x: 48, y: 8, width: 8, },\n            'p': { x: 56, y: 8, width: 8, },\n            'q': { x: 0, y: 16, width: 8, },\n            'r': { x: 8, y: 16, width: 8, },\n            's': { x: 16, y: 16, width: 8, },\n            't': { x: 24, y: 16, width: 8, },\n            'u': { x: 32, y: 16, width: 8, },\n            'v': { x: 40, y: 16, width: 8, },\n            'w': { x: 48, y: 16, width: 8, },\n            'x': { x: 56, y: 16, width: 8, },\n            'y': { x: 0, y: 24, width: 8, },\n            'z': { x: 8, y: 24, width: 8, },\n            '0': { x: 16, y: 24, width: 8, },\n            '1': { x: 24, y: 24, width: 8, },\n            '2': { x: 32, y: 24, width: 8, },\n            '3': { x: 40, y: 24, width: 8, },\n            '4': { x: 48, y: 24, width: 8, },\n            '5': { x: 56, y: 24, width: 8, },\n            '6': { x: 0, y: 32, width: 8, },\n            '7': { x: 8, y: 32, width: 8, },\n            '8': { x: 16, y: 32, width: 8, },\n            '9': { x: 24, y: 32, width: 8, },\n            '-': { x: 32, y: 32, width: 8, },\n            '*': { x: 40, y: 32, width: 8, },\n            '!': { x: 48, y: 32, width: 8, },\n            '?': { x: 56, y: 32, width: 8, },\n        },\n    };\n    static render(s : string) {\n        const fontInfo = this.fontInfo;\n        var len = s.length;\n        var numVertices = len * 6;\n        var positions = new Float32Array(numVertices * 2);\n        var texcoords = new Float32Array(numVertices * 2);\n        var offset = 0;\n        var x = 0;\n        var maxX = fontInfo.textureWidth;\n        var maxY = fontInfo.textureHeight;\n        for (var ii = 0; ii < len; ++ii) {\n            var letter = s[ii];\n            var glyphInfo = fontInfo.glyphInfos[letter];\n            if (glyphInfo) {\n                var x2 = x + glyphInfo.width;\n                var u1 = glyphInfo.x / maxX;\n                var v1 = (glyphInfo.y + fontInfo.letterHeight - 1) / maxY;\n                var u2 = (glyphInfo.x + glyphInfo.width - 1) / maxX;\n                var v2 = glyphInfo.y / maxY;\n\n                // 6 vertices per letter\n                positions[offset + 0] = x;\n                positions[offset + 1] = 0;\n                texcoords[offset + 0] = u1;\n                texcoords[offset + 1] = v2;//v1;\n\n                positions[offset + 2] = x2;\n                positions[offset + 3] = 0;\n                texcoords[offset + 2] = u2;\n                texcoords[offset + 3] = v2;//v1;\n\n                positions[offset + 4] = x;\n                positions[offset + 5] = fontInfo.letterHeight;\n                texcoords[offset + 4] = u1;\n                texcoords[offset + 5] = v1;//v2;\n\n                positions[offset + 6] = x;\n                positions[offset + 7] = fontInfo.letterHeight;\n                texcoords[offset + 6] = u1;\n                texcoords[offset + 7] = v1;//v2;\n\n                positions[offset + 8] = x2;\n                positions[offset + 9] = 0;\n                texcoords[offset + 8] = u2;\n                texcoords[offset + 9] = v2;//v1;\n\n                positions[offset + 10] = x2;\n                positions[offset + 11] = fontInfo.letterHeight;\n                texcoords[offset + 10] = u2;\n                texcoords[offset + 11] = v1;//v2;\n\n                x += glyphInfo.width + fontInfo.spacing;\n                offset += 12;\n            } else {\n                // we don't have this character so just advance\n                x += fontInfo.spaceWidth;\n            }\n        }\n\n        // return ArrayBufferViews for the portion of the TypedArrays\n        // that were actually used.\n        return {\n            arrays: {\n                position: new Float32Array(positions.buffer, 0, offset),\n                texcoord: new Float32Array(texcoords.buffer, 0, offset),\n            },\n            numVertices: offset / 2,\n        };\n    }\n\n}\nexport default Text;","import { Matrix4, Vector3 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport Razor from \"@razor/core/Razor\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport { PositionRelative, PositionOptions } from \"./gui\";\n\nclass TextEntity extends Entity {\n\n    private _oldText: string = \"\";\n    private _currentText: string = \"\";\n\n    public constructor(name: string, material: Material, renderer: Renderer) {\n        super(name, null, material, renderer);\n        const vao = new VAO([], 2);\n        vao.addEmpty(2);\n        vao.create();\n        this.setVAO(vao);\n    }\n\n    public setText(text: string) {\n        this._currentText = text;\n    }\n\n    public render(): void {\n        if (this._currentText == this._oldText) return;\n        const text = Text.render(this._currentText);\n        this.getVAO().getVbo(0).setBuffer(text.arrays.position);\n        this.getVAO().getVbo(1).setBuffer(text.arrays.texcoord);\n        this.getVAO().create();\n        this._oldText = this._currentText;\n    }\n\n    public getSize() {\n        const scale = this.getTransform().getScale();\n        return { width: scale[0], height: scale[1] }\n    }\n\n    public updatePosition(position: PositionOptions, relativeTo: PositionRelative = \"Razor\") {\n        const { width, height } = this.getSize();\n        const relative = {\n            width: relativeTo == \"Razor\" ? Razor.CANVAS.width : relativeTo.getTranslation().negate().x,\n            height: relativeTo == \"Razor\" ? Razor.CANVAS.height : relativeTo.getTranslation().negate().y,\n            z: relativeTo == \"Razor\" ? 1 : relativeTo.getTranslation().negate().z - 2\n        }\n        let top = 0, left = 0;\n        if (relativeTo != \"Razor\") {\n            top = relative.height;\n            left = relative.width;\n            console.log(relative)\n        }\n        switch (position.vertical) {\n            case \"center\":\n            case \"bottom\":\n                top = relative.height;\n                if (position.vertical == \"bottom\") top = - height;\n                if (position.vertical == \"center\") top = top / 2 - height / 2;\n                break;\n            case \"top\":\n                break;\n            default:\n                const [, x, metric] = position.vertical.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    top = Number(x);\n                } else {\n                    top = relative.height * Number(x) / 100;\n                }\n\n        }\n        switch (position.horizontal) {\n            case \"center\":\n            case \"right\":\n                left = relative.width;\n                if (position.horizontal == \"right\") left -= width;\n                if (position.horizontal == \"center\") left = left / 2 - width / 2;\n                break;\n            case \"left\":\n                break;\n            default:\n                const [, x, metric] = position.horizontal.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    left = Number(x);\n                } else {\n                    left = relative.width * Number(x) / 100;\n                }\n        }\n        this.getTransform().setTranslation(new Vector3(left, top, relative.z).negate())\n    }\n\n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default TextEntity","import { Matrix4 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport GameTest from \"src/game/GameTest\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport RectangleEntity from \"./RectangleEntity\";\nimport TextEntity from \"./TextEntity\";\n\nclass GuiEntity extends Entity {\n\n    public constructor(name: string, renderer: Renderer) {\n        super(name, null,null, renderer);\n    }\n\n    public addRectangle(name: string): RectangleEntity {\n        const entity = new RectangleEntity(name, ResourceManager.getVAO(\"rectangle\"), ResourceManager.getMaterial(\"rectangle\"), this.getRenderer())\n        entity.getTransform().parent = this.getTransform();\n        const scene = this.getScene();\n        entity.setScene(scene)\n        scene.add(entity);\n        return entity;\n    }\n\n    public addText(name: string): TextEntity {\n        const entity = new TextEntity(name, ResourceManager.getMaterial(\"text\"), this.getRenderer());\n        entity.getTransform().parent = this.getTransform();\n        this.getScene().add(entity);\n        return entity;\n    }\n\n\n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default GuiEntity","import { Matrix4, Vector3 } from \"@math.gl/core\";\nimport DefaultMaterial from \"@razor/appearance/material/DefaultMaterial\";\nimport VBO from \"@razor/buffer/VBO\";\nimport Razor from \"@razor/core/Razor\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport TextureLoader from \"@razor/loader/TextureLoader\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport GuiEntity from \"./GuiEntity\";\nimport RectangleEntity from \"./RectangleEntity\";\nimport TextEntity from \"./TextEntity\";\n\ntype metric = \"px\" | \"%\";\ntype LengthMetric = `${number}${metric}`;\n\ninterface DialogPosition {\n    vertical: 'top' | 'center' | 'bottom' | LengthMetric\n    horizontal: 'left' | 'center' | 'right' | LengthMetric\n}\n\nclass DialogEntity extends GuiEntity {\n\n    private _text: TextEntity;\n    private _rectangle: RectangleEntity;\n    private paddingTop = 5;\n    private paddingLeft = 5;\n    private static _dialogs: Map<string, DialogEntity> = new Map;\n\n    public constructor(name: string, renderer: Renderer) {\n        super(name, renderer);\n        DialogEntity._dialogs.set(name, this);\n    }\n\n    public static getDialog(name: string) {\n        return DialogEntity._dialogs.get(name);\n    }\n\n    public init(color: Vector3 = new Vector3(0.9, 0.9, 0.9)): void {\n        this._rectangle = this.addRectangle(this.getName() + \"_rectangle_left\");\n        this._rectangle.color = color;\n        this._rectangle.getTransform().parent = this.getTransform();\n        this._text = this.addText(this.getName() + \"_text_rectangle_left\");\n        this._text.setText(\"\")\n        this._text.getTransform().setTranslation(new Vector3(this.paddingLeft, this.paddingTop, 1).negate())\n        this._text.getTransform().setScale(new Vector3(2, 2, 2))\n    }\n\n    public setImage(image: Entity) {\n        image.getTransform().setTranslation(new Vector3(0, 0, 1).negate());\n        image.getTransform().setScale(new Vector3(0.09, 0.09, 1));\n        this.getScene().add(image);\n        image.getTransform().parent = this.getTransform();\n    }\n\n    public remove(){\n        this._text.setText(\"\");\n        this._rectangle.setSize(0,0);\n    }\n\n    public updateText(name: string, position: DialogPosition) {\n        this._text.setText(name);\n        const length = name.toLowerCase().replace(/ /g, '').replace(/[^\\w-]+/g, '').length;\n        /* Tamanho */\n        const diff = Math.abs(name.length - length) - 2;\n        const width = 8 * 2 * length + this.paddingLeft * 2 + 8 * diff;\n        const height = 8 * 2 + this.paddingTop * 2;\n        this._rectangle.setSize(width, height);\n        this.updatePosition(position);\n        /* Posição */\n    }\n\n    public updatePosition(position: DialogPosition) {\n        const { width, height } = this._rectangle.getSize();\n        let top = 0, left = 0;\n        switch (position.vertical) {\n            case \"center\":\n            case \"bottom\":\n                top = Razor.CANVAS.height;\n                if (position.vertical == \"bottom\") top = - height;\n                if (position.vertical == \"center\") top = top / 2 - height / 2;\n                break;\n            case \"top\":\n                break;\n            default:\n                const [, x, metric] = position.vertical.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    top = Number(x);\n                } else {\n                    top = Razor.CANVAS.height * Number(x) / 100;\n                }\n\n        }\n        switch (position.horizontal) {\n            case \"center\":\n            case \"right\":\n                left = Razor.CANVAS.width;\n                if (position.horizontal == \"right\") left -= width;\n                if (position.horizontal == \"center\") left = left / 2 - width / 2;\n                break;\n            case \"left\":\n                break;\n            default:\n                const [, x, metric] = position.vertical.split(/([0-9]+)(px|%)/);\n                if (metric == \"px\") {\n                    left = Number(x);\n                } else {\n                    left = Razor.CANVAS.width * Number(x) / 100;\n                }\n        }\n        this.getTransform().setTranslation(new Vector3(left, top, 0).negate())\n\n    }\n\n    public animateText(name: string, wordPerSeconds = 1, position: DialogPosition, callback?: Function) {\n        let i = 1;\n        const length = name.length;\n        const intervalText = setInterval(() => {\n            if (i == length) {\n                if(callback) callback.apply(this);\n                clearInterval(intervalText)\n            }\n            this.updateText(name.slice(0, i++), position);\n        }, 1 / wordPerSeconds * 1000);\n    }\n\n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default DialogEntity","import { Vector3 } from \"@math.gl/core\";\nimport Material from \"../../appearance/material/Material\";\nimport VAO from \"../../buffer/VAO\";\nimport Hitbox from \"../../physics/hitboxes/HitBox\";\nimport Renderer from \"../../renderer/Renderer\";\nimport SolidEntity from \"./SolidEntity\";\n\n\nabstract class DynamicEntity extends SolidEntity {\n\n  private _mass: number;\n  private _force: Vector3;\n  private _speed: Vector3;\n\n  constructor(\n    name: string, \n    hitbox: Hitbox,\n    mass: number,\n    vao?: VAO, \n    material?: Material, \n    renderer?: Renderer\n  ) {\n    super(name, hitbox, vao, material, renderer);\n    this._mass = mass;\n    this._force = new Vector3(0, 0, 0);\n    this._speed = new Vector3(0, 0, 0);\n  }\n\n  public updateSpeed(delta: number) {\n    if(!this._force.exactEquals([0, 0, 0])) {\n      this.updateSpeedByAcceleration(\n        this._force.divideScalar(this._mass).multiplyByScalar(delta)\n      )\n    }\n  }\n\n  public updateSpeedByAcceleration(acceleration: Vector3) {\n    this._speed.add(acceleration)\n  }\n\n  public setMass(mass: number) {\n    this._mass = mass\n  }\n\n  public getMass(): number {\n    return this._mass;\n  }\n\n  public setForce(force: Vector3) {\n    this._force = force\n  }\n\n  public getForce(): Vector3 {\n    return this._force\n  }\n\n  public setSpeed(speed: Vector3) {\n    this._speed = speed\n  }\n\n  public getSpeed(): Vector3 {\n    return this._speed\n  }\n\n}\n\nexport default DynamicEntity","import { Vector3 } from \"@math.gl/core\";\nimport DisplayEntity from \"./entities/DisplayEntity\";\nimport GameTest from \"./GameTest\";\n\ntype GameControllerDisplay = \"life\" | \"ammunition\";\ntype GameControllerAttributes = {\n    display: DisplayEntity,\n    value: number\n}\nclass GameController {\n\n    private static _life: GameControllerAttributes;\n    private static _ammunition: GameControllerAttributes;\n\n\n    static setDisplay(name: GameControllerDisplay, display: DisplayEntity, color : Vector3) {\n        this[\"_\"+name] = { display, value: 100 };\n        display.setText(String(100), color);\n    }\n\n    static isAmmunition() : boolean{\n        return this.ammunition != 0;\n    }\n\n    static isLife() : boolean{\n        return this.life != 0;\n    }\n\n    static get life(){\n        return this._life.value;\n    } \n    \n    static get ammunition(){\n        return this._ammunition.value;\n    } \n\n    static update(name : GameControllerDisplay, value : number) {\n        const attribute = this[\"_\"+name];\n        attribute.value += value;\n        if(attribute.value < 0) attribute.value = 0;\n        this[\"_\"+name] = attribute;\n        attribute.display.updateText(attribute.value);\n        if(name == \"life\" && attribute.value == 0){\n            GameTest.getInstance().setScene(\"gameover\");\n        }\n    }\n}\n\nexport default GameController;","\n\nabstract class Hitbox {\n\n  private _collisionDisabled: boolean\n\n  public constructor() {\n    this._collisionDisabled = false\n  }\n\n  public isCollisionDisabled(): boolean {\n    return this._collisionDisabled\n  }\n\n  public disableCollision(collisionDisabled: boolean): void {\n    this._collisionDisabled = collisionDisabled\n  }\n\n}\n\nexport default Hitbox;","import Hitbox from \"./HitBox\"\n\n\nclass CircleHitbox extends Hitbox {\n\n  private _radius: number\n\n  public constructor(radius: number) {\n    super()\n    this._radius = radius \n  }\n\n  public getRadius(): number {\n    return this._radius\n  }\n\n}\n\nexport default CircleHitbox","import { toRadians, Vector2, Vector3 } from \"@math.gl/core\";\nimport DynamicEntity from \"@razor/core/entities/DynamicEntity\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport CircleHitbox from \"@razor/physics/hitboxes/CircleHitbox\";\nimport Renderer from \"@razor/renderer/Renderer\";\nimport GameController from \"src/game/GameController\";\nimport Sound from \"src/game/Sound\";\nimport PathNode from \"../../pathfinding/PathNode\";\nimport { IEntityWithLight } from \"../IEntityWithLight\";\nimport Lamp from \"../Lamp\";\nimport Player from \"../player/Player\";\n\n\n\nclass Monster extends DynamicEntity implements IEntityWithLight {\n\n  private _lampList: Lamp[]\n  \n  private _health: number\n  private _impulse: number\n  \n  private _path: PathNode[]\n  private _pathIndex: number\n  private _triggered: boolean\n  private _player: Player\n\n  private _hitPlayer : boolean;\n  public constructor(name: string, renderer: Renderer, player: Player) {\n    super(\n      name,\n      new CircleHitbox(1),\n      1,\n      ResourceManager.getVAO('monster'),\n      ResourceManager.getMaterial('monster'),\n      renderer\n    )\n    this._lampList = []\n    this._path = []\n    this._health = 5\n    this._impulse = 40\n    this._pathIndex = 0;\n    this._triggered = false\n    this._player = player\n    this._hitPlayer = false;\n  }\n\n  public update(time: number, delta: number): void {\n    if(Player.getInstance().getStop()) return;\n\n    if(!this._triggered && this._shouldTrigger()) {\n\n      this._triggered = true\n      this.getHitbox().disableCollision(false)\n\n    } else if (this._path.length > 0 && this._triggered) {\n\n      this._updatePathIndex(this._path[this._pathIndex])\n      this._move(this._path[this._pathIndex], delta)\n      const value = this.getTransform().getTranslation().distanceTo(Player.getInstance().getTransform().getTranslation());\n      if(value < 5 && !this._hitPlayer){\n        this._hitPlayer = true;\n        GameController.update(\"life\",-1);\n        Sound.Find(\"damage\").play(false,true);\n        setTimeout(() => this._hitPlayer = false,1000);\n      }\n      \n    }\n  }\n\n  private _updatePathIndex(node: PathNode): void{\n    if(this._pathIndex === this._path.length-1) {\n      return;\n    }\n    const distance = node.getPosition().distanceTo(\n      new Vector2(\n        this.getTransform().getTranslation().x,\n        this.getTransform().getTranslation().z\n      )\n    )\n    if(distance < 2) {\n      this._pathIndex++\n      console.log(this._path[this._pathIndex]);\n      \n    }\n  }\n\n  private _move(node: PathNode, delta: number) {\n\n    this.getForce().x = 0\n    this.getForce().y = 0\n    this.getForce().z = 0\n    \n    const distanceVector = node.getPosition().clone().subtract(\n      new Vector2(\n        this.getTransform().getTranslation().x,\n        this.getTransform().getTranslation().z\n      )\n    ).normalize()\n    const x = distanceVector.x * this._impulse * delta;\n    const z = distanceVector.y * this._impulse * delta;\n    this.getForce().add(new Vector3(x, 0, z))\n  }\n\n  private _shouldTrigger(): boolean {\n    return this._player.getTransform().getTranslation().distanceTo(this.getTransform().getTranslation()) <= 30\n  }\n\n  public takeDamage(): boolean {\n    this._health--\n    return this._health === 0\n  }\n\n  public setLampList(lampList: Lamp[]): void {\n    this._lampList = lampList\n  }\n\n  public getLampList(): Lamp[] {\n    return this._lampList\n  }\n\n  public setHealth(health: number): void {\n    this._health = health\n  }\n\n  public getHealth(): number {\n    return this._health\n  }\n\n  public setPath(path: PathNode[]): void {\n    const current = this._path[this._pathIndex]\n    this._pathIndex = path.includes(current) ? path.indexOf(current) : 0;\n    this._path = path\n  }\n\n  public getPath(): PathNode[] {\n    return this._path\n  }\n\n  public isTriggered(): boolean {\n    return this._triggered\n  }\n\n}\n\nexport default Monster","import { Vector2, Vector3 } from \"@math.gl/core\";\nimport VAO from \"@razor/buffer/VAO\";\nimport Entity from \"@razor/core/entities/Entity\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport Scene from \"@razor/core/scenes/Scene\";\nimport { circunferenceEquationOf, intersectionPointsBetweenLineAndCircunference, lineEquationOf, PairPoints } from \"@razor/math/math\";\nimport Orientation from \"@razor/math/Orientation\";\nimport Transform from \"@razor/math/Transform\";\nimport CircleHitbox from \"@razor/physics/hitboxes/CircleHitbox\";\nimport Renderer from \"@razor/renderer/Renderer\";\nimport { IEntityWithLight } from \"../IEntityWithLight\";\nimport Lamp from \"../Lamp\";\nimport Monster from \"../monster/Monster\";\n\nexport enum GunState {\n  READY,\n  CHARGED,\n  RECHARGING,\n  EMPTY,\n  LOADING,\n}\n\nclass Gun extends Entity implements IEntityWithLight {\n\n  private _state: GunState\n  private _counter: number\n  private _step: number\n\n  private _sliderVao: VAO\n  private _sliderTransform: Transform\n\n  private _lampList: Lamp[]\n\n  public constructor(renderer: Renderer, scene: Scene) {\n    super(\n      'gun',\n      ResourceManager.getVAO('gun-receiver'),\n      ResourceManager.getMaterial('gun'),\n      renderer\n    )\n    this._sliderVao = ResourceManager.getVAO('gun-slider')\n    this._sliderTransform = new Transform()\n    this._sliderTransform.parent = this.getTransform()\n    this._lampList = []\n    this.getTransform().setTranslation(new Vector3(-0.14, -0.23, -0.11))\n    this.getTransform().setRotation(new Orientation(0, 0, -20))\n    this.setScene(scene)\n    this._state = GunState.CHARGED\n    this._counter = 0\n    this._step = 1\n  }\n\n  public update(time: number, delta: number): void {\n\n    if(this._state === GunState.RECHARGING && this._step === 1) {\n      this._counter += 0.25;\n      const sliderPosition = this._sliderTransform.getTranslation()\n      this._sliderTransform.setTranslation(\n        new Vector3().lerp(\n          [sliderPosition.x, sliderPosition.y, 0],\n          [sliderPosition.x, sliderPosition.y, .15],\n          this._counter\n        )\n      )\n      if(this._counter >= 1) {\n        this._step = 2\n        this._counter = 0\n      }\n    } else if(this._state === GunState.RECHARGING && this._step === 2) {\n      this._counter += 0.25;\n      const sliderPosition = this._sliderTransform.getTranslation()\n      this._sliderTransform.setTranslation(\n        new Vector3().lerp(\n          [sliderPosition.x, sliderPosition.y, .15],\n          [sliderPosition.x, sliderPosition.y, 0],\n          this._counter\n        )\n      )\n      if(this._counter >= 1) {\n        this._step = 1\n        this._counter = 0\n        this._state = GunState.CHARGED\n      }\n    }\n    \n  }\n\n  public shoot(playerPosition: Vector2, rayCasting: Vector2) {\n\n    this._state = GunState.RECHARGING\n\n    /*setTimeout(() => {\n        this._state = GunState.CHARGED\n    },500);\n*/\n    const bulletPath = lineEquationOf(playerPosition, rayCasting)\n\n    const intersectionMap = new Map<string, PairPoints>()\n\n    const getDistanceFromPlayer = (monster: Entity) => new Vector3(playerPosition.x, 0, playerPosition.y)\n    .distanceTo(monster.getTransform().getTranslation())\n\n    const monstersInTheSight = this.getScene()\n      .filterVisible((entity) => entity instanceof Monster && getDistanceFromPlayer(entity) < 50)\n      .sort((entity1, entity2) => {\n        const distanceA = getDistanceFromPlayer(entity1)\n        const distanceB = getDistanceFromPlayer(entity2)\n        if(distanceA > distanceB) return 1;\n        if(distanceA < distanceB) return -1;\n        return 0;\n      })\n      .filter(entity => {\n        const monsterPosition = entity.getTransform().getTranslation()\n        const intersection = intersectionPointsBetweenLineAndCircunference(\n          bulletPath,\n          circunferenceEquationOf(\n            new Vector2(monsterPosition.x, monsterPosition.z), \n            ((entity as Monster).getHitbox() as CircleHitbox).getRadius()\n          )\n        )\n        if(intersection) {\n          intersectionMap.set(entity.getName(), intersection)\n          return true\n        }\n        return false\n      }) as Monster[]\n\n    for(let i = 0; i < monstersInTheSight.length; i++) {\n      const intersection = intersectionMap.get(monstersInTheSight[i].getName())\n      if(this._isInsideLine({p1: playerPosition, p2: rayCasting}, intersection)) {\n\n        if(monstersInTheSight[i].takeDamage()) {\n          this.getScene().remove(monstersInTheSight[i])\n        }\n\n        return;\n      }\n\n    }\n\n  }\n\n  private _isInsideLine(line: PairPoints, intersectionPoints: PairPoints): boolean {\n\n    let begin = 0, end = 0\n\n    if(line.p1.x !== line.p2.x) {\n      if(line.p1.x < line.p2.x) {\n        begin = line.p1.x\n        end = line.p2.x\n      }\n      else {\n        begin = line.p2.x\n        end = line.p1.x\n      }\n\n      return (intersectionPoints.p1.x > begin && intersectionPoints.p1.x < end) || (intersectionPoints.p2.x > begin && intersectionPoints.p2.x < end)\n    }\n\n    if(line.p1.y < line.p2.y) {\n      begin = line.p1.y\n      end = line.p2.y\n    }\n    else {\n      begin = line.p2.y\n      end = line.p1.y\n    }\n\n    return (intersectionPoints.p1.y > begin && intersectionPoints.p1.y < end) || (intersectionPoints.p2.y > begin && intersectionPoints.p2.y < end)\n\n  }\n\n  public getSliderVAO(): VAO {\n    return this._sliderVao\n  }\n\n  public getSliderTransform(): Transform {\n    return this._sliderTransform\n  }\n  \n  public setLampList(lampList: Lamp[]): void {\n    this._lampList = lampList\n  }\n\n  public getLampList(): Lamp[] {\n    return this._lampList\n  }\n\n  public getState(): GunState {\n    return this._state\n  }\n\n}\n\nexport default Gun","import { Matrix4, toRadians, Vector2, Vector3 } from '@math.gl/core';\nimport Vector from '@math.gl/core/src/classes/base/vector';\nimport Camera from '@razor/core/Camera';\nimport DynamicEntity from '@razor/core/entities/DynamicEntity';\nimport Entity from '@razor/core/entities/Entity';\nimport InputManager, { Keys } from '@razor/core/InputManager';\nimport Razor from '@razor/core/Razor';\nimport ResourceManager from '@razor/core/ResourceManager';\nimport { gl } from '@razor/gl/GLUtils';\nimport Orientation from '@razor/math/Orientation';\nimport Transform from '@razor/math/Transform';\nimport Hitbox from '@razor/physics/hitboxes/HitBox';\nimport GameController from 'src/game/GameController';\nimport GameTest from 'src/game/GameTest';\nimport Sound from 'src/game/Sound';\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport HallDoorEntity from '../HallDoorEntity';\nimport { IEntityWithLight } from '../IEntityWithLight';\nimport Lamp from '../Lamp';\nimport Gun, { GunState } from './Gun';\n\nclass Player extends DynamicEntity implements IEntityWithLight {\n\n  private _camera: Camera;\n  private _sensitivity: number\n  private _impulse: number\n\n  private _handTransform: Transform\n  private _gun: Gun\n\n  private _lampList: Lamp[]\n  private static _instance: Player;\n  private _stop: boolean;\n  private _end: Transform;\n\n\n  public constructor(\n    name: string,\n    hitbox: Hitbox,\n    camera: Camera,\n    renderer: Renderer\n  ) {\n    super(\n      name,\n      hitbox,\n      1,\n      ResourceManager.getVAO('hand'),\n      ResourceManager.getMaterial('hand'),\n      renderer\n    );\n    this._camera = camera;\n    this._sensitivity = 7.5\n    this._impulse = 100\n    this._handTransform = new Transform(\n      new Vector3(-0.8, 1, 1.5),\n      new Orientation(0, 180, 20),\n      new Vector3(1, 1, 1),\n    )\n    this._handTransform.parent = this.getTransform()\n    this._lampList = []\n    this._gun = null\n    this._stop = false;\n    Player._instance = this;\n  }\n\n  public update(time: number, delta: number): void {\n    if (this._stop) return;\n    this._updateCameraPosition()\n\n    this._move(delta)\n    if(this._end.getTranslation().distanceTo(this.getTransform().getTranslation()) < 10){\n      GameTest.getInstance().setScene(\"end\");\n    }\n\n  }\n\n  public setEndPoint(transform : Transform){\n    this._end = transform;\n  }\n\n\n  private _move(delta: number): void {\n\n    this.getForce().x = 0\n    this.getForce().y = 0\n    this.getForce().z = 0\n\n    const x = Math.sin(toRadians(this.getTransform().getRotation().y)) * this._impulse * delta;\n    const z = Math.cos(toRadians(this.getTransform().getRotation().y)) * this._impulse * delta;\n\n    let isStep = false;\n\n    if (InputManager.isKeyPressed(Keys.KEY_W)) { // FRONT\n      isStep = true;\n      Sound.Find(\"step\").play(true);\n      this.getForce().add(new Vector3(x, 0, z))\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_S)) { // BACK\n      isStep = true;\n      Sound.Find(\"step\").play(true);\n      this.getForce().add(new Vector3(-x, 0, -z))\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_A)) { // LEFT\n      isStep = true;\n      Sound.Find(\"step\").play(true);\n      this.getForce().add(new Vector3(z, 0, -x))\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_D)) { // RIGHT\n      isStep = true;\n      Sound.Find(\"step\").play(true);\n      this.getForce().add(new Vector3(-z, 0, x))\n    }\n\n    if (!isStep) Sound.Find(\"step\").pause();\n    /*\n        if(InputManager.isKeyPressed(Keys.KEY_SPACE) && this.getTransform().getY() > -1 && this.getSpeed().y > -1){ // UP\n          this.getForce().add(new Vector3(0, -this._impulse*10 * delta, 0))\n        }\n    \n        if(InputManager.isKeyPressed(Keys.KEY_C)){ // DOWN\n            this.getForce().add(new Vector3(0, this._impulse*3 * delta, 0))\n        }\n    */\n\n    if (InputManager.isKeyPressed(Keys.KEY_K)) { // RIGHT\n      this.getTransform().setPitch(0)\n    }\n\n\n    if (InputManager.isKeyPressed(Keys.KEY_E) && this._gun.getState() === GunState.CHARGED) { // RIGHT\n      if (GameController.isAmmunition()) {\n        GameController.update(\"ammunition\", -1);\n        setTimeout(() => Sound.Find(\"gun\").play(false,true),100);\n        const position = this.getTransform().getTranslation()\n        const ray = new Vector3(0, 0, 20).transform(\n          this.getTransform().toInversePositionMatrix()\n        )\n        this._gun.shoot(\n          new Vector2(\n            position.x,\n            position.z\n          ),\n          new Vector2(\n            ray.x,\n            ray.z\n          )\n        )\n      }else{\n        Sound.Find(\"empty_gun\").play();\n      }\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_LEFT)) { // RIGHT\n      const rotation = this.getTransform().getRotation()\n      this.getTransform().setYaw(rotation.yaw + this._impulse * 2 * delta)\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_RIGHT)) { // RIGHT\n      const rotation = this.getTransform().getRotation()\n      this.getTransform().setYaw(rotation.yaw + -this._impulse * 2 * delta)\n    }\n\n    if (InputManager.isKeyPressed(Keys.KEY_ESCAPE)) {// ESC\n      Razor.IS_MOUSE_INSIDE = false;\n    }\n\n    if (Razor.IS_MOUSE_INSIDE) {\n      const dx = InputManager.getMouseDX()\n      const dy = InputManager.getMouseDY()\n\n      const rotation = this.getTransform().getRotation()\n      //this.getTransform().setPitch(rotation.pitch + dy * this._sensitivity * delta)\n      this.getTransform().setYaw(rotation.yaw + dx * this._sensitivity * delta)\n    }\n\n\n  }\n\n  private _updateCameraPosition(): void {\n    this._camera.getTransform().setTranslation(\n      this.getTransform().getTranslation()\n    )\n    this._camera.getTransform().setRotation(\n      this.getTransform().getRotation()\n    )\n  }\n\n  public setLampList(lampList: Lamp[]): void {\n    this._lampList = lampList\n  }\n\n  public getLampList(): Lamp[] {\n    return this._lampList\n  }\n\n  public getHandTransformMatrix(): Matrix4 {\n    return this.getTransform().toMatrix().multiplyRight(this._handTransform.toMatrix())\n    //return this._handTransform.toMatrix().multiplyRight(this.getTransform().toMatrix())\n    //return this._handTransform.worldMatrix()\n    //return this._handTransform.toMatrix()\n    /*\n    return this._handTransform.worldMatrixFrom(\n      new Transform(\n        this.getTransform().getTranslation().add(this._handTransform.getTranslation()),\n        this.getTransform().getRotation().add(this._handTransform.getRotation()),\n        this._handTransform.getScale()\n      )\n    )\n    */\n  }\n\n  public getHandTransform(): Transform {\n    return this._handTransform\n  }\n\n  public setGun(gun: Gun) {\n    this._gun = gun\n  }\n\n  public getGun(): Gun {\n    return this._gun\n  }\n\n\n  public static getInstance() {\n    return Player._instance;\n  }\n\n\n  public setStop(value: boolean) {\n    this._stop = value;\n  }\n  public getStop(): boolean {\n    return this._stop;\n  }\n\n}\n\nexport default Player","import Hitbox from \"@razor/physics/hitboxes/HitBox\";\nimport Renderer from \"@razor/renderer/Renderer\";\nimport MapEntity from \"./MapEntity\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport { Matrix4, Vector3 } from \"@math.gl/core\";\nimport Sound from \"../Sound\";\nimport DialogEntity from \"./gui/DialogEntity\";\nimport Player from \"./player/Player\";\nimport Camera from \"@razor/core/Camera\";\nimport Transform from \"@razor/math/Transform\";\nimport GameController from \"../GameController\";\n\nexport enum HallDoorState {\n  OPENED = 0,\n  OPENING = 1,\n  CLOSED = 2,\n  CLOSING = 3\n}\n\nclass HallDoorEntity extends MapEntity {\n\n  private _state: HallDoorState\n  private _counter: number\n  private _camera: Camera;\n  private _cameraTransform: Transform;\n  private _giveAmmunition : boolean;\n  public constructor(\n    name: string,\n    hitbox: Hitbox,\n    renderer: Renderer,\n    cameraTransform: Transform = new Transform\n  ) {\n    super(\n      name,\n      hitbox,\n      1,\n      ResourceManager.getVAO('hall-door'),\n      ResourceManager.getMaterial('hall-door'),\n      renderer\n    );\n    this._state = HallDoorState.CLOSED\n    this._counter = 0\n    this._camera = Camera.Main;\n    this._cameraTransform = cameraTransform;\n    this._giveAmmunition = false;\n  }\n\n  public update(time: number, delta: number): void {\n\n\n\n    if (this._state === HallDoorState.OPENING) {\n      const position = this.getTransform().getTranslation()\n      this._counter += 0.01\n      this.getTransform().setTranslation(\n        new Vector3()\n          .lerp(\n            [position.x, 0.01, position.z],\n            [position.x, -6.75, position.z],\n            this._counter\n          )\n      )\n      if (this._counter > 1) {\n        this.isOpen(true);\n        this._state = HallDoorState.OPENED\n        this.getHitbox().disableCollision(true)\n        this._counter = 0\n      }\n    }\n    else if (this._state === HallDoorState.CLOSING) {\n      const position = this.getTransform().getTranslation()\n      this._counter += 0.01\n      this.getTransform().setTranslation(\n        new Vector3()\n          .lerp(\n            [position.x, -6.75, position.z],\n            [position.x, 0.01, position.z],\n            this._counter\n          )\n      )\n      if (this._counter > 1) {\n        this.isClose(true);\n\n        this._state = HallDoorState.CLOSED\n        this.getHitbox().disableCollision(false)\n        this._counter = 0\n      }\n    }\n\n  }\n\n  public interact(): void {\n    if (this._state === HallDoorState.CLOSED) {\n      this.isOpen(false);;\n      this._state = HallDoorState.OPENING\n    }\n    else if (this._state === HallDoorState.OPENED) {\n      this.isClose(false);\n      this._state = HallDoorState.CLOSING\n    }\n  }\n\n  private isOpen(finish: boolean) {\n    if (finish) {\n      if(!this._giveAmmunition){\n        this._giveAmmunition = true;\n        GameController.update(\"ammunition\", 10);\n        DialogEntity.getDialog(\"display\").animateText(\"municao coletada\", 30, { vertical: '10%', horizontal: 'center' }, function () {\n          setTimeout(() => this.remove(), 2000);\n        });\n      }\n      Sound.Find(\"door\").pause();\n      setTimeout(() => Player.getInstance().setStop(false),300);\n    } else {\n      DialogEntity.getDialog(\"display\").animateText(\"portao aberto\", 30, { vertical: '10%', horizontal: 'center' }, function () {\n        setTimeout(() => this.remove(), 2000);\n      });\n      Sound.Find(\"door\").play();\n      Player.getInstance().setStop(true);\n      this._camera.getTransform().setTranslation(this._cameraTransform.getTranslation());\n      this._camera.getTransform().setRotation(this._cameraTransform.getRotation());\n    }\n  }\n\n  private isClose(finish: boolean) {\n    if (finish) {\n      Sound.Find(\"door\").pause();\n      setTimeout(() => Player.getInstance().setStop(false),300);\n    } else {\n\n      DialogEntity.getDialog(\"display\").animateText(\"portao fechado\", 30, { vertical: '10%', horizontal: 'center' }, function () {\n        setTimeout(() => this.remove(), 2000);\n      });\n      Sound.Find(\"door\").play();\n      Player.getInstance().setStop(true);\n      this._camera.getTransform().setTranslation(this._cameraTransform.getTranslation());\n      this._camera.getTransform().setRotation(this._cameraTransform.getRotation());\n    }\n  }\n\n  public getState(): HallDoorState {\n    return this._state\n  }\n\n}\n\nexport default HallDoorEntity","import InputManager, { Keys } from \"@razor/core/InputManager\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport Hitbox from \"@razor/physics/hitboxes/HitBox\";\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport DoorPanelMaterial from \"../materials/DoorPanelMaterial\";\nimport Sound from \"../Sound\";\nimport DialogEntity from \"./gui/DialogEntity\";\nimport HallDoorEntity, { HallDoorState } from \"./HallDoorEntity\";\nimport MapEntity from \"./MapEntity\";\nimport Player from \"./player/Player\";\n\nclass DoorPanelEntity extends MapEntity {\n\n  private _hallDoor: HallDoorEntity\n  private _player: Player\n\n  private _locked: boolean\n\n  public constructor(\n      name: string, \n      hitbox: Hitbox,\n      renderer: Renderer\n  ) {\n    super(\n        name, \n        hitbox, \n        1, \n        ResourceManager.getVAO('door-panel'), \n        ResourceManager.getMaterial('door-panel'), \n        renderer\n    );\n    this._hallDoor = null\n    this._player = null\n    this._locked = true\n  }\n  \n  public update(time: number, delta: number): void {\n\n    const position = this.getTransform().getTranslation()\n    const playerPosition = this._player.getTransform().getTranslation()\n      \n    if(position.distanceTo(playerPosition) < 5 && InputManager.isKeyPressed(Keys.KEY_F)) {\n      this._hallDoor.interact()\n\n      if(this._hallDoor.getState() === HallDoorState.CLOSING) {\n        this.setLocked(true);\n      } else if(this._hallDoor.getState() === HallDoorState.OPENING) {\n        this.setLocked(false);\n      }\n    }\n\n  }\n\n\n\n  public setHallDoor(hallDoor: HallDoorEntity): void {\n    this._hallDoor = hallDoor\n  }\n\n  public getHallDoor(): HallDoorEntity {\n    return this._hallDoor\n  }\n\n  public setPlayer(player: Player): void {\n    this._player = player\n  }\n\n  public getPlayer(): Player {\n    return this._player\n  }\n\n  public setLocked(locked: boolean): void {\n    this._locked = locked\n    /*\n    Sound.Find(\"door\").play();\n    DialogEntity.getDialog(\"display\").animateText(locked ? \"portao fechado\" : \"portao aberto\",30,{vertical:'10%',horizontal:'center'},function(){\n      setTimeout(() => this.remove(),2000);\n    });*/\n  }\n\n  public isLocked(): boolean {\n    return this._locked\n  }\n\n}\n\nexport default DoorPanelEntity","import {Matrix4, Vector3,cos} from \"@math.gl/core\"\n\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport ResourceManager from \"../../engine/core/ResourceManager\";\nimport GLUtils, { gl } from \"../../engine/gl/GLUtils\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport CanvasCamera from '../CanvasCamera'\nimport { toRadians } from \"@razor/math/math\";\nimport Lamp from \"../entities/Lamp\";\nimport MapEntity from \"../entities/MapEntity\";\nimport FrameRenderer from \"./FrameRenderer\";\nimport DoorPanelEntity from \"../entities/DoorPanelEntity\";\n\nclass MapRenderer extends Renderer {\n\n    private _projection: Matrix4;\n\n    constructor(camera: CanvasCamera) {\n        super('renderer1', camera)\n        this._projection = new Matrix4().perspective({\n            fovy: toRadians(70), \n            aspect: window.innerWidth / window.innerHeight, \n            near: 1, \n            far: 1000\n        })\n\n        this._maximumRenderDistance = 110\n    }\n\n    private distanceConfig = {\n        7: [1.0,\t0.7,\t1.8],\n        13:[1.0,\t0.35,\t0.44],\n        20:[1.0,\t0.22,\t0.20],\n        32:[1.0,\t0.14,\t0.07],\n        50:[1.0,\t0.09,\t0.032],\n        65:[1.0,\t0.07,\t0.017],\n        100:[1.0,\t0.045,\t0.0075],\n        160:[1.0,\t0.027,\t0.0028],\n        200:[1.0,\t0.022,\t0.0019],\n        325:[1.0,\t0.014,\t0.0007],\n        600:[1.0,\t0.007,\t0.0002],\n        3250: [1.0,\t0.0014,\t0.000007]\n    };\n\n    public render() {\n        ResourceManager.forEachMaterial((material) => {\n            material.bind()\n            const shader = material.getShader();\n            shader.setMatrix4x4('u_projection', this._projection);\n            shader.setMatrix4x4('u_view', this.getCamera().getView());\n            const cameraPosition = this.getCamera().getTransform().getTranslation();\n            shader.setVector3('u_camera_position',cameraPosition.negate())\n            //shader.setVector3('u_color',new Vector3(1,0.2,0.3));\n            shader.setVector3(\"lightCamera.color.ambient\", new Vector3(1,1,1));\n            shader.setVector3(\"lightCamera.color.diffuse\", new Vector3(0.5,0.5,0.5))\n            shader.setVector3(\"lightCamera.color.specular\",new Vector3(0.3,0.3,0.3));\n            //shader.setFloat(\"u_light.cutOff\",cos(toRadians(0))); AINDA NÃO SEI O QUE FAZER AQUI\n\n            shader.setVector3(\"lightCamera.position\",cameraPosition.negate())\n            const distance = this.distanceConfig[100];\n            shader.setFloat(\"lightCamera.distance.constant\", distance[0]);\n            shader.setFloat(\"lightCamera.distance.linear\", distance[1])\n            shader.setFloat(\"lightCamera.distance.quadratic\",distance[2]);\n            shader.setFloat(\"lightCamera.shininess\",32)\n            shader.setInt('onlyLights',FrameRenderer.mode == \"mascara\" ? 1 : 0);\n\n            this.getEntitiesByMaterial(material).forEach((entity: Entity,index : number) => {\n                if(!(entity instanceof MapEntity || entity instanceof Lamp)) {\n                    return;\n                }\n                if(entity instanceof MapEntity) {\n                    (entity as MapEntity).getLampList().forEach((lamp, i) => {\n                        \n                        const path = `pointLights[${i}]`;\n                        shader.setVector3(path+\".color.ambient\", lamp.color);\n                        shader.setVector3(path+\".color.diffuse\", lamp.color)\n                        shader.setVector3(path+\".color.specular\",lamp.color);\n                        const distance = this.distanceConfig[lamp.distance];\n                        shader.setFloat(path+\".distance.constant\", distance[0]);\n                        shader.setFloat(path+\".distance.linear\", distance[1])\n                        shader.setFloat(path+\".distance.quadratic\",distance[2]);\n                        shader.setFloat(path+\".shininess\",lamp.shininess);\n                        shader.setVector3(path+\".position\",lamp.getTransform().getTranslation().negate());\n                        \n                    })\n                }\n\n                if(entity instanceof DoorPanelEntity) {\n                    shader.setInt('u_locked', Number((entity as DoorPanelEntity).isLocked()))\n                }\n                \n                if(entity instanceof Lamp) {\n                    shader.setInt(\"applyLight\", 0);\n                    shader.setVector3('u_lightColor', entity.color)\n                } else {\n                    shader.setInt(\"applyLight\", 1);\n                }\n\n                material.getShader().setMatrix4x4('u_transform', entity.getTransform().worldMatrix());\n                material.getShader().setMatrix4x4('u_worldInverseTranspose',entity.getTransform().toMatrix().invert().transpose());\n                entity.getVAO().bind()\n                GLUtils.draw(entity.getVAO().getLength())\n                entity.getVAO().unbind();\n            })\n            \n            material.unbind()\n\n        })\n\n\n    }\n}\n\nexport default MapRenderer","import {Vector3, Euler} from \"@math.gl/core\"\n\nimport Entity from \"../engine/core/entities/Entity\";\nimport Razor from \"../engine/core/Razor\";\n//import SceneManager from \"@engine/core/SceneManager\";\nimport Orientation from \"@razor/math/Orientation\";\nimport Transform from \"../engine/math/Transform\";\nimport Camera from \"../engine/core/Camera\";\nimport InputManager, {Keys} from \"../engine/core/InputManager\";\nimport { toRadians } from \"../engine/math/math\";\n//import CameraManager from \"./CameraManager\";\nimport SimpleEntity from \"./entities/SimpleEntity\";\nimport GameTest from \"./GameTest\";\n\n\nclass CanvasCamera extends Camera {\n\n    public static readonly MODE = {\n        FIRST_PERSON: 0,\n        THIRD_PERSON: 1,\n    }\n    \n    private _name: string\n\n    private _speed: number\n    private _sensitivity: number\n    private _pitch: number\n    private _angleAround: number\n    \n    private _lockedIn: Entity\n    private _mode: number\n    private _lookAt: boolean\n\n\n    public constructor(\n        name: string,\n        translation: Vector3 = new Vector3,\n        rotation : Orientation = new Orientation\n    ) {\n        super(translation, rotation)\n        this._name = name\n        this._speed = 40\n        this._sensitivity = 7.5\n        this._pitch = 0\n        this._lockedIn = null\n        this._mode = CanvasCamera.MODE.FIRST_PERSON\n        this._lookAt = false\n        this._angleAround = 0\n    }\n\n    public update(delta: number) {\n/*\n        if(this._mode === CanvasCamera.MODE.FIRST_PERSON && GameTest.getInstance().getSceneManager().getActive().getName() != \"menu\") {\n            this._firstPersonMovement(delta)\n        }\n\n        if(this._mode === CanvasCamera.MODE.THIRD_PERSON) {\n            this._thirdPersonMovement(delta)\n        }\n*/\n    }\n\n    private _firstPersonMovement(delta: number): void {\n\n        const x = Math.sin(toRadians(this.getTransform().getRotation().y)) * this._speed * delta;\n        const z = Math.cos(toRadians(this.getTransform().getRotation().y)) * this._speed * delta;\n\n        if(InputManager.isKeyPressed(Keys.KEY_W)){ // FRONT\n            const translation = this.getTransform().getTranslation()\n            translation.x += x;\n            translation.z += z;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isKeyPressed(Keys.KEY_S)){ // BACK\n            const translation = this.getTransform().getTranslation()\n            translation.x += -x;\n            translation.z += -z;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isKeyPressed(Keys.KEY_A)){ // LEFT\n            const translation = this.getTransform().getTranslation()\n            translation.x += z;\n            translation.z += -x;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isKeyPressed(Keys.KEY_D)){ // RIGHT\n            const translation = this.getTransform().getTranslation()\n            translation.x += -z;\n            translation.z += x;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isKeyPressed(Keys.KEY_SPACE)){ // UP\n            const translation = this.getTransform().getTranslation()\n            translation.y += -this._speed * delta;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isKeyPressed(Keys.KEY_C)){ // DOWN\n            const translation = this.getTransform().getTranslation()\n            translation.y += this._speed * delta;\n            this.getTransform().setTranslation(translation)\n        }\n\n        if(InputManager.isMouseLeft()) {\n            const dx = InputManager.getMouseDX() \n            const dy = InputManager.getMouseDY() \n\n            const rotation = this.getTransform().getRotation()\n            this.getTransform().setPitch(rotation.pitch + dy * this._sensitivity * delta)\n            this.getTransform().setYaw(rotation.yaw + dx * this._sensitivity * delta)\n\n            //console.log(rotation);\n        /*\n            this.getTransform().setRotation(new Euler(\n                rotation.yaw + dy * this._sensitivity * delta,\n                rotation.pitch + dx * this._sensitivity * delta,\n                rotation.roll\n            ))\n            \n            this.getTransform().setRotation(\n                this.getTransform().getRotation().sum(new Vector3(\n                    dy * this._sensitivity * delta, \n                    dx * this._sensitivity * delta,\n                    0\n                ))\n            )\n    */\n        }\n        \n\n    }\n/*\n    private _thirdPersonMovement(delta: number): void {\n\n        if(InputManager.isMouseLeft()) {\n            this._angleAround -= InputManager.getMouseDX() * this._sensitivity*2 * delta\n            this._pitch -= InputManager.getMouseDY() * this._sensitivity*2 * delta\n            if(this._pitch > 45) {\n                this._pitch = 45\n            }\n            else if(this._pitch < -45) {\n                this._pitch = -45\n            }\n        }\n\n        const horizontalDistance = 10 * Math.cos(toRadian(this._pitch))\n        const verticalDistance = 10 * Math.sin(toRadian(this._pitch))\n        const theta = this._lockedIn.getTransform().getRotation().y + this._angleAround\n        const offsetX = horizontalDistance * Math.sin(toRadian(theta))\n        const offsetZ = horizontalDistance * Math.cos(toRadian(theta))\n        const entityTranslation = this._lockedIn.getTransform().getTranslation()\n\n        \n        this.getTransform().setTranslation(new Vector3(\n            (entityTranslation.x + offsetX) * -1,\n            (entityTranslation.y - verticalDistance) * -1,\n            (entityTranslation.z + offsetZ) * -1\n        ))\n\n        if(InputManager.isMouseLeft()) { // MOUSE\n            this.getTransform().setRotation(new Quaternion(\n                -this._pitch,\n                180+theta\n            ))\n        }\n\n    }\n/*\n    public lock(entity: Entity): void {\n        this._lockedIn = entity\n        this._mode = CanvasCamera.MODE.FIRST_PERSON\n\n        if(entity) {\n            this._mode = CanvasCamera.MODE.THIRD_PERSON\n            const translation = entity.getTransform().getTranslation()\n            translation.x *= -1\n            translation.z += 10\n            this.getTransform().setTranslation(translation)\n            this.getTransform().setRotation(new Vec3())\n            this._angleAround = 180;\n        }\n        \n    }\n*/\n/*\n    public getView(): Mat4 {\n        return Mat4.view(\n            this.getTransform().getTranslation(),\n            this.getTransform().getRotation(),\n        )\n    }\n*/\n    public getLockedIn(): Entity {\n        return this._lockedIn\n    }\n\n    public setLookAt(shouldLookAt: boolean): void {\n        this._lookAt = shouldLookAt\n    }\n\n    public shouldLookAt(): boolean {\n        return this._lookAt\n    }\n\n    public getName(): string {\n        return this._name;\n    }\n\n}\n\nexport default CanvasCamera","import IResource from '../IResource'\nimport Shader from '../Shader'\n\nabstract class Material implements IResource {\n\n  private _name: string\n  private _shader: Shader\n  \n  public constructor (name: string, shader: Shader) {\n    this._name = name\n    this._shader = shader\n  }\n\n  public abstract create(): void;\n  public abstract bind(): void;\n  public abstract unbind(): void;\n  public abstract destroy(): void;\n\n  public getShader(): Shader {\n    return this._shader\n  }\n\n  public setShader(shader: Shader): void {\n    this._shader = shader\n  }\n\n  public getName(): string {\n    return this._name\n  }\n\n  public setName(name: string): void {\n    this._name = name\n  }\n\n\n}\n\nexport default Material","import Material from './Material'\nimport Texture from '../Texture'\nimport Shader from '../Shader'\nimport { gl } from '../../gl/GLUtils'\n\nclass DefaultMaterial extends Material {\n\n  private _texture: Texture\n  \n  public constructor (name: string, shader: Shader, texture?: Texture) {\n    super(name, shader)\n    this._texture = texture\n  }\n\n  public create(): void {\n    this.getShader().create()\n    this._texture?.create()\n  }\n\n  public bind(): void {\n    this.getShader().bind()\n    if(this._texture){\n      gl.activeTexture(gl.TEXTURE0);\n      this._texture.bind();\n      this.getShader().setInt('u_texture', 0)\n    }\n  }\n\n  public unbind(): void {\n    this._texture?.unbind()\n    this.getShader().unbind()\n  }\n\n  public destroy(): void {\n    this._texture?.destroy()\n    this.getShader().destroy()\n  }\n\n  public getTexture(): Texture {\n    return this._texture\n  }\n\n  public setTexture(texture: Texture): void {\n    this._texture = texture\n  }\n\n\n}\n\nexport default DefaultMaterial","import Vector from './base/vector';\nimport { config, isArray } from '../lib/common';\nimport { checkNumber } from '../lib/validators';\nimport * as vec4 from 'gl-matrix/vec3';\nimport { vec4_transformMat2, vec4_transformMat3 } from '../lib/gl-matrix-extras';\nconst constants = {};\nexport default class Vector4 extends Vector {\n  static get ZERO() {\n    return constants.ZERO = constants.ZERO || Object.freeze(new Vector4(0, 0, 0, 0));\n  }\n\n  constructor(x = 0, y = 0, z = 0, w = 0) {\n    super(-0, -0, -0, -0);\n\n    if (isArray(x) && arguments.length === 1) {\n      this.copy(x);\n    } else {\n      if (config.debug) {\n        checkNumber(x);\n        checkNumber(y);\n        checkNumber(z);\n        checkNumber(w);\n      }\n\n      this[0] = x;\n      this[1] = y;\n      this[2] = z;\n      this[3] = w;\n    }\n  }\n\n  set(x, y, z, w) {\n    this[0] = x;\n    this[1] = y;\n    this[2] = z;\n    this[3] = w;\n    return this.check();\n  }\n\n  copy(array) {\n    this[0] = array[0];\n    this[1] = array[1];\n    this[2] = array[2];\n    this[3] = array[3];\n    return this.check();\n  }\n\n  fromObject(object) {\n    if (config.debug) {\n      checkNumber(object.x);\n      checkNumber(object.y);\n      checkNumber(object.z);\n      checkNumber(object.w);\n    }\n\n    this[0] = object.x;\n    this[1] = object.y;\n    this[2] = object.z;\n    this[3] = object.w;\n    return this;\n  }\n\n  toObject(object) {\n    object.x = this[0];\n    object.y = this[1];\n    object.z = this[2];\n    object.w = this[3];\n    return object;\n  }\n\n  get ELEMENTS() {\n    return 4;\n  }\n\n  get z() {\n    return this[2];\n  }\n\n  set z(value) {\n    this[2] = checkNumber(value);\n  }\n\n  get w() {\n    return this[3];\n  }\n\n  set w(value) {\n    this[3] = checkNumber(value);\n  }\n\n  transform(matrix4) {\n    vec4.transformMat4(this, this, matrix4);\n    return this.check();\n  }\n\n  transformByMatrix3(matrix3) {\n    vec4_transformMat3(this, this, matrix3);\n    return this.check();\n  }\n\n  transformByMatrix2(matrix2) {\n    vec4_transformMat2(this, this, matrix2);\n    return this.check();\n  }\n\n  transformByQuaternion(quaternion) {\n    vec4.transformQuat(this, this, quaternion);\n    return this.check();\n  }\n\n  applyMatrix4(m) {\n    m.transform(this, this);\n    return this;\n  }\n\n}\n//# sourceMappingURL=vector4.js.map","import { Matrix4, Vector3, cos, Vector4 } from \"@math.gl/core\"\n\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport ResourceManager from \"../../engine/core/ResourceManager\";\nimport GLUtils, { gl } from \"../../engine/gl/GLUtils\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport CanvasCamera from '../CanvasCamera'\nimport { toRadians } from \"@razor/math/math\";\nimport Lamp from \"../entities/Lamp\";\nimport Razor from \"@razor/core/Razor\";\nimport ImageEntity from \"../entities/gui/ImageEntity\";\nimport FrameRenderer from \"./FrameRenderer\";\n\nclass GuiRenderer extends Renderer {\n\n    private _projection: Matrix4;\n\n    constructor(camera: CanvasCamera) {\n        super('guirenderer',camera)\n        this._projection = new Matrix4().ortho({\n            top: 0,\n            left: 0,\n            right: Razor.CANVAS.width,\n            bottom: Razor.CANVAS.height,\n            near: -1,\n            far: 100\n        })\n    }\n\n    public render() {\n        gl.disable(gl.CULL_FACE)\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        ResourceManager.forEachMaterial((material) => {\n            material.bind()\n            const shader = material.getShader();\n            shader.setInt('onlyLights',FrameRenderer.mode == \"mascara\" ? 1 : 0);\n            shader.setMatrix4x4('u_projection', this._projection);\n            this.getEntitiesByMaterial(material).forEach((entity: Entity, index: number) => {\n                if('color' in entity){\n                    //@ts-ignore\n                    let color = entity.color;\n                    //@ts-ignore\n                    color = new Vector4(color.x,color.y,color.z,'alpha' in entity ? entity.alpha : 0.1);\n                    shader.setVector4('u_color',color);\n                }\n\n                material.getShader().setMatrix4x4('u_transform', entity.getTransform().worldMatrix());\n                entity.render();\n                entity.getVAO().bind()\n                GLUtils.draw(entity.getVAO().getLength())\n                entity.getVAO().unbind();\n\n            })\n\n            material.unbind()\n\n        })\n       // gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.enable(gl.CULL_FACE)\n\n    }\n}\n\nexport default GuiRenderer","import { Matrix4, Vector2, Vector3 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport Scene from \"@razor/core/scenes/Scene\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport GuiEntity from \"./GuiEntity\";\nimport RectangleEntity from \"./RectangleEntity\";\nimport SelectEntity from \"./SelectEntity\";\nimport TextEntity from \"./TextEntity\";\n\nclass OptionEntity extends GuiEntity {\n    private size: Vector2;\n\n\n    private text : TextEntity;\n    private selection : RectangleEntity;\n    private rect : RectangleEntity;\n    private callback : () => any = null;\n\n    public constructor(select : SelectEntity,name: string, renderer: Renderer,scene : Scene) {\n        super(name, renderer);\n        this.getTransform().parent = select.getTransform();\n        this.setScene(scene);\n        \n        this.selection = this.addRectangle(this.getName()+\"_option_selection\");\n        this.selection.setSize(190,60)\n        this.selection.color = new Vector3(1,1,1)\n        this.selection.getTransform().setTranslation(new Vector3(5,5,1));\n\n        this.rect = this.addRectangle(this.getName()+\"_option_rectangle\");\n        this.rect.getTransform().setTranslation(new Vector3(0,0,1));\n        this.rect.setSize(180,50)\n        this.text = this.addText(this.getName()+\"_option_text\");\n        this.text.getTransform().setTranslation(new Vector3(-15,-15,-1))\n        this.text.getTransform().setScale(new Vector3(2,2,2))\n        ///this.rect.getTransform().parent = this;\n        //this.text.getTransform().parent = this;\n    }\n\n    public selected(visible : boolean){\n        this.getScene().setVisibility(this.selection,visible);\n    }\n\n    public getRect() : RectangleEntity{\n        return this.rect;\n    }\n\n    public setText(text : string){\n        this.text.setText(text);\n    }\n\n    public setExecute(callback: () => any){\n        this.callback = callback;\n    }\n\n    public execute() : any{\n        if(this.callback == null) return;\n        return this.callback();\n    }\n\n    \n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default OptionEntity","import { Matrix4, Vector2, Vector3 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport InputManager, { Keys } from \"@razor/core/InputManager\";\nimport Razor from \"@razor/core/Razor\";\nimport Scene from \"@razor/core/scenes/Scene\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Transform from \"@razor/math/Transform\";\nimport Sound from \"src/game/Sound\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport GuiEntity from \"./GuiEntity\";\nimport OptionEntity from \"./OptionEntity\";\n\nclass SelectEntity extends GuiEntity {\n\n    private padding :number = 0;\n    private options : OptionEntity[] = [];\n    private selected : number = 0;\n    private change : boolean = false;\n    public constructor(name: string, renderer: Renderer,scene : Scene) {\n        super(name, renderer);\n        this.setScene(scene);\n    }\n    \n    \n    public addOption(text: string): OptionEntity {\n        const name = text.toLowerCase().replace(/ /g, '_').replace(/[^\\w-]+/g, '');\n        const entity = new OptionEntity(this, this.getName()+\"_\"+name, this.getRenderer(),this.getScene())\n\n        if(this.padding > 0) entity.selected(false);\n        this.options.push(entity);\n        entity.getTransform().setTranslation(new Vector3(0,70 * (this.padding++),0).negate());\n        entity.setText(text);\n        entity.getTransform().parent = this.getTransform();\n        this.getScene().add(entity);\n        this.updateTranslation();\n        return entity;\n    }\n\n    public updateTranslation(width : number = Razor.CANVAS.width,height : number = Razor.CANVAS.height){\n        const top = height/2 - 50/2 - (70 * this.padding)/2;\n        const left = width/2 - 180/2;\n        this.getTransform().setTranslation(new Vector3(left,top,0).negate())\n    }\n\n    \n    public update(time: number, delta: number): void {\n        const keyDown = InputManager.isKeyPressedDown(Keys.KEY_DOWN);\n        const keyUp = InputManager.isKeyPressedDown(Keys.KEY_UP);\n        if(keyDown || keyUp){\n            if(this.change){\n                let next;\n                const prev = this.selected;\n                if(keyUp){\n                    next = prev - 1;\n                    if(next < 0) next = this.options.length-1;\n                }else{\n                    next = prev + 1;\n                    if(next >= this.options.length) next = 0;\n                }\n                Sound.Find(\"menu\").play();\n                this.options[prev].selected(false);\n                this.options[next].selected(true);\n                this.selected = next;\n                this.change = false;\n            }\n        }else \n        if(InputManager.isKeyPressedDown(Keys.KEY_ENTER)){\n            if(this.change){\n                this.options[this.selected].execute();\n            }\n        }else{\n            this.change = true;\n        }\n    }\n}\n\nexport default SelectEntity","import {Matrix4, Vector3,cos} from \"@math.gl/core\"\n\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport ResourceManager from \"../../engine/core/ResourceManager\";\nimport GLUtils, { gl } from \"../../engine/gl/GLUtils\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport CanvasCamera from '../CanvasCamera'\nimport { toRadians } from \"@razor/math/math\";\nimport MapEntity from \"../entities/MapEntity\";\nimport Lamp from \"../entities/Lamp\";\nimport Material from \"@razor/appearance/material/Material\";\nimport VAO from \"@razor/buffer/VAO\";\nimport Monster from \"../entities/monster/Monster\";\nimport Player from \"../entities/player/Player\";\n\nclass MonsterRenderer extends Renderer {\n\n    private _projection: Matrix4;\n\n    private _material: Material\n    private _vao: VAO\n\n    private _player: Player\n\n    constructor(camera: CanvasCamera) {\n        super('monster-renderer', camera)\n        \n        this._projection = new Matrix4().perspective({\n            fovy: toRadians(70), \n            aspect: window.innerWidth / window.innerHeight, \n            near: 1, \n            far: 1000\n        })\n        this._material = ResourceManager.getMaterial('monster')\n        this._vao = ResourceManager.getVAO('monster')\n\n        this._maximumRenderDistance = 75\n\n    }\n\n    public setPlayer(player: Player): void {\n        this._player = player;\n    }\n\n    private distanceConfig = {\n        7: [1.0,\t0.7,\t1.8],\n        13:[1.0,\t0.35,\t0.44],\n        20:[1.0,\t0.22,\t0.20],\n        32:[1.0,\t0.14,\t0.07],\n        50:[1.0,\t0.09,\t0.032],\n        65:[1.0,\t0.07,\t0.017],\n        100:[1.0,\t0.045,\t0.0075],\n        160:[1.0,\t0.027,\t0.0028],\n        200:[1.0,\t0.022,\t0.0019],\n        325:[1.0,\t0.014,\t0.0007],\n        600:[1.0,\t0.007,\t0.0002],\n        3250: [1.0,\t0.0014,\t0.000007]\n    };\n\n\n    public render() {\n        \n        this._material.bind()\n        const shader = this._material.getShader();\n        shader.setMatrix4x4('u_projection', this._projection);\n        shader.setMatrix4x4('u_view', this.getCamera().getView());\n        const cameraPosition = this.getCamera().getTransform().getTranslation();\n        shader.setVector3('u_camera_position',cameraPosition.negate())\n        shader.setVector3('u_color',new Vector3(1,0.2,0.3));\n        shader.setVector3(\"lightCamera.color.ambient\", new Vector3(1,1,1));\n        shader.setVector3(\"lightCamera.color.diffuse\", new Vector3(0.5,0.5,0.5))\n        shader.setVector3(\"lightCamera.color.specular\",new Vector3(0.3,0.3,0.3));\n        //shader.setFloat(\"u_light.cutOff\",cos(toRadians(0))); AINDA NÃO SEI O QUE FAZER AQUI\n\n        shader.setVector3(\"lightCamera.position\",cameraPosition.negate())\n        const distance = this.distanceConfig[100];\n        shader.setFloat(\"lightCamera.distance.constant\", distance[0]);\n        shader.setFloat(\"lightCamera.distance.linear\", distance[1])\n        shader.setFloat(\"lightCamera.distance.quadratic\",distance[2]);\n        shader.setFloat(\"lightCamera.shininess\",32)\n        \n        this._vao.bind()\n\n        const position = this._player.getTransform().getTranslation()\n        \n        this.getEntitiesByMaterial(this._material)\n            .filter(entity => entity instanceof Monster)\n            .sort((entity1, entity2) => {\n                const distanceA = position.distanceTo(entity1.getTransform().getTranslation())\n                const distanceB = position.distanceTo(entity2.getTransform().getTranslation())\n                if(distanceA < distanceB) return 1;\n                if(distanceA > distanceB) return -1;\n                return 0;\n            }).forEach((entity: Entity,index : number) => {\n            (entity as Monster).getLampList().forEach((lamp, i) => {\n                \n                const path = `pointLights[${i}]`;\n                shader.setVector3(path+\".color.ambient\", lamp.color);\n                shader.setVector3(path+\".color.diffuse\", lamp.color)\n                shader.setVector3(path+\".color.specular\",lamp.color);\n                const distance = this.distanceConfig[lamp.distance];\n                shader.setFloat(path+\".distance.constant\", distance[0]);\n                shader.setFloat(path+\".distance.linear\", distance[1])\n                shader.setFloat(path+\".distance.quadratic\",distance[2]);\n                shader.setFloat(path+\".shininess\",lamp.shininess);\n                shader.setVector3(path+\".position\",lamp.getTransform().getTranslation().negate());\n                \n            })\n            \n            shader.setInt(\"applyLight\", 1);\n            this._material.getShader().setMatrix4x4('u_transform', this._getTransformMatrix(entity as Monster));\n            this._material.getShader().setMatrix4x4('u_worldInverseTranspose',entity.getTransform().toMatrix().invert().transpose());\n            \n            GLUtils.draw(this._vao.getLength())\n            \n        })\n        this._vao.unbind();\n        \n        this._material.unbind()\n\n    }\n\n    private _getTransformMatrix(monster: Monster): Matrix4 {\n\n        const playerPosition = this._player.getTransform().getTranslation()\n        const monsterPosition = monster.getTransform().getTranslation()\n\n        const distance = monsterPosition.subtract(playerPosition).normalize()\n        \n        const ROTATION = new Matrix4([\n            distance.z, 0, -distance.x, 0,\n            0,          1, 0,           0,\n            distance.x, 0, distance.z,  0,\n            0,          0, 0,           1\n        ])\n\n        const TRANSLATION = new Matrix4().translate(monster.getTransform().getTranslation().negate())\n\n        const SCALE = new Matrix4().scale(monster.getTransform().getScale())\n\n        return TRANSLATION.multiplyRight(ROTATION.multiplyRight(SCALE))\n\n    }\n\n}\n\nexport default MonsterRenderer","import { Vector3 } from \"@math.gl/core\";\nimport Entity from \"@razor/core/entities/Entity\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport Renderer from \"@razor/renderer/Renderer\";\nimport GuiEntity from \"./gui/GuiEntity\";\nimport TextEntity from \"./gui/TextEntity\";\n\n\nclass DisplayEntity extends GuiEntity {\n\n    private _text : TextEntity;\n\n    public constructor(name: string, renderer: Renderer) {\n        super(name, renderer);\n    }\n    \n    public setText(name: string,color : Vector3 = new Vector3(0.9,0.9,0.9)) : void {\n        const rectangle = this.addRectangle(this.getName()+\"_rectangle_left\");\n        rectangle.color = color;\n        rectangle.setSize(120, 50);\n        rectangle.getTransform().parent = this.getTransform();\n        const text = this.addText(this.getName()+\"_text_rectangle_left\");\n        this._text = text;\n        text.setText(name)\n        text.getTransform().setTranslation(new Vector3(50, 15, 1).negate())\n        text.getTransform().setScale(new Vector3(2, 2, 2))\n    }\n\n    public setImage(image: Entity){\n        image.getTransform().setTranslation(new Vector3(0,0, 1).negate());\n        image.getTransform().setScale(new Vector3(0.09,0.09, 1));\n        this.getScene().add(image);\n        image.getTransform().parent = this.getTransform();\n    }\n\n    public updateText(text : string | number){\n        \n        this._text.setText(String(text));\n    }\n\n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default DisplayEntity","import { Matrix4 } from \"@math.gl/core\";\nimport DefaultMaterial from \"@razor/appearance/material/DefaultMaterial\";\nimport VBO from \"@razor/buffer/VBO\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport TextureLoader from \"@razor/loader/TextureLoader\";\nimport Material from \"../../../engine/appearance/material/Material\";\nimport VAO from \"../../../engine/buffer/VAO\";\nimport Entity from \"../../../engine/core/entities/Entity\";\nimport Renderer from \"../../../engine/renderer/Renderer\";\nimport Text from \"../../utils/Text\";\nimport GuiEntity from \"./GuiEntity\";\n\nclass ImageEntity extends GuiEntity {\n\n    private size = { width: 0, height: 0 };\n    public constructor(name: string, pathname: string, renderer: Renderer) {\n        super(name, renderer);\n        this.createMaterial(pathname).then(() => {\n\n            this.createVAO();\n        })\n    }\n    private createMaterial(pathname: string) {\n        return new Promise((resolve) => {\n\n            new TextureLoader().load(pathname, (texture) => {\n                this.size = {\n                    width: texture.getWidth(),\n                    height: texture.getHeight()\n                }\n                const defaultMaterial = new DefaultMaterial(this.getName(), ResourceManager.getShader(\"image\"), texture)\n                defaultMaterial.create();\n                this.setMaterial(defaultMaterial)\n                ResourceManager.addMaterials([defaultMaterial]);\n                resolve(null);\n            });\n        })\n    }\n    private createVAO() {\n        const vbo = [];\n        var x1 = 0;\n        var x2 = 0 + this.size.width;\n        var y1 = 0;\n        var y2 = 0 + this.size.height;\n        vbo.push(new VBO(new Float32Array([\n            x1, y1,\n            x2, y1,\n            x1, y2,\n            x1, y2,\n            x2, y1,\n            x2, y2,\n        ]), 2, true));\n        vbo.push(new VBO(new Float32Array([0.0, 0.0,\n            1.0, 0.0,\n            0.0, 1.0,\n            0.0, 1.0,\n            1.0, 0.0,\n            1.0, 1.0,]), 2, true));\n        const vao = new VAO(vbo, 2);\n        vao.create();\n        this.setVAO(vao);\n\n    }\n\n    public update(time: number, delta: number): void {\n\n    }\n}\n\nexport default ImageEntity","import { Vector2 } from \"@math.gl/core\"\nimport Hitbox from \"./HitBox\"\n\nexport class Line {\n\n  private _p: Vector2\n  private _q: Vector2\n\n  public constructor(p: Vector2, q: Vector2) {\n    this._p = p\n    this._q = q\n  }\n\n  public getP(): Vector2 { \n    return this._p\n  }\n\n  public getQ(): Vector2 { \n    return this._q\n  }\n}\n\nclass EdgeHitbox extends Hitbox {\n\n  private _lines: Line[]\n\n  public constructor(vertices: number[], indices: number[]) {\n    super()\n    this._lines = []\n\n    for(let i = 0; i < indices.length; i+=2) {\n      const ax = vertices[indices[i]*2];\n      const az = vertices[indices[i]*2+1];\n      const bx = vertices[indices[i+1]*2];\n      const bz = vertices[indices[i+1]*2+1];\n      this._lines.push(new Line(new Vector2(ax, az), new Vector2(bx, bz)))\n    }\n    \n  }\n\n  public getLines(): Line[] { \n    return this._lines\n  }\n\n}\n\nexport default EdgeHitbox","import { Vector3 } from \"@math.gl/core\";\nimport SolidEntity from \"../../core/entities/SolidEntity\";\n\nabstract class Intersection {\n\n  private _solid1: SolidEntity \n  private _solid2: SolidEntity\n\n  protected constructor(solid1: SolidEntity, solid2: SolidEntity) {\n    this._solid1 = solid1\n    this._solid2 = solid2\n  }\n\n  public getSolid1(): SolidEntity {\n    return this._solid1\n  }\n\n  public getSolid2(): SolidEntity {\n    return this._solid2\n  }\n\n  //public abstract getAccelerationOnSolid1(): Vector3;\n\n  //public abstract getAccelerationOnSolid2(): Vector3;\n\n  public abstract solve(): void;\n\n}\n\nexport default Intersection","import { Vector2, Vector3 } from \"@math.gl/core\";\nimport SolidEntity from \"../../core/entities/SolidEntity\";\nimport CircleHitbox from \"../hitboxes/CircleHitbox\";\nimport Intersection from \"./Intersection\";\n\nclass CircleCircleIntersection extends Intersection {\n\n  public static test(solid1: SolidEntity, solid2: SolidEntity): CircleCircleIntersection {\n\n    const p = new Vector2(\n      solid1.getTransform().getTranslation().x,\n      solid1.getTransform().getTranslation().z\n    )\n\n    const q = new Vector2(\n      solid2.getTransform().getTranslation().x,\n      solid2.getTransform().getTranslation().z\n    )\n\n    const totalRadius = (solid1.getHitbox() as CircleHitbox).getRadius() + \n      (solid2.getHitbox() as CircleHitbox).getRadius()\n\n    if(q.distanceTo(p) < totalRadius) {\n      return new CircleCircleIntersection(solid1, solid2)\n    }\n\n    return null;\n  }\n\n  public getAccelerationOnSolid1(): Vector3 {\n    return this._getAccelerationOnSolid(this.getSolid1(), this.getSolid2());\n  }\n\n  public getAccelerationOnSolid2(): Vector3 {\n    return this._getAccelerationOnSolid(this.getSolid2(), this.getSolid1());\n  }\n\n  private _getAccelerationOnSolid(solid1: SolidEntity, solid2: SolidEntity): Vector3 {\n    const p = new Vector2(\n      solid1.getTransform().getTranslation().x,\n      solid1.getTransform().getTranslation().z\n    )\n\n    const q = new Vector2(\n      solid2.getTransform().getTranslation().x,\n      solid2.getTransform().getTranslation().z\n    ) \n\n    const qp = new Vector2(q).subtract(p)\n    const pq = new Vector2(p).subtract(q)\n\n    const pRadius = (solid1.getHitbox() as CircleHitbox).getRadius()\n    const qRadius = (solid2.getHitbox() as CircleHitbox).getRadius()\n\n    const pk = new Vector2(p).add(qp.multiplyByScalar(pRadius).divideScalar(qp.magnitude()))\n    const qk = new Vector2(q).add(pq.multiplyByScalar(qRadius).divideScalar(pq.magnitude()))\n\n    const acceleration = qk.subtract(pk)\n\n    return new Vector3(acceleration.x, 0, acceleration.y)\n  }\n\n  public solve(): void {\n\n    const p = new Vector2(\n      this.getSolid1().getTransform().getTranslation().x,\n      this.getSolid1().getTransform().getTranslation().z\n    )\n\n    const q = new Vector2(\n      this.getSolid2().getTransform().getTranslation().x,\n      this.getSolid2().getTransform().getTranslation().z\n    ) \n\n    const qp = new Vector2(p).subtract(q)\n\n    const totalRadius = (this.getSolid1().getHitbox() as CircleHitbox).getRadius() +\n      (this.getSolid2().getHitbox() as CircleHitbox).getRadius()\n\n    qp.divideScalar(qp.magnitude())\n\n    this.getSolid1().getTransform().setX(\n      this.getSolid2().getTransform().getX() + totalRadius * qp.x\n    )\n\n    this.getSolid1().getTransform().setZ(\n      this.getSolid2().getTransform().getZ() + totalRadius * qp.y\n    )\n\n  }\n\n}\n\nexport default CircleCircleIntersection","import { Vector2, Vector3 } from \"@math.gl/core\";\nimport SolidEntity from \"../../core/entities/SolidEntity\";\nimport { \n  circunferenceEquationOf,\n  distanceBetweenPointAndLine, \n  intersectionPointsBetweenLineAndCircunference, \n  LineEquation, \n  lineEquationOf, \n  PairPoints\n} from \"../../math/math\";\nimport CircleHitbox from \"../hitboxes/CircleHitbox\";\nimport EdgeHitbox, {Line} from \"../hitboxes/EdgeHitbox\";\nimport Intersection from \"./Intersection\";\n\ninterface CircleLineIntersection {\n  p: Vector2,\n  q: Vector2,\n  distance: number,\n  intersectionPoints: PairPoints,\n  circleCenter: Vector2\n}\n\nclass CircleEdgeIntersection extends Intersection {\n\n  private _intersectedLine: CircleLineIntersection\n\n  private constructor(solid1: SolidEntity, solid2: SolidEntity, intersectedLine: CircleLineIntersection) {\n    super(solid1, solid2);\n    this._intersectedLine = intersectedLine\n  }\n\n  public static test(solid1: SolidEntity, solid2: SolidEntity): CircleEdgeIntersection {\n\n    const s1P = new Vector2(\n      solid1.getTransform().getTranslation().x,\n      solid1.getTransform().getTranslation().z\n    )\n\n    const transform = solid2.getTransform().toInversePositionMatrix()\n\n    const circleHitbox = (solid1.getHitbox() as CircleHitbox)\n    const edgeHitbox = (solid2.getHitbox() as EdgeHitbox)\n\n    const intersectedLines: CircleLineIntersection[] = []\n    \n    edgeHitbox.getLines().forEach((line) => {\n      const p: Vector3 = new Vector3(line.getP().x, 0, line.getP().y).transform(transform)\n      const q: Vector3 = new Vector3(line.getQ().x, 0, line.getQ().y).transform(transform)\n\n      const lineEquation = lineEquationOf(new Vector2(p.x, p.z), new Vector2(q.x, q.z))\n      \n      const distance = distanceBetweenPointAndLine(s1P, lineEquation)\n\n      if(distance < circleHitbox.getRadius()) {\n        \n        const intersectionPoints = intersectionPointsBetweenLineAndCircunference(\n          lineEquation,\n          circunferenceEquationOf(\n            s1P, \n            circleHitbox.getRadius()\n          )\n        )\n\n        if(intersectionPoints &&\n          CircleEdgeIntersection._isInsideLine(\n            {p1: new Vector2(p.x, p.z), p2: new Vector2(q.x, q.z)},\n            intersectionPoints\n          )\n        ) {\n\n          intersectedLines.push({\n            p: new Vector2(p.x, p.z), \n            q: new Vector2(q.x, q.z), \n            distance, \n            intersectionPoints,\n            circleCenter: s1P\n          })\n\n        }\n\n      }\n    })\n\n    if(intersectedLines.length > 0) {\n      \n      \n      intersectedLines.sort((a, b) => a.distance - b.distance)\n      \n      return new CircleEdgeIntersection(solid1, solid2, intersectedLines[0])\n    }\n\n    return null;\n  }\n\n  public solve(): void {\n\n    const closestPoint = new Vector2(this._intersectedLine.intersectionPoints.p2)\n      .subtract(this._intersectedLine.intersectionPoints.p1)\n      .divideScalar(2).add(this._intersectedLine.intersectionPoints.p1)\n\n    const reflectorCircleCenter = new Vector2(closestPoint)\n      .subtract(this._intersectedLine.circleCenter)\n      .multiplyByScalar(2)\n    \n    const qp = new Vector2(reflectorCircleCenter).negate()\n\n    reflectorCircleCenter.add(this._intersectedLine.circleCenter)\n\n    const totalRadius = (this.getSolid1().getHitbox() as CircleHitbox).getRadius() +\n      closestPoint.distanceTo(reflectorCircleCenter)\n\n    qp.divideScalar(qp.magnitude())\n\n    this.getSolid1().getTransform().setX(\n      reflectorCircleCenter.x + totalRadius * qp.x\n    )\n\n    this.getSolid1().getTransform().setZ(\n      reflectorCircleCenter.y + totalRadius * qp.y\n    )\n    \n\n  }\n\n  private static _isInsideLine(line: PairPoints, intersectionPoints: PairPoints): boolean {\n\n    let begin = 0, end = 0\n\n    if(line.p1.x !== line.p2.x) {\n      if(line.p1.x < line.p2.x) {\n        begin = line.p1.x\n        end = line.p2.x\n      }\n      else {\n        begin = line.p2.x\n        end = line.p1.x\n      }\n\n      return (intersectionPoints.p1.x > begin && intersectionPoints.p1.x < end) || (intersectionPoints.p2.x > begin && intersectionPoints.p2.x < end)\n    }\n\n    if(line.p1.y < line.p2.y) {\n      begin = line.p1.y\n      end = line.p2.y\n    }\n    else {\n      begin = line.p2.y\n      end = line.p1.y\n    }\n\n    return (intersectionPoints.p1.y > begin && intersectionPoints.p1.y < end) || (intersectionPoints.p2.y > begin && intersectionPoints.p2.y < end)\n\n/*\n    const AB = line.p1.distanceTo(line.p2)\n    const p1A = intersectionPoints.p1.distanceTo(line.p1)\n    const p1B = intersectionPoints.p1.distanceTo(line.p2)\n    const p2A = intersectionPoints.p2.distanceTo(line.p1)\n    const p2B = intersectionPoints.p2.distanceTo(line.p2)\n\n    return (p1A+p1B <= AB) || (p2A+p2B <= AB)\n*/\n\n  }\n\n}\n\nexport default CircleEdgeIntersection","import Physics from \"@razor/physics/Physics\";\nimport DynamicEntity from \"../entities/DynamicEntity\";\nimport Entity from \"../entities/Entity\";\nimport SolidEntity from \"../entities/SolidEntity\";\nimport Scene from \"./Scene\";\n\nexport interface PhysicsSceneProperties {\n  gravity: number;\n  airFrictionCoefficient: number\n  defaultFakeFloor: number;\n}\n\nclass PhysicsScene extends Scene {\n\n  private _properties: PhysicsSceneProperties\n\n  private _physics: Physics\n\n  public constructor(name: string) {\n    super(name)\n    this._physics = new Physics()\n    this._properties = {\n      gravity: 9.807,\n      airFrictionCoefficient: 5,\n      defaultFakeFloor: 0\n    }\n  }\n\n  public add(entity: Entity, visible: boolean = true): Scene {\n    super.add(entity, visible)\n    if(entity instanceof SolidEntity && visible) {\n      this._physics.add(entity)\n    }\n    return this\n  }\n\n  public remove(entity: Entity|string): Scene {\n    if(entity instanceof SolidEntity && this.hasInVisible(entity)) {\n      this._physics.remove(entity)\n    }\n    super.remove(entity)\n    return this\n  }\n\n  public setVisibility(entity: Entity|string, visible: boolean): Scene|never {\n    super.setVisibility(entity, visible)\n    if(entity instanceof SolidEntity && visible) {\n      this._physics.add(entity)\n    } else if(entity instanceof SolidEntity && !visible) {\n      this._physics.remove(entity)\n    }\n    return this\n  }\n\n  public update(time: number, delta: number) {\n    \n    this.forEachVisible((entity) => {\n      entity.update(time, delta);\n      if(entity instanceof DynamicEntity) {\n        this._physics.applyPhysics(entity, this._properties, delta)\n      }\n    })\n\n    if(this._physics.anyCollisionDetected()) {\n      this._physics.distributeForces()\n      //this._physics.reapplyPhysics(this._properties, delta)\n    }\n\n  }\n\n  public getProperties(): PhysicsSceneProperties {\n    return this._properties\n  }\n\n}\n\nexport default PhysicsScene","import { Vector3 } from '@math.gl/core'\nimport DynamicEntity from '@razor/core/entities/DynamicEntity'\nimport SolidEntity from '@razor/core/entities/SolidEntity'\nimport StaticEntity from '@razor/core/entities/StaticEntity'\nimport { PhysicsSceneProperties } from '@razor/core/scenes/PhysicsScene'\nimport CircleHitbox from './hitboxes/CircleHitbox'\nimport EdgeHitbox from './hitboxes/EdgeHitbox'\nimport CircleCircleIntersection from './intersections/CircleCircleIntersection'\nimport CircleEdgeIntersection from './intersections/CircleEdgeIntersection'\nimport Intersection from './intersections/Intersection'\n\nclass Physics {\n\n  private _solidEntities: Array<SolidEntity>\n  private _staticEntities: Array<StaticEntity>\n  private _dynamicEntities: Array<DynamicEntity>\n\n  private _intersections: Array<Intersection>\n\n  public constructor() {\n    this._solidEntities = []\n    this._staticEntities = []\n    this._dynamicEntities = []\n    this._intersections = []\n  }\n\n  public add(entity: SolidEntity) {\n    this._solidEntities.push(entity)\n    if(entity instanceof StaticEntity) {\n      this._staticEntities.push(entity)\n    }\n    else if(entity instanceof DynamicEntity) {\n      this._dynamicEntities.push(entity)\n    }\n  }\n\n  public remove(entity: SolidEntity) {\n    this._solidEntities = this._solidEntities.filter(e => e.getName() !== entity.getName())\n    if(entity instanceof StaticEntity) {\n      this._staticEntities = this._staticEntities.filter(e => e.getName() !== entity.getName())\n    }\n    else if(entity instanceof DynamicEntity) {\n      this._dynamicEntities = this._dynamicEntities.filter(e => e.getName() !== entity.getName())\n    }\n  }\n\n  public applyPhysics(entity: DynamicEntity, sceneProperties: PhysicsSceneProperties, delta: number): void {\n    \n    entity.updateSpeed(delta)\n\n    // apply gravity if suspended\n    if(entity.getTransform().getY() < sceneProperties.defaultFakeFloor) {\n      entity.getSpeed().add(new Vector3(0, sceneProperties.gravity*delta, 0))\n    }\n    // apply air resistance\n    entity.getSpeed().add(new Vector3(entity.getSpeed())\n    .multiplyByScalar(-sceneProperties.airFrictionCoefficient*delta))\n\n    entity.getTransform().setTranslation(\n      entity.getTransform().getTranslation().add(entity.getSpeed())\n    )\n\n    // fix gravity effect if surpasses ground\n    if(entity.getTransform().getY() > sceneProperties.defaultFakeFloor) {\n      entity.getSpeed().y = 0\n      entity.getTransform().setY(sceneProperties.defaultFakeFloor)\n    }\n  }\n\n  public reapplyPhysics(sceneProperties: PhysicsSceneProperties, delta: number): void {\n    this._dynamicEntities.forEach(entity => this.applyPhysics(\n      entity,\n      sceneProperties,\n      delta\n    ))\n  }\n\n  public anyCollisionDetected(): boolean {\n\n    this._intersections = []\n\n    this._dynamicEntities.forEach((dynamicEntity) => {\n\n      if(dynamicEntity.getHitbox().isCollisionDisabled()) {\n        return;\n      }\n\n      this._solidEntities\n        .filter((entity) => !entity.getHitbox().isCollisionDisabled() &&\n          dynamicEntity.getName() !== entity.getName() &&\n          dynamicEntity.getTransform().getTranslation().distanceTo(\n            entity.getTransform().getTranslation()) < (entity instanceof DynamicEntity ? 5 : 50)) \n        .forEach((entity) => {\n        \n        const intersection = this._test(dynamicEntity, entity)\n\n        if(intersection) {\n          this._intersections.push(intersection)\n        }\n\n      })\n    })\n\n    return this._intersections.length > 0\n\n  }\n\n  private _test(dynamicEntity: SolidEntity, entity: SolidEntity): Intersection {\n    if(\n      dynamicEntity.getHitbox() instanceof CircleHitbox &&\n      entity.getHitbox() instanceof CircleHitbox\n    ) {\n      return CircleCircleIntersection.test(dynamicEntity, entity)\n    }\n\n    if(\n      dynamicEntity.getHitbox() instanceof CircleHitbox &&\n      entity.getHitbox() instanceof EdgeHitbox\n    ) {\n      return CircleEdgeIntersection.test(dynamicEntity, entity)\n    }\n  }\n\n  public distributeForces(): void {\n\n    this._intersections.forEach((intersection) => {\n\n      const dynamicEntity = intersection.getSolid1() as DynamicEntity\n      //const reflectedAcceleration = intersection.getAccelerationOnSolid1()\n      intersection.solve()\n\n      //dynamicEntity.setSpeed()\n      /*\n      dynamicEntity.getTransform().setTranslation(\n        dynamicEntity.getTransform().getTranslation().subtract(reflectedAcceleration)\n      )\n      */\n      //console.log(dynamicEntity.getTransform().getTranslation().distanceTo(intersection.getSolid2().getTransform().getTranslation()));\n\n      dynamicEntity.getSpeed().x = 0;\n      dynamicEntity.getSpeed().z = 0;\n\n    })\n\n  }\n\n}\n\n\n\nexport default Physics","import { Vector2 } from \"@math.gl/core\"\n\n\nclass PathNode {\n\n  private _name: string\n\n  // distance from origin\n  private _g: number\n  // distance from destiny\n  private _h: number\n\n  private _neighbours: Map<string, PathNode>\n  private _marked: boolean\n  private _position: Vector2\n  private _path: PathNode\n\n  public constructor(name: string, position: Vector2) {\n    this._name = name\n    this._position = position\n    this._g = 0\n    this._h = 0\n    this._neighbours = new Map<string, PathNode>()\n    this._marked = false\n    this._path = null\n  }\n\n  public distanceTo(node: PathNode): number {\n    return this._position.distanceTo(node.getPosition())\n  }\n\n  public calculateG(originPosition: Vector2): void {\n    this._g = originPosition.distanceTo(this._position)\n  }\n\n  public setG(g: number): void {\n    this._g = g\n  }\n  \n  public getG(): number {\n    return this._g\n  }\n\n  public calculateH(destinyPosition: Vector2): void {\n    this._h = destinyPosition.distanceTo(this._position)\n  }\n\n  public setH(h: number): void {\n    this._h = h\n  }\n\n  public getH(): number {\n    return this._h\n  }\n\n  public getF(): number {\n    return this._g + this._h\n  }\n\n  public getNeighbours(): Map<string, PathNode> {\n    return this._neighbours\n  }\n\n  public setMarked(marked: boolean): void {\n    this._marked = marked\n  }\n\n  public isMarked(): boolean {\n    return this._marked\n  }\n\n  public setPosition(position: Vector2): void {\n    this._position = position\n  }\n\n  public getPosition(): Vector2 {\n    return this._position\n  }\n\n  public setPath(path: PathNode): void {\n    this._path = path\n  }\n\n  public getPath(): PathNode {\n    return this._path\n  }\n\n  public getName(): string {\n    return this._name\n  }\n\n}\n\nexport default PathNode","import { Vector2 } from \"@math.gl/core\"\nimport DynamicEntity from '@razor/core/entities/DynamicEntity';\nimport PathNode from './PathNode'\n\nclass EntityNode extends PathNode {\n\n  private _entity: DynamicEntity\n\n  public constructor(entity: DynamicEntity) {\n    super(\n      entity.getName(), \n      null\n    );\n    this._entity = entity  \n  }\n\n  public getEntity(): DynamicEntity {\n    return this._entity\n  }\n\n  public distanceTo(node: PathNode): number {\n    return this.getPosition().distanceTo(node.getPosition())\n  }\n\n  public getPosition(): Vector2 {\n    return new Vector2(\n      this._entity.getTransform().getTranslation().x,\n      this._entity.getTransform().getTranslation().z,\n    )\n  }\n\n\n}\n\nexport default EntityNode","import PhysicsScene from \"@razor/core/scenes/PhysicsScene\";\nimport RenderStrategy from \"@razor/renderer/RenderStrategy\";\nimport EntityFactory from \"../entities/EntityFactory\";\nimport DoorPanelEntity from \"../entities/DoorPanelEntity\";\nimport HallDoorEntity from \"../entities/HallDoorEntity\";\nimport Player from \"../entities/player/Player\";\nimport CircleHitbox from \"@razor/physics/hitboxes/CircleHitbox\";\nimport { Vector3 } from \"@math.gl/core\";\nimport Orientation from \"@razor/math/Orientation\";\nimport Camera from \"@razor/core/Camera\";\nimport Lamp from \"../entities/Lamp\";\nimport Entity from \"@razor/core/entities/Entity\";\nimport Gun from \"../entities/player/Gun\";\nimport Monster from \"../entities/monster/Monster\";\nimport MonsterRenderer from \"../renderers/MonsterRenderer\";\nimport PathFinding from \"../pathfinding/PathFinding\";\nimport FrameRenderer from \"../renderers/FrameRenderer\";\n\nclass MainScene extends PhysicsScene {\n\n  private _camera: Camera\n  private _entityFactory: EntityFactory\n  private _player: Player\n  private _gun: Gun\n  private _lamps: Lamp[]\n  private _pathFinding: PathFinding\n  private _lampSortingTimer: number\n  private _pathFindingCalculationTimer: number\n\n  private _frameBuffer: FrameRenderer[] = [];\n  public constructor(camera: Camera) {\n    super('main')\n    this._camera = camera\n    this._entityFactory = new EntityFactory(this, this.getRenderStrategy())\n    this._player = null\n    this._gun = null\n    this._lamps = []\n    this._pathFinding = null\n    this._lampSortingTimer = 3\n    this._pathFindingCalculationTimer = 5\n  }\n\n  public init() {\n\n    this._frameBuffer.push(new FrameRenderer(this._camera,'albedo'));\n    this._frameBuffer.push(new FrameRenderer(this._camera,'mascara'));\n\n    this._player = new Player(\n      'player', \n      new CircleHitbox(2), \n      this._camera,\n      this.getRenderStrategy().get('player-renderer')\n    )\n    this._gun = new Gun(this.getRenderStrategy().get('player-renderer'), this)\n\n    this._player.getTransform().setTranslation(new Vector3(51.1, 0, -88))\n    this._player.getTransform().setRotation(new Orientation(0, -32))\n    this._player.setGun(this._gun)\n\n    this._gun.getTransform().parent = this._player.getHandTransform()\n\n    this.add(this._player)\n    this.add(this._gun)\n\n    this._entityFactory.load()\n\n    const doorPanelMapping = {\n      \"door-panel_3\": \"hall-door_0\",\n      \"door-panel_4\": \"hall-door_2\",\n      \"door-panel_0\": \"hall-door_1\",\n      \"door-panel_5\": \"hall-door_4\",\n      \"door-panel_6\": \"hall-door_6\",\n      \"door-panel_1\": \"hall-door_7\",\n      \"door-panel_7\": \"hall-door_8\",\n      \"door-panel_8\": \"hall-door_10\",\n      \"door-panel_2\": \"hall-door_11\"\n    }\n\n    this.filterVisible(entity => entity instanceof HallDoorEntity)\n      .forEach(entity => (entity as HallDoorEntity).getHitbox().disableCollision(true))\n\n    this.filterVisible(entity => entity instanceof DoorPanelEntity)\n      .forEach(entity => {\n        const hallDoor = this.get(doorPanelMapping[entity.getName()]) as HallDoorEntity;\n        hallDoor.getHitbox().disableCollision(false);\n        (entity as DoorPanelEntity).setHallDoor(hallDoor);\n        (entity as DoorPanelEntity).setPlayer(this._player)\n      })\n\n    this.forEach((entity: Entity) => {\n      if(entity instanceof Lamp) {\n        this._lamps.push(entity)\n      }\n    })\n/*\n    const monsterRenderer = this.getRenderStrategy().get('monster-renderer') as MonsterRenderer;\n    monsterRenderer.setPlayer(this._player)\n\n    const monster = new Monster('m1', monsterRenderer, this._player)\n    monster.getTransform().setTranslation(new Vector3(36, 0, -65));\n    monster.getTransform().setRotation(new Orientation(0, -30, 0));\n    monster.getTransform().setScale(new Vector3(1, 2, 1));\n\n    monster.setLampList(this._entityFactory.get5ClosestLamps(monster, this._lamps))\n\n    this.add(monster)\n\n    const monster2 = new Monster('m2', monsterRenderer, this._player)\n    monster2.getTransform().setTranslation(new Vector3(-16, 0, -30));\n    monster2.getTransform().setRotation(new Orientation(0, -30, 0));\n    monster2.getTransform().setScale(new Vector3(1, 2, 1));\n\n    monster2.setLampList(this._entityFactory.get5ClosestLamps(monster2, this._lamps))\n\n    this.add(monster2)\n*/\n    this._pathFinding = new PathFinding(this, this._player)\n        \n    this._pathFinding.loadNodes()\n/*\n    setInterval(() => {\n      \n    }, 3000)\n\n    setInterval(() => {\n      \n    }, 5000)\n*/\n  }\n\n  public update(time: number, delta: number) {\n    super.update(time, delta);\n\n    if(this._lampSortingTimer > 3) {\n      this._player.setLampList(this._entityFactory.get5ClosestLamps(this._player, this._lamps))\n      this._gun.setLampList(this._entityFactory.get5ClosestLamps(this._gun, this._lamps, this._gun.getTransform().worldTranslation()))\n      this.filterVisible(entity => entity instanceof Monster && \n        (entity as Monster).isTriggered())\n      .forEach(monster => {\n        (monster as Monster)\n          .setLampList(this._entityFactory.get5ClosestLamps(monster, this._lamps))\n      })\n      this._lampSortingTimer = 0\n    }\n    this._lampSortingTimer += delta\n\n    if(this._pathFindingCalculationTimer > 5) {\n      this.filterVisible(entity => entity instanceof Monster && \n        (entity as Monster).isTriggered())\n      .forEach(monster => {\n          this._pathFinding.connectNearestNodesToPlayer()\n          const path = this._pathFinding.find(monster as Monster);\n          (monster as Monster).setPath(path)\n        })\n      this._pathFindingCalculationTimer = 0\n    }\n    this._pathFindingCalculationTimer += delta\n\n  }\n\n  public render(): void {\n    this._frameBuffer[0].bind();\n    super.render();\n    this._frameBuffer[0].unbind();\n    this._frameBuffer[0].render();\n    \n    this._frameBuffer[1].bind();\n    super.render();\n    this._frameBuffer[1].unbind();\n    this._frameBuffer[1].render();\n//    super.render()\n  }\n\n}\n\nexport default MainScene","import { Vector3 } from '@math.gl/core';\nimport Material from '@razor/appearance/material/Material';\nimport Entity from '@razor/core/entities/Entity';\nimport ResourceManager from '@razor/core/ResourceManager';\nimport Scene from '@razor/core/scenes/Scene';\nimport SceneManager from '@razor/core/scenes/SceneManager';\nimport OBJLoader, { HitboxesJSON } from '@razor/loader/OBJLoader';\nimport Orientation from '@razor/math/Orientation';\nimport EdgeHitbox from '@razor/physics/hitboxes/EdgeHitbox';\nimport Hitbox from '@razor/physics/hitboxes/HitBox';\nimport RenderStrategy from '@razor/renderer/RenderStrategy';\nimport FileUtils from '@razor/utils/FileUtils';\nimport Lamp from './Lamp';\nimport MapEntity from './MapEntity';\nimport HallDoorEntity from './HallDoorEntity';\nimport SimpleEntity from './SimpleEntity';\nimport DoorPanelEntity from './DoorPanelEntity';\nimport Transform from '@razor/math/Transform';\nimport Monster from './monster/Monster';\nimport Player from './player/Player';\nimport { IEntityWithLight } from './IEntityWithLight';\n\nclass EntityFactory {\n\n  private _scene: Scene\n  private _renderStrategy: RenderStrategy\n\n  public constructor(scene: Scene, renderStrategy: RenderStrategy) {\n    this._scene = scene;\n    this._renderStrategy = renderStrategy;\n  }\n\n  public load(): void {\n    this._loadMap()\n    this._loadMonsters()\n    this._configureEntities()\n  }\n\n  private _loadMonsters(): void {\n    interface MonsterImportJSON {\n      [name: string]: {\n        translation: {\n          x: number\n          y: number\n          z: number\n        }\n      }\n    }\n\n    FileUtils.load('/resources/monsters.json',\n      (data) => {\n\n        const entities: MonsterImportJSON = JSON.parse(data)\n\n        Object.keys(entities).forEach(key => {\n          const data = entities[key]\n\n          const entity = new Monster(\n            key, \n            this._renderStrategy.get('monster-renderer'),\n            this._scene.get('player') as Player\n          )\n\n          entity.getTransform().setTranslation(new Vector3(\n            data.translation.x,\n            data.translation.y,\n            data.translation.z,\n          ))\n          entity.getTransform().setScale(new Vector3(1, 2, 1))\n          entity.getHitbox().disableCollision(true)\n\n          this._scene.add(entity)\n\n        })\n\n\n      },\n      function onError(err) {\n        console.error('Could not import monsters from json: ', err);\n      },\n    );\n  }\n\n  private _loadMap(): void {\n    interface EntityImportJSON {\n      [name: string]: {\n        translation: {\n          x: number\n          y: number\n          z: number\n        },\n        rotation: {\n          x: number\n          y: number\n          z: number\n        },\n        scale: {\n          x: number\n          y: number\n          z: number\n        },\n        options?: {\n          [key: string] : any\n        }\n      }\n    }\n\n    const hitboxes = new OBJLoader().loadHitboxes('/resources/hitboxes.json')\n\n    FileUtils.load('/resources/entities.json',\n      (data) => {\n\n        const entities: EntityImportJSON = JSON.parse(data)\n\n        Object.keys(entities).forEach(key => {\n          const data = entities[key]\n\n          const vaoName = ((): string => {\n            for(let i = key.length-1; i >= 0; i--) {\n              if(key[i] === '_') {\n                return key.substring(0, i)\n              }\n            }\n            return '';\n          })();\n\n          const entity = this._createEntity(key, vaoName, hitboxes,data.options)\n\n          entity.getTransform().setTranslation(new Vector3(\n            data.translation.x,\n            data.translation.y,\n            data.translation.z,\n          ))\n          entity.getTransform().setRotation(new Orientation(\n            data.rotation.x,\n            data.rotation.y,\n            data.rotation.z,\n          ))\n          entity.getTransform().setScale(new Vector3(\n            data.scale.x,\n            data.scale.y,\n            data.scale.z,\n          ))\n\n          this._scene.add(entity)\n\n        })\n\n\n      },\n      function onError(err) {\n        console.error('Could not import entities from json: ', err);\n      },\n    );\n    \n  } \n\n  private _createEntity(name: string, vao: string, hitboxes: HitboxesJSON,options?: any): Entity {\n\n    switch (vao) {\n      case 'lamp':\n        return new Lamp(\n          name, \n          this._renderStrategy.get('renderer1'),\n          new Vector3(1, 0, 0)\n        )\n      case 'hall-door':\n        let transform;\n        if(options?.camera){\n          transform = new Transform(options.camera.translation,new Orientation(options.camera.rotation.x,options.camera.rotation.y,options.camera.rotation.z))\n        }\n        return new HallDoorEntity(\n          name,\n          this._getHitbox(vao, hitboxes),\n          this._renderStrategy.get('renderer1'),\n          transform\n        )\n      case 'door-panel':\n        return new DoorPanelEntity(\n          name,\n          this._getHitbox(vao, hitboxes),\n          this._renderStrategy.get('renderer1')\n        )\n      default:\n    }\n\n    return new MapEntity(\n      name,\n      this._getHitbox(vao, hitboxes),\n      1,\n      ResourceManager.getVAO(vao), \n      this._getMaterial(vao),\n      this._renderStrategy.get('renderer1')\n    )\n  }\n\n  private _getMaterial(object: string): Material {\n    switch (object) {\n      case 'hall':\n      case 'level-2':\n          return ResourceManager.getMaterial('level')\n      default:\n    }\n    return ResourceManager.getMaterial(object)\n  }\n\n\n  private _configureEntities(): void {\n\n    (this._scene.get('lamp_2') as Lamp).color = new Vector3(1, 1, 1);\n    (this._scene.get('lamp_33') as Lamp).color = new Vector3(1, 1, 1)\n\n    this._distributeClosestLampsForStaticEntities()\n\n  }\n\n  private _distributeClosestLampsForStaticEntities() {\n\n    const lamps: Lamp[] = []\n\n    this._scene.forEach((entity: Entity) => {\n      if(entity instanceof Lamp) {\n        lamps.push(entity)\n      }\n    })\n\n    this._scene.forEach((entity: Entity) => {\n      if(entity instanceof MapEntity || entity instanceof Monster) {\n        (entity as IEntityWithLight).setLampList(this.get5ClosestLamps(entity, lamps))\n      }\n    })\n\n  }\n\n  public get5ClosestLamps(\n    entity: Entity, \n    lamps: Lamp[], \n    position: Vector3 = entity.getTransform().getTranslation()\n  ): Lamp[] {\n    return Array.from(lamps).sort((a, b) => {\n      const distanceA = position.distanceTo(a.getTransform().getTranslation())\n      const distanceB = position.distanceTo(b.getTransform().getTranslation())\n      if(distanceA > distanceB) return 1;\n      if(distanceA < distanceB) return -1;\n      return 0;\n    }).slice(0, 5);\n  }\n\n  private _getHitbox(vao: string, hitboxes: HitboxesJSON): Hitbox {\n    return new EdgeHitbox(\n      hitboxes.edge[vao].vertices,\n      hitboxes.edge[vao].indices\n    )\n\n  }\n\n}\n\nexport default EntityFactory","import { Vector2 } from \"@math.gl/core\"\nimport DynamicEntity from \"@razor/core/entities/DynamicEntity\"\nimport Scene from \"@razor/core/scenes/Scene\"\nimport FileUtils from \"@razor/utils/FileUtils\"\nimport Monster from \"../entities/monster/Monster\"\nimport Player from \"../entities/player/Player\"\nimport EntityNode from \"./EntityNode\"\nimport PathNode from \"./PathNode\"\n\ninterface NearestNodes {\n  firstClosestNode: PathNode\n  //secondClosestNode: PathNode\n  //thirdClosestNode: PathNode\n\n  firstClosestNodeDistance: number\n  //secondClosestNodeDistance: number\n  //thirdClosestNodeDistance: number\n}\n\nclass PathFinding {\n\n  private _nodes: Map<string, PathNode>\n\n  private _openNodes: Map<string, PathNode>\n  private _closedNodes: Map<string, PathNode>\n\n  private _scene: Scene\n  private _player: Player\n\n  private _playerNode: EntityNode\n  private _monsterNodes: Map<string, EntityNode>\n\n  public constructor(scene: Scene, player: Player) {\n    this._nodes = new Map<string, PathNode>()\n    this._openNodes = new Map<string, PathNode>()\n    this._closedNodes = new Map<string, PathNode>()\n    this._scene = scene\n    this._player = player\n    this._playerNode = new EntityNode(player)\n\n    // for a while\n    this._nodes.set(this._playerNode.getName(), this._playerNode)\n    this._monsterNodes = new Map<string, EntityNode>()//new EntityNode(scene.get('m2') as DynamicEntity)\n    \n    scene\n      .filterVisible(entity => entity instanceof Monster)\n      .forEach(monster => {\n        const monsterNode = new EntityNode(monster as DynamicEntity)\n        this._monsterNodes.set(monster.getName(), monsterNode)\n        //this._nodes.set(monster.getName(), monsterNode)\n      })\n    \n    \n  }\n  \n\n  public find(monster: Monster): PathNode[] {\n\n    const origin = this._monsterNodes.get(monster.getName())//monster\n    const destiny = this._playerNode\n\n    this._nodes.set(origin.getName(), origin)\n\n    this._clearOldPath()\n    this._connectNearestNodesToMonster(origin)\n    this._openNodes.clear()\n    this._closedNodes.clear()\n\n    let current: PathNode\n\n    this._openNodes.set(origin.getName(), origin)\n\n    while(this._openNodes.size > 0) {\n      \n      current = this._popLowestCostNode(this._openNodes)\n      this._closedNodes.set(current.getName(), current)\n\n      if(current === destiny) break;\n\n      current.getNeighbours().forEach(neighbour => {\n        if(this._closedNodes.has(neighbour.getName())) {\n          return;\n        }\n\n        const notInOpen = !this._openNodes.has(neighbour.getName())\n\n        const costToNeighbour = current.getG() + current.distanceTo(neighbour)\n\n        if(notInOpen || costToNeighbour < neighbour.getG()) {\n          neighbour.setG(costToNeighbour)\n          neighbour.setPath(current)\n\n          if(notInOpen) {\n            neighbour.setH(neighbour.distanceTo(destiny))\n            this._openNodes.set(neighbour.getName(), neighbour)\n          }\n        }\n\n      })\n\n    }\n\n    this._nodes.delete(origin.getName())\n\n    return this._getPath()\n\n  }\n\n  private _getPath(): PathNode[] {\n    const path: PathNode[] = []\n    let current: PathNode = this._playerNode\n    do {\n      path.push(current)\n      current = current.getPath()\n    } while(current)\n    path.pop()\n    return path.reverse()\n  }\n\n  private _clearOldPath(): void {\n    this._nodes.forEach(node => {\n      node.setPath(null)\n    })\n  }\n\n  public connectNearestNodesToPlayer(): void {\n    this._clearOldNearestNodes(this._playerNode)\n    const nearest = this._findNearest(this._playerNode)\n    this._playerNode.getNeighbours().set(nearest.firstClosestNode.getName(), nearest.firstClosestNode)\n    nearest.firstClosestNode.getNeighbours().set(this._playerNode.getName(), this._playerNode)\n  }\n\n  private _connectNearestNodesToMonster(monsterNode: EntityNode): void {\n    this._clearOldNearestNodes(monsterNode)\n    const nearest = this._findNearest(monsterNode)\n    monsterNode.getNeighbours().set(nearest.firstClosestNode.getName(), nearest.firstClosestNode)\n  }\n\n  private _findNearest(entityNode: EntityNode): NearestNodes {\n\n    let firstClosestNode: PathNode\n\n    let firstClosestNodeDistance: number\n\n    const updateFirst = (node: PathNode, distance: number) => {\n      firstClosestNode = node\n      firstClosestNodeDistance = distance\n    }\n\n    this._nodes.forEach(node => {\n      if(node.getName() === entityNode.getName()) {\n        return;\n      }\n      const distance = entityNode.distanceTo(node)\n      if(!firstClosestNode || distance < firstClosestNodeDistance) {\n        updateFirst(node, distance)\n      }\n    })\n\n    return {\n      firstClosestNode,\n      firstClosestNodeDistance,\n    }\n\n  }\n\n  private _clearOldNearestNodes(entityNode: EntityNode): void {\n    entityNode.getNeighbours().forEach(neighbour => {\n      neighbour.getNeighbours().delete(entityNode.getName())\n    })\n    entityNode.getNeighbours().clear()\n  }\n\n  private _popLowestCostNode(nodeList: Map<string, PathNode>): PathNode {\n    let smaller: PathNode\n    let key: string\n    nodeList.forEach((node, index) => {\n      if(\n        !smaller || \n        smaller.getF() > node.getF() || \n        (smaller.getF() === node.getF() && smaller.getH() > node.getH())\n      ) {\n        smaller = node\n        key = index\n      }\n    })\n    nodeList.delete(key)\n    return smaller\n  }\n\n  public loadNodes(): void {\n\n    interface NodesImportJSON {\n      [name: string]: {\n        translation: {\n          x: number\n          y: number\n          z: number\n        }\n      }\n    }\n\n    FileUtils.load(\n      '/resources/nodes.json', \n      (file) => {\n        const data: NodesImportJSON = JSON.parse(file)\n\n        Object.keys(data).forEach(nodeName => {\n          \n          const position = data[nodeName].translation\n          const node = new PathNode(nodeName, new Vector2(position.x, position.z))\n          this._nodes.set(node.getName(), node)\n\n        })\n\n        this._connectNodes()\n\n      },\n      function onError(err) {\n        throw new Error(`Error trying to load nodes.\\n ${err}`);\n      },\n    )\n\n  }\n\n  private _connectNodes(): void {\n\n    const nodeMapping = {\n      0: [1],\n      1: [0, 2, 3],\n      2: [1, 9],\n      3: [1, 4],\n      4: [3, 5],\n      5: [4, 6, 17],\n      6: [5, 7],\n      7: [6, 8],\n      8: [7, 9, 10],\n      9: [2, 8],\n      10: [8, 11, 12],\n      11: [10, 14],\n      12: [10, 13],\n      13: [12, 16],\n      14: [11, 15],\n      15: [14, 16],\n      16: [15, 13],\n      17: [5, 18, 19],\n      18: [17, 25],\n      19: [17, 20],\n      20: [19, 21],\n      21: [20, 22, 33],\n      22: [21, 23],\n      23: [22, 24],\n      24: [23, 25, 26],\n      25: [18, 24],\n      26: [24, 27, 28],\n      27: [26, 32],\n      28: [26, 29],\n      29: [28, 30],\n      30: [29, 31],\n      31: [30, 32],\n      32: [31, 27],\n      33: [21, 34, 35],\n      34: [33, 40],\n      35: [33, 36],\n      36: [35, 37],\n      37: [36, 38, 49],\n      38: [37, 39],\n      39: [38, 40],\n      40: [39, 41, 42],\n      41: [34, 40],\n      42: [40, 43, 48],\n      43: [42, 44],\n      44: [43, 45],\n      45: [44, 46],\n      46: [45, 47],\n      47: [46, 48],\n      48: [47, 42],\n      49: [37]\n    }\n\n    Object.keys(nodeMapping).forEach((nodeId => {\n      const node = this._nodes.get('node_'+nodeId)\n      nodeMapping[nodeId].forEach((neighbourId: number) => {\n        const neighbourName = 'node_'+neighbourId\n        node.getNeighbours().set(neighbourName, this._nodes.get(neighbourName))\n      })\n    }))\n\n  }\n\n  public getNodes(): Map<string, PathNode> {\n    return this._nodes\n  }\n\n}\n\nexport default PathFinding","import Material from '@razor/appearance/material/Material'\nimport Shader from '@razor/appearance/Shader'\nimport Texture from '@razor/appearance/Texture'\nimport ResourceManager from '@razor/core/ResourceManager'\nimport { gl } from '@razor/gl/GLUtils'\nimport DialogEntity from '../entities/gui/DialogEntity'\nimport GameController from '../GameController'\n\nclass DoorPanelMaterial extends Material {\n\n  private _lockedTexture: Texture\n  private _unlockedTexture: Texture\n  private _displayMap: Texture\n  \n  public constructor () {\n    super('door-panel', ResourceManager.getShader('door-panel'))\n    this._lockedTexture = ResourceManager.getTexture('door-panel-locked')\n    this._unlockedTexture = ResourceManager.getTexture('door-panel-unlocked')\n    this._displayMap = ResourceManager.getTexture('door-panel-display-map')\n  }\n\n  public create(): void {\n    this.getShader().create()\n    this._lockedTexture.create()\n    this._unlockedTexture.create()\n    this._displayMap.create()\n  }\n  public bind(): void {\n    this.getShader().bind()\n    gl.activeTexture(gl.TEXTURE0);\n    this._lockedTexture.bind()\n    this.getShader().setInt('u_lockedTexture', 0)\n    gl.activeTexture(gl.TEXTURE1);\n    this._unlockedTexture.bind()\n    this.getShader().setInt('u_unlockedTexture', 1)\n    gl.activeTexture(gl.TEXTURE2);\n    this._displayMap.bind()\n    this.getShader().setInt('u_displayMap', 2)\n  }\n  public unbind(): void {\n    this._displayMap.unbind()\n    this._unlockedTexture.unbind()\n    this._lockedTexture.unbind()\n    this.getShader().unbind()\n  }\n  public destroy(): void {\n    this._displayMap.destroy()\n    this._unlockedTexture.destroy()\n    this._lockedTexture.destroy()\n    this.getShader().destroy()\n  }\n\n}\n\nexport default DoorPanelMaterial","import {Matrix4, Vector3,cos} from \"@math.gl/core\"\n\nimport Renderer from \"../../engine/renderer/Renderer\";\nimport ResourceManager from \"../../engine/core/ResourceManager\";\nimport GLUtils, { gl } from \"../../engine/gl/GLUtils\";\nimport Entity from \"../../engine/core/entities/Entity\";\nimport CanvasCamera from '../CanvasCamera'\nimport { toRadians } from \"@razor/math/math\";\nimport Lamp from \"../entities/Lamp\";\nimport SimpleEntity from \"../entities/SimpleEntity\";\nimport Player from \"../entities/player/Player\";\nimport { IEntityWithLight } from \"../entities/IEntityWithLight\";\nimport VAO from \"@razor/buffer/VAO\";\nimport Shader from \"@razor/appearance/Shader\";\nimport Gun from \"../entities/player/Gun\";\n\nclass LampConfig{\n\n    constructor(public lamp: Lamp,public distance: number){\n\n    }\n}\n\nclass PlayerRenderer extends Renderer {\n\n    private _projection: Matrix4;\n\n    private _player: Player\n    private _gun: Gun\n\n    constructor(camera: CanvasCamera) {\n        super('player-renderer', camera)\n        this._projection = new Matrix4().perspective({\n            fovy: toRadians(70), \n            aspect: window.innerWidth / window.innerHeight, \n            near: 1, \n            far: 1000\n        })\n        this._player = null\n        this._gun = null\n    }\n\n    private distanceConfig = {\n        7: [1.0,\t0.7,\t1.8],\n        13:[1.0,\t0.35,\t0.44],\n        20:[1.0,\t0.22,\t0.20],\n        32:[1.0,\t0.14,\t0.07],\n        50:[1.0,\t0.09,\t0.032],\n        65:[1.0,\t0.07,\t0.017],\n        100:[1.0,\t0.045,\t0.0075],\n        160:[1.0,\t0.027,\t0.0028],\n        200:[1.0,\t0.022,\t0.0019],\n        325:[1.0,\t0.014,\t0.0007],\n        600:[1.0,\t0.007,\t0.0002],\n        3250: [1.0,\t0.0014,\t0.000007]\n    };\n\n    public setPlayer(player: Player, gun: Gun): void {\n        this._player = player\n        this._gun = gun\n    }\n\n    public render() {\n        if(this._player.getStop()) return;\n        this._bindMaterial(this._player)\n        this._renderHand()\n        this._player.getMaterial().unbind()\n\n        this._bindMaterial(this._gun)\n        this._renderGun()\n        this._gun.getMaterial().unbind()\n\n    }\n\n    private _bindMaterial(entity: Entity): void {\n        const material = entity.getMaterial()\n        material.bind()\n        const shader = material.getShader();\n        shader.setMatrix4x4('u_projection', this._projection);\n        shader.setMatrix4x4('u_view', this.getCamera().getView());\n        const cameraPosition = this.getCamera().getTransform().getTranslation();\n        shader.setVector3('u_camera_position',cameraPosition.negate())\n        shader.setVector3('u_color',new Vector3(1,0.2,0.3));\n        shader.setVector3(\"lightCamera.color.ambient\", new Vector3(1,1,1));\n        shader.setVector3(\"lightCamera.color.diffuse\", new Vector3(0.5,0.5,0.5))\n        shader.setVector3(\"lightCamera.color.specular\",new Vector3(0.3,0.3,0.3));\n        //shader.setFloat(\"u_light.cutOff\",cos(toRadians(0))); AINDA NÃO SEI O QUE FAZER AQUI\n\n        shader.setVector3(\"lightCamera.position\",cameraPosition.negate())\n        const distance = this.distanceConfig[100];\n        shader.setFloat(\"lightCamera.distance.constant\", distance[0]);\n        shader.setFloat(\"lightCamera.distance.linear\", distance[1])\n        shader.setFloat(\"lightCamera.distance.quadratic\",distance[2]);\n        shader.setFloat(\"lightCamera.shininess\",32);\n\n        ((entity as unknown) as IEntityWithLight).getLampList().forEach((lamp, i) => {\n            \n            const path = `pointLights[${i}]`;\n            \n            shader.setVector3(path+\".color.ambient\", lamp.color);\n            shader.setVector3(path+\".color.diffuse\", lamp.color)\n            shader.setVector3(path+\".color.specular\",lamp.color);\n            const distance = this.distanceConfig[lamp.distance];\n            shader.setFloat(path+\".distance.constant\", distance[0]);\n            shader.setFloat(path+\".distance.linear\", distance[1])\n            shader.setFloat(path+\".distance.quadratic\",distance[2]);\n            shader.setFloat(path+\".shininess\",lamp.shininess);\n            shader.setVector3(path+\".position\",lamp.getTransform().getTranslation().negate());\n            \n        })\n\n        shader.setInt(\"applyLight\", 1);\n    }\n\n    private _renderHand(): void {\n\n        const u_transform = this._player.getHandTransformMatrix()\n\n        this._renderObject(\n            this._player.getVAO(),\n            this._player.getMaterial().getShader(),\n            u_transform,\n            new Matrix4(u_transform).invert().transpose()\n        )\n\n    }\n\n    private _renderGun(): void {\n\n        const receiverTransform = this._gun.getTransform().worldMatrix()\n        \n        this._renderObject(\n            this._gun.getVAO(),\n            this._gun.getMaterial().getShader(),\n            receiverTransform,\n            new Matrix4(receiverTransform).invert().transpose()\n        )\n\n        const sliderTransform = this._gun.getSliderTransform().worldMatrix()\n\n        this._renderObject(\n            this._gun.getSliderVAO(),\n            this._gun.getMaterial().getShader(),\n            sliderTransform,\n            new Matrix4(sliderTransform).invert().transpose()\n        )\n\n    }\n\n    private _renderObject(vao: VAO, shader: Shader, u_transform: Matrix4, u_worldInverseTranspose: Matrix4) {\n        shader.setMatrix4x4('u_transform', u_transform);\n        shader.setMatrix4x4('u_worldInverseTranspose', u_worldInverseTranspose);\n        vao.bind()\n        GLUtils.draw(vao.getLength())\n        vao.unbind();\n    }\n}\n\nexport default PlayerRenderer","import { Matrix4, Vector3 } from \"@math.gl/core\";\nimport VBO from \"@razor/buffer/VBO\";\nimport Entity from \"@razor/core/entities/Entity\";\nimport ResourceManager from \"@razor/core/ResourceManager\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Renderer from \"@razor/renderer/Renderer\";\nimport GameTest from \"src/game/GameTest\";\nimport Texture from '@razor/appearance/Texture';\nimport DefaultMaterial from \"@razor/appearance/material/DefaultMaterial\";\nimport Razor from \"@razor/core/Razor\";\n\nclass CreditsEntity extends Entity {\n\n    private _texture : Texture\n    private color : Vector3 = new Vector3(0,0,0);\n    public alpha : number = 1;\n\n\n    public constructor(name: string, text: string,renderer: Renderer) {\n        super(name, null,null, renderer);\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = Razor.CANVAS.width;//Razor.CANVAS.width;\n        canvas.height = Razor.CANVAS.height;//Razor.CANVAS.height;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n        ctx.font = '20px serif';\n        ctx.fillStyle = \"white\";\n        const splitText = text.split(\"\\n\");\n        for(let i=0;i<splitText.length;i++){\n            ctx.fillText(splitText[i], 0,50 + 20 * i);\n        }\n        //document.body.append(canvas);\n        const data = new Uint8Array(ctx.getImageData(0, 0, ctx.canvas.width, ctx.canvas.height).data)\n        this._texture = new Texture(ctx.canvas.width,ctx.canvas.height)\n        this._texture.create();\n        this._texture.setData(data);\n        this.setVAO(ResourceManager.getVAO(\"effect\"));\n        this.setMaterial(new DefaultMaterial(name,ResourceManager.getShader('text'),this._texture))\n        ResourceManager.addMaterials([this.getMaterial()]);\n        this.getMaterial().create();\n        const aspect = Razor.CANVAS.height/Razor.CANVAS.width;\n        this.getTransform().setTranslation(new Vector3(800,400,1).negate())\n        this.getTransform().setScale(new Vector3(800,800 * aspect,1));\n        \n    }\n\n    public update(time: number, delta: number): void {\n    }\n}\n\nexport default CreditsEntity","import { Vector3, Quaternion, Matrix4, Vector2 } from \"@math.gl/core\"\nimport GameCore from '@razor/core/GameCore'\nimport ResourceManager from '@razor/core/ResourceManager'\nimport Scene from '@razor/core/scenes/Scene';\nimport MapRenderer from './renderers/MapRenderer'\nimport SimpleEntity from './entities/SimpleEntity'\nimport CanvasCamera from './CanvasCamera'\nimport DefaultMaterial from '../engine/appearance/material/DefaultMaterial';\nimport Orientation from \"@razor/math/Orientation\";\nimport Lamp from \"./entities/Lamp\";\nimport GuiRenderer from \"./renderers/GuiRenderer\";\n\nimport Event from \"src/event\"; // @temp\nimport FileUtils from \"@razor/utils/FileUtils\";\nimport Text from \"./utils/Text\";\nimport VAO from \"@razor/buffer/VAO\";\nimport VBO from \"@razor/buffer/VBO\";\nimport GLUtils, { gl } from \"@razor/gl/GLUtils\";\nimport Razor from \"@razor/core/Razor\";\nimport EntityFactory from \"./entities/EntityFactory\";\nimport TextEntity from \"./entities/gui/TextEntity\";\nimport GuiEntity from \"./entities/gui/GuiEntity\";\nimport OBJLoader from \"@razor/loader/OBJLoader\";\nimport SelectEntity from \"./entities/gui/SelectEntity\";\nimport EmptyMaterial from \"@razor/appearance/material/EmptyMaterial\";\nimport DoorPanelEntity from \"./entities/DoorPanelEntity\";\nimport CircleHitbox from \"@razor/physics/hitboxes/CircleHitbox\";\nimport PhysicsScene from \"@razor/core/scenes/PhysicsScene\";\nimport MonsterRenderer from \"./renderers/MonsterRenderer\";\nimport Player from \"./entities/player/Player\";\nimport Texture from \"@razor/appearance/Texture\";\nimport TextureLoader from \"@razor/loader/TextureLoader\";\nimport DisplayEntity from \"./entities/DisplayEntity\";\nimport ImageEntity from \"./entities/gui/ImageEntity\";\nimport DialogEntity from \"./entities/gui/DialogEntity\";\n\nimport MainScene from \"./scenes/MainScene\";\nimport DoorPanelMaterial from \"./materials/DoorPanelMaterial\";\nimport PlayerRenderer from \"./renderers/PlayerRenderer\";\nimport Gun from \"./entities/player/Gun\";\nimport GameController from \"./GameController\";\nimport Framebuffer from \"@razor/buffer/FrameBuffer\";\nimport PathFinding from \"./pathfinding/PathFinding\";\nimport Sound from './Sound';\nimport RectangleEntity from \"./entities/gui/RectangleEntity\";\nimport Camera from \"@razor/core/Camera\";\nimport Entity from \"@razor/core/entities/Entity\";\nimport CreditsEntity from \"./entities/CreditsEntity\";\nimport InputManager, { Keys } from \"@razor/core/InputManager\";\n\nclass GameTest extends GameCore {\n\n    private _camera: CanvasCamera\n    private _gameController: GameController;\n    private static instance: GameTest;\n    private _guiRenderer: GuiRenderer;\n    public constructor() {\n        super()\n        GameTest.instance = this;\n    }\n\n    public static getInstance(): GameTest {\n        return GameTest.instance;\n    }\n\n    public start() {\n        //https://freesound.org/people/michorvath/sounds/427598/\n        new Sound(\"gun\", \"/resources/sound/gun.wav\");\n        //https://freesound.org/people/KlawyKogut/sounds/154934/#\n        new Sound(\"empty_gun\", \"/resources/sound/empty_gun.wav\")\n        //https://freesound.org/people/thencamenow/sounds/31236/\n        new Sound(\"door\", \"/resources/sound/door.mp3\")\n        //https://freesound.org/people/julius_galla/sounds/193692/\n        new Sound(\"music\", \"/resources/sound/music.wav\", { volume: 50 });\n        //https://freesound.org/people/dkiller2204/sounds/366111/\n        new Sound(\"step\", \"/resources/sound/footstep.wav\");\n        //https://freesound.org/people/victorium183/sounds/476816/\n        new Sound(\"menu\", \"/resources/sound/menu.wav\", { volume: 20 });\n        //https://freesound.org/people/joedeshon/sounds/368738/\n        new Sound(\"elevator\", \"/resources/sound/elevator.wav\")\n        //https://freesound.org/people/Deathscyp/sounds/404109/\n        new Sound(\"damage\", \"/resources/sound/damage.wav\")\n        this._camera = new CanvasCamera('main', new Vector3(51.1, 0, -88), new Orientation(0, -32));\n        CanvasCamera.setMainCamera(this._camera);\n        // ========= SHADER ==========\n\n        /* Shader com Iluminação */\n        ResourceManager.loadShader([{\n            name: 'map',\n            vertexShaderPathname: '/resources/shader/map/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/map/frag.glsl'\n        }])\n\n        /* Shader do monstro */\n        ResourceManager.loadShader([{\n            name: 'monster',\n            vertexShaderPathname: '/resources/shader/monster/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/monster/frag.glsl'\n        }])\n\n        /* Shader com Iluminação para o DoorPanelEntity */\n        ResourceManager.loadShader([{\n            name: 'door-panel',\n            vertexShaderPathname: '/resources/shader/door-panel/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/door-panel/frag.glsl'\n        }])\n\n        /* Shader sem Iluminação */\n        ResourceManager.loadShader([{\n            name: 'gui',\n            vertexShaderPathname: '/resources/shader/gui/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/gui/frag.glsl'\n        }])\n\n        /* Shader de Texto */\n        ResourceManager.loadShader([{\n            name: 'text',\n            vertexShaderPathname: '/resources/shader/text/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/text/frag.glsl'\n        }])\n\n        /* Shader da Imagem */\n        ResourceManager.loadShader([{\n            name: 'image',\n            vertexShaderPathname: '/resources/shader/image/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/image/frag.glsl'\n        }])\n\n        /* Shader do Effect */\n        ResourceManager.loadShader([{\n            name: 'effect',\n            vertexShaderPathname: '/resources/shader/effect/vert.glsl',\n            fragmentShaderPathname: '/resources/shader/effect/frag.glsl'\n        }])\n\n        ResourceManager.loadTextures([\n            {\n                name: 'level',\n                pathname: '/resources/objects/level/level-texture.png'\n            },\n            {\n                name: 'elevator',\n                pathname: '/resources/objects/level/elevator-texture.png'\n            },\n            {\n                name: 'elevator-door',\n                pathname: '/resources/objects/doors/elevator-door-texture.png'\n            },\n            {\n                name: 'hall-door',\n                pathname: '/resources/objects/doors/hall-door-texture.png'\n            },\n            {\n                name: 'door-panel-locked',\n                pathname: '/resources/objects/panels/door-panel-locked.png'\n            },\n            {\n                name: 'door-panel-unlocked',\n                pathname: '/resources/objects/panels/door-panel-unlocked.png'\n            },\n            {\n                name: 'door-panel-display-map',\n                pathname: '/resources/objects/panels/display-map.png'\n            },\n            {\n                name: 'lamp',\n                pathname: '/resources/objects/lamp/lamp-texture.png'\n            },////\n            {\n                name: 'hand',\n                pathname: '/resources/objects/gun/hand-texture.png'\n            },\n            {\n                name: 'gun',\n                pathname: '/resources/objects/gun/gun-texture.png'\n            },\n            {\n                name: 'monster',\n                pathname: '/resources/objects/monster/monster-texture.png'\n            },\n            {\n                name: 'text',\n                pathname: '/resources/objects/8x8-font.png'\n            }\n        ])\n        //const textTexture = ResourceManager.getTexture(\"text\");\n\n        ResourceManager.addMaterials([\n            new DefaultMaterial(\n                'empty',\n                ResourceManager.getShader('gui')\n            ),\n            new DefaultMaterial(\n                'level',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('level'),\n            ),\n            new DefaultMaterial(\n                'elevator',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('elevator'),\n            ),\n            new DefaultMaterial(\n                'elevator-door',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('elevator-door'),\n            ),\n            new DefaultMaterial(\n                'hall-door',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('hall-door'),\n            ),\n            new DoorPanelMaterial(),\n            new DefaultMaterial(\n                'lamp',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('lamp'),\n            ),\n            new DefaultMaterial(\n                'hand',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('hand'),\n            ),\n            new DefaultMaterial(\n                'gun',\n                ResourceManager.getShader('map'),\n                ResourceManager.getTexture('gun'),\n            ),\n            new DefaultMaterial(\n                'monster',\n                ResourceManager.getShader('monster'),\n                ResourceManager.getTexture('monster'),\n            ),\n            new DefaultMaterial(\n                'rectangle',\n                ResourceManager.getShader('gui')\n            ),\n            new DefaultMaterial(\n                'text',\n                ResourceManager.getShader('text'),\n                ResourceManager.getTexture('text'),\n            )\n\n        ])\n            .forEachMaterial((material) => {\n                material.create()\n            })\n\n        ResourceManager.loadVAO([\n            {\n                name: 'level',\n                objectData: '/resources/objects/level/level.obj'\n            },\n            {\n                name: 'level-2',\n                objectData: '/resources/objects/level/level-2.obj'\n            },\n            {\n                name: 'hall',\n                objectData: '/resources/objects/level/hall.obj'\n            },\n            {\n                name: 'elevator',\n                objectData: '/resources/objects/level/elevator.obj'\n            },\n            {\n                name: 'elevator-door',\n                objectData: '/resources/objects/doors/elevator-door.obj'\n            },\n            {\n                name: 'hall-door',\n                objectData: '/resources/objects/doors/hall-door.obj'\n            },\n            {\n                name: 'door-panel',\n                objectData: '/resources/objects/panels/door-panel.obj'\n            },\n            {\n                name: 'lamp',\n                objectData: '/resources/objects/lamp/lamp.obj'\n            },\n            {\n                name: 'hand',\n                objectData: '/resources/objects/gun/hand.obj'\n            },\n            {\n                name: 'gun-receiver',\n                objectData: '/resources/objects/gun/receiver.obj'\n            },\n            {\n                name: 'gun-slider',\n                objectData: '/resources/objects/gun/slider.obj'\n            },\n            {\n                name: 'monster',\n                objectData: '/resources/objects/monster/monster.obj'\n            },\n            {\n                name: 'rectangle',\n                objectData: () => {\n                    const positions = [\n                        0, 0,\n                        1, 0,\n                        0, 1,\n                        0, 1,\n                        1, 0,\n                        1, 1,\n                    ];\n                    const vao = new VAO([new VBO(new Float32Array(positions), 2, true)], 2);\n                    //   vao.addEmpty(1);\n                    return vao;\n                }\n            },\n            {\n                name: 'effect',\n                objectData: () => {\n                    const positions = [\n                        -1, -1,\n                        1, -1,\n                        -1, 1,\n                        -1, 1,\n                        1, -1,\n                        1, 1,\n                    ];\n                    const vp = [\n                        0, 0,\n                        1, 0,\n                        0, 1,\n                        0, 1,\n                        1, 0,\n                        1, 1,\n                    ];\n                    const vbo = [] as VBO[];\n                    vbo.push(new VBO(new Float32Array(positions), 2, true));\n                    vbo.push(new VBO(new Float32Array(vp), 2, true));\n                    const vao = new VAO(vbo, 2);\n                    //   vao.addEmpty(1);\n                    return vao;\n                }\n            }\n        ])\n            .forEachVAO((vao) => {\n                vao.create();\n            })\n\n        const scene1 = new MainScene(this._camera)\n\n        const mapRenderer = new MapRenderer(this._camera);\n        scene1.getRenderStrategy().add(mapRenderer)\n        const monsterRenderer = new MonsterRenderer(this._camera);\n        scene1.getRenderStrategy().add(monsterRenderer)\n        const playerRenderer = new PlayerRenderer(this._camera);\n        scene1.getRenderStrategy().add(playerRenderer)\n        const guiRenderer = this._guiRenderer = new GuiRenderer(this._camera);\n        scene1.getRenderStrategy().add(guiRenderer)\n\n        scene1.init()\n\n        //scene1.getProperties().gravity = 0\n\n        this.getSceneManager().add(scene1, true)\n\n        playerRenderer.setPlayer(\n            scene1.get('player') as Player,\n            scene1.get('gun') as Gun\n        )\n        monsterRenderer.setPlayer(scene1.get('player') as Player)\n\n        const guiAmmunition = new DisplayEntity('guiAmmunition', guiRenderer);\n        const bottom = -Razor.CANVAS.height + 100;\n        this.getSceneManager().getActive().add(guiAmmunition);\n        guiAmmunition.getTransform().setTranslation(new Vector3(0, bottom, 0));\n        GameController.setDisplay(\"ammunition\", guiAmmunition, new Vector3(0.2, 0.9, 0.9));\n        //guiAmmunition.setText(\"123\", new Vector3(0.2, 0.9, 0.9));\n        //// https://www.pngwing.com/pt/free-png-stupy/download\n        guiAmmunition.setImage(new ImageEntity(\"ammunition\", \"/resources/images/ammunition.png\", guiRenderer));\n\n        const guiLife = new DisplayEntity('guiLife', guiRenderer);\n        this.getSceneManager().getActive().add(guiLife);\n        guiLife.getTransform().setTranslation(new Vector3(0, bottom - 50, 0));\n        GameController.setDisplay(\"life\", guiLife, new Vector3(1, 0.2, 0.2));\n        //guiLife.setText(\"123\", new Vector3(1, 0.2, 0.2));\n        //https://www.onlinewebfonts.com/icon/146242\n        guiLife.setImage(new ImageEntity(\"life\", \"/resources/images/life.png\", guiRenderer));\n\n        const dialog = new DialogEntity(\"display\", guiRenderer);\n        this.getSceneManager().getActive().add(dialog);\n        dialog.getTransform().setTranslation(new Vector3(100, 100, -1).negate())\n        dialog.init();\n        /*\n        dialog.animateText(\"bem vindo ao inferno\", 50, { vertical: '10%', horizontal: 'center' }, function () {\n            setTimeout(() => this.remove(), 5000);\n        });*/\n        //elevator\n        /*\n                        const pauseContainer = new GuiEntity(\"pause_container\",guiRenderer);\n                        pauseContainer.getTransform().setTranslation(new Vector3(0,0,-1));\n                        this.getSceneManager().getActive().add(pauseContainer);\n                        const rectanglePause = pauseContainer.addRectangle(\"pause_rectangle\");\n                        rectanglePause.setAlpha(1);\n                        rectanglePause.getTransform().setScale(new Vector3(Razor.CANVAS.width,Razor.CANVAS.height,1));\n                        rectanglePause.color = new Vector3(0.1,0.1,0.1);\n                        const textPause = pauseContainer.addText(\"pause_text\");\n                        textPause.setText(\"Pause\");\n                        textPause.updatePosition({horizontal:\"left\",vertical:\"top\"})\n                        textPause.getTransform().setTranslation(new Vector3(0,0,-1));\n                */\n\n        /* Credits Scene */\n        const sceneScredits = new Scene('credits');\n        sceneScredits.getRenderStrategy().add(guiRenderer)\n        this.getSceneManager().add(sceneScredits, true)\n\n        const text = `\n        \"Hand (low poly)\" (https://skfb.ly/Dr9p) by scribbletoad is licensed under Creative Commons Attribution (http://creativecommons.org/licenses/by/4.0/).\n        Life Icon (https://www.onlinewebfonts.com/icon/146242) Uso não-comercial, DMCA\n        AmmunitionIcon (https://www.pngwing.com/pt/free-png-stupy/download) Uso não-comercial, DMCA\n        AR15 pistol shot (https://freesound.org/people/michorvath/sounds/427598/) CC 1.0\n        metal gate 07.aif (https://freesound.org/people/thencamenow/sounds/31236/) CC 4.0\n        Atmosphere - Horror 1 (Loop) (https://freesound.org/people/julius_galla/sounds/193692/) CC 3.0\n        Indoor Footsteps.wav (https://freesound.org/people/dkiller2204/sounds/366111/) CC 1.0\n        menuChange.wav (https://freesound.org/people/victorium183/sounds/476816/) CC 1.0\n        indsustrial_elevator_door_close.wav (https://freesound.org/people/joedeshon/sounds/368738/) CC 4.0\n        Map textures by Georges \"TRaK\" Grondin CC BY-SA 3.0\n        PS1-style Makarov Pistol by awhiskin (https://awhiskin.itch.io/ps1-style-makarov-pistol)\n        Empty Gun Shot (https://freesound.org/people/KlawyKogut/sounds/154934/#) CC 1.0\n        Damage-1.wav (https://freesound.org/people/Deathscyp/sounds/404109/) CC 1.0\n                `;\n        this.getSceneManager().getActive().add(new CreditsEntity(\"creditsEntity\", text, guiRenderer))\n        const select2 = new SelectEntity(\"select2\", guiRenderer, this.getSceneManager().getActive());\n        this.getSceneManager().getActive().add(select2)\n        select2.addOption(\"voltar\").setExecute(() => {\n            this.setScene(\"menu\")\n        })\n        select2.updateTranslation(Razor.CANVAS.width,Razor.CANVAS.height * 2 - 50);\n        /* Loading Scene */\n        const gameover = new Scene('gameover');\n        gameover.getRenderStrategy().add(guiRenderer)\n        this.getSceneManager().add(gameover, true);\n        const gameoverDisplay = new DialogEntity(\"gameoverDisplay\", guiRenderer);\n        this.getSceneManager().getActive().add(gameoverDisplay);\n        gameoverDisplay.getTransform().setTranslation(new Vector3(100, 100, -1).negate())\n       \n\n        /* Loading Scene */\n        const sceneLoading = new Scene('loading');\n        sceneLoading.getRenderStrategy().add(guiRenderer)\n        this.getSceneManager().add(sceneLoading, true);\n        const loadingDisplay = new DialogEntity(\"loadingDisplay\", guiRenderer);\n        this.getSceneManager().getActive().add(loadingDisplay);\n        loadingDisplay.getTransform().setTranslation(new Vector3(100, 100, -1).negate())\n        loadingDisplay.init();\n\n        /* End Scene */\n        const sceneEnd = new Scene('end');\n        sceneEnd.getRenderStrategy().add(guiRenderer)\n        this.getSceneManager().add(sceneEnd, true);\n        const endDisplay = new DialogEntity(\"endDisplay\", guiRenderer);\n        this.getSceneManager().getActive().add(endDisplay);\n        endDisplay.getTransform().setTranslation(new Vector3(100, 100, -1).negate())\n        //endDisplay.init();\n\n        /* Menu Scene */\n        const sceneMenu = new Scene('menu');\n        this.getSceneManager().add(sceneMenu, true)\n\n        sceneMenu.getRenderStrategy().add(guiRenderer)\n\n        const select1 = new SelectEntity(\"select1\", guiRenderer, this.getSceneManager().getActive());\n        this.getSceneManager().getActive().add(select1)\n        select1.addOption(\"comecar\").setExecute(() => {\n            //Player.Find(\"player\").getTransform().setTranslation(new Vector3(-173.12, 0, 164));\n            this.setScene(\"loading\")\n            Sound.Find(\"music\").play(true);\n        })\n        select1.addOption(\"opcao 2\")\n        select1.addOption(\"creditos\").setExecute(() => {\n            this.setScene(\"credits\");\n        })\n        /*\n        const credits =     new RectangleEntity(\"credits_rect\", ResourceManager.getVAO(\"rectangle\"), ResourceManager.getMaterial(\"rectangle\"), guiRenderer)\n        credits.updatePosition({horizontal:\"center\",vertical:\"center\"});\n        */\n\n\n        this.setScene(\"menu\");\n        /*\n        const attachemnts = this._frameBuffer.map((item) => item.attachemnt)\n        GLUtils.drawBuffer(attachemnts);\n        const pathFinding = new PathFinding()\n        \n        pathFinding.loadNodes()\n        const destiny = pathFinding.getNodes().get('node_21')\n        pathFinding.find(pathFinding.getNodes().get('node_0'), destiny)\n\n        let current = destiny\n        do {\n            console.log('n: ', current.getName());\n            current = current.getPath()\n        } while(current)\n        \n*/\n        const playerEntity = Player.Find(\"player\");\n        playerEntity.setEndPoint(DoorPanelEntity.Find(\"elevator_1\").getTransform())\n    }\n\n    public changeScene(scene: Scene): void {\n        const gameTest = this;\n        switch (scene.getName()) {\n            case \"main\":\n                DialogEntity.Find(\"display\").animateText(\"chegue ate o elevador\", 50, { vertical: '10%', horizontal: 'center' }, function () {\n                    setTimeout(() => this.remove(), 5000);\n                });\n                break;\n            case \"loading\":\n                Sound.Find(\"elevator\").play(false);\n                DialogEntity.Find(\"loadingDisplay\").animateText(\"bem vindo ao inferno\", 50, { vertical: '10%', horizontal: 'center' }, function () {\n                    setTimeout(() => {\n                        this.remove()\n                        gameTest.setScene(\"main\");\n                    }, 5000);\n                });\n                break;\n            case \"end\":\n                this._camera.getTransform().setTranslation(new Vector3(51.1, 0, -88))\n                this._camera.getTransform().setRotation( new Orientation(0, -32));\n                Sound.pauseAll();\n\n                Sound.Find(\"elevator\").play(false);\n                const endDisplay = DialogEntity.Find(\"endDisplay\");\n                endDisplay.init();\n                endDisplay.animateText(\"voce chegou no fim\", 50, { vertical: '10%', horizontal: 'center' }, function () {\n                    setTimeout(() => {\n                        this.remove()\n                        window.location.reload()\n                    }, 5000);\n                });\n                break;\n            case \"gameover\":\n                Sound.pauseAll();\n\n                const gameoverDisplay = DialogEntity.Find(\"gameoverDisplay\");\n                gameoverDisplay.init();\n                gameoverDisplay.animateText(\"game over\", 50, { vertical: '10%', horizontal: 'center' }, function () {\n                    setTimeout(() => {\n                        this.remove()\n                        window.location.reload()\n                    }, 5000);\n                });\n                break;\n        }\n    }\n\n    public update(time: number, delta: number) {\n        super.update(time, delta);\n        this._camera.update(delta)\n        /*\n        const translation = this._camera.getTransform().getTranslation();\n        const rotation = this._camera.getTransform().getRotation();\n        document.querySelector(\"#log\").innerHTML = `\n            <p><b>Translation</b></p>\n            <p><b>x</b> ${translation.x}</p>\n            <p><b>y</b> ${translation.y}</p>\n            <p><b>z</b> ${translation.z}</p>\n            <hr>\n            <p><b>Rotation</b></p>\n            <p><b>x</b> ${rotation.x}</p>\n            <p><b>y</b> ${rotation.y}</p>\n            <p><b>z</b> ${rotation.z}</p>\n        `;*/\n    }\n\n    public render() {\n        super.render();\n    }\n\n}\nexport default GameTest","import SceneManager from './scenes/SceneManager'\nimport RenderStrategy from '../renderer/RenderStrategy'\nimport Scene from './scenes/Scene';\n\nabstract class GameCore {\n\n    private _sceneManager: SceneManager;\n    \n    protected constructor() {\n        this._sceneManager = new SceneManager();\n    }\n\n    public abstract start(): void;\n\n    public changeScene(scene : Scene) : void{\n\n    }\n\n    public update(time: number, delta: number): void {\n        this._sceneManager.update(time, delta);\n    }\n\n    public render(): void {\n        this._sceneManager.render();\n    }\n\n    public setScene(scene : string | Scene) : SceneManager{\n        const sceneManager = this._sceneManager.setActive(scene);\n        this.changeScene(sceneManager.getActive());\n        return sceneManager;\n    }\n\n    public getSceneManager(): SceneManager {\n        return this._sceneManager;\n    }\n\n}\n\nexport default GameCore;","import Razor from \"./engine/core/Razor\";\nimport GameTest from './game/GameTest'\n\n\n(() => {\n\n    let engine = new Razor(new GameTest());\n\n    window.onload = () => {\n      engine.start();\n    };\n    \n    window.onresize = () => {\n      engine.resize();\n    }\n\n})();\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar OBJFile = function () {\n  function OBJFile(fileContents, defaultModelName) {\n    _classCallCheck(this, OBJFile);\n\n    this._reset();\n    this.fileContents = fileContents;\n    this.defaultModelName = defaultModelName || 'untitled';\n  }\n\n  _createClass(OBJFile, [{\n    key: '_reset',\n    value: function _reset() {\n      this.result = {\n        models: [],\n        materialLibraries: []\n      };\n      this.currentMaterial = '';\n      this.currentGroup = '';\n      this.smoothingGroup = 0;\n    }\n  }, {\n    key: 'parse',\n    value: function parse() {\n      this._reset();\n\n      var _stripComments = function _stripComments(lineString) {\n        var commentIndex = lineString.indexOf('#');\n        if (commentIndex > -1) {\n          return lineString.substring(0, commentIndex);\n        }\n        return lineString;\n      };\n\n      var lines = this.fileContents.split('\\n');\n      for (var i = 0; i < lines.length; i += 1) {\n        var line = _stripComments(lines[i]);\n\n        var lineItems = line.replace(/\\s\\s+/g, ' ').trim().split(' ');\n\n        switch (lineItems[0].toLowerCase()) {\n          case 'o':\n            // Start A New Model\n            this._parseObject(lineItems);\n            break;\n          case 'g':\n            // Start a new polygon group\n            this._parseGroup(lineItems);\n            break;\n          case 'v':\n            // Define a vertex for the current model\n            this._parseVertexCoords(lineItems);\n            break;\n          case 'vt':\n            // Texture Coords\n            this._parseTextureCoords(lineItems);\n            break;\n          case 'vn':\n            // Define a vertex normal for the current model\n            this._parseVertexNormal(lineItems);\n            break;\n          case 's':\n            // Smooth shading statement\n            this._parseSmoothShadingStatement(lineItems);\n            break;\n          case 'f':\n            // Define a Face/Polygon\n            this._parsePolygon(lineItems);\n            break;\n          case 'mtllib':\n            // Reference to a material library file (.mtl)\n            this._parseMtlLib(lineItems);\n            break;\n          case 'usemtl':\n            // Sets the current material to be applied to polygons defined from this point forward\n            this._parseUseMtl(lineItems);\n            break;\n        }\n      }\n\n      return this.result;\n    }\n  }, {\n    key: '_currentModel',\n    value: function _currentModel() {\n      if (this.result.models.length == 0) {\n        this.result.models.push({\n          name: this.defaultModelName,\n          vertices: [],\n          textureCoords: [],\n          vertexNormals: [],\n          faces: []\n        });\n        this.currentGroup = '';\n        this.smoothingGroup = 0;\n      }\n\n      return this.result.models[this.result.models.length - 1];\n    }\n  }, {\n    key: '_parseObject',\n    value: function _parseObject(lineItems) {\n      var modelName = lineItems.length >= 2 ? lineItems[1] : this.defaultModelName;\n      this.result.models.push({\n        name: modelName,\n        vertices: [],\n        textureCoords: [],\n        vertexNormals: [],\n        faces: []\n      });\n      this.currentGroup = '';\n      this.smoothingGroup = 0;\n    }\n  }, {\n    key: '_parseGroup',\n    value: function _parseGroup(lineItems) {\n      if (lineItems.length != 2) {\n        throw 'Group statements must have exactly 1 argument (eg. g group_1)';\n      }\n\n      this.currentGroup = lineItems[1];\n    }\n  }, {\n    key: '_parseVertexCoords',\n    value: function _parseVertexCoords(lineItems) {\n      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;\n      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;\n      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;\n\n      this._currentModel().vertices.push({ x: x, y: y, z: z });\n    }\n  }, {\n    key: '_parseTextureCoords',\n    value: function _parseTextureCoords(lineItems) {\n      var u = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;\n      var v = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;\n      var w = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;\n\n      this._currentModel().textureCoords.push({ u: u, v: v, w: w });\n    }\n  }, {\n    key: '_parseVertexNormal',\n    value: function _parseVertexNormal(lineItems) {\n      var x = lineItems.length >= 2 ? parseFloat(lineItems[1]) : 0.0;\n      var y = lineItems.length >= 3 ? parseFloat(lineItems[2]) : 0.0;\n      var z = lineItems.length >= 4 ? parseFloat(lineItems[3]) : 0.0;\n\n      this._currentModel().vertexNormals.push({ x: x, y: y, z: z });\n    }\n  }, {\n    key: '_parsePolygon',\n    value: function _parsePolygon(lineItems) {\n      var totalVertices = lineItems.length - 1;\n      if (totalVertices < 3) {\n        throw 'Face statement has less than 3 vertices' + this.filePath + this.lineNumber;\n      }\n\n      var face = {\n        material: this.currentMaterial,\n        group: this.currentGroup,\n        smoothingGroup: this.smoothingGroup,\n        vertices: []\n      };\n\n      for (var i = 0; i < totalVertices; i += 1) {\n        var vertexString = lineItems[i + 1];\n        var vertexValues = vertexString.split('/');\n\n        if (vertexValues.length < 1 || vertexValues.length > 3) {\n          throw 'Two many values (separated by /) for a single vertex' + this.filePath + this.lineNumber;\n        }\n\n        var vertexIndex = 0;\n        var textureCoordsIndex = 0;\n        var vertexNormalIndex = 0;\n        vertexIndex = parseInt(vertexValues[0]);\n        if (vertexValues.length > 1 && !vertexValues[1] == '') {\n          textureCoordsIndex = parseInt(vertexValues[1]);\n        }\n        if (vertexValues.length > 2) {\n          vertexNormalIndex = parseInt(vertexValues[2]);\n        }\n\n        if (vertexIndex == 0) {\n          throw 'Faces uses invalid vertex index of 0';\n        }\n\n        // Negative vertex indices refer to the nth last defined vertex\n        // convert these to postive indices for simplicity\n        if (vertexIndex < 0) {\n          vertexIndex = this._currentModel().vertices.length + 1 + vertexIndex;\n        }\n\n        face.vertices.push({\n          vertexIndex: vertexIndex,\n          textureCoordsIndex: textureCoordsIndex,\n          vertexNormalIndex: vertexNormalIndex\n        });\n      }\n      this._currentModel().faces.push(face);\n    }\n  }, {\n    key: '_parseMtlLib',\n    value: function _parseMtlLib(lineItems) {\n      if (lineItems.length >= 2) {\n        this.result.materialLibraries.push(lineItems[1]);\n      }\n    }\n  }, {\n    key: '_parseUseMtl',\n    value: function _parseUseMtl(lineItems) {\n      if (lineItems.length >= 2) {\n        this.currentMaterial = lineItems[1];\n      }\n    }\n  }, {\n    key: '_parseSmoothShadingStatement',\n    value: function _parseSmoothShadingStatement(lineItems) {\n      if (lineItems.length != 2) {\n        throw 'Smoothing group statements must have exactly 1 argument (eg. s <number|off>)';\n      }\n\n      var groupNumber = lineItems[1].toLowerCase() == 'off' ? 0 : parseInt(lineItems[1]);\n      this.smoothingGroup = groupNumber;\n    }\n  }]);\n\n  return OBJFile;\n}();\n\nmodule.exports = OBJFile;"],"names":["MathArray","cls","ExtendableBuiltin","instance","Reflect","construct","Array","from","arguments","Object","setPrototypeOf","getPrototypeOf","this","prototype","create","constructor","value","enumerable","writable","configurable","__proto__","_extendableBuiltin","ELEMENTS","clone","copy","arrayOrObject","isArray","fromObject","fromArray","array","offset","i","check","to","toArray","toObject","toTarget","target","toFloat32Array","Float32Array","toString","formatString","opts","string","concat","printTypes","name","equals","length","exactEquals","negate","lerp","a","b","t","undefined","ai","min","vector","Math","max","clamp","minVector","maxVector","add","vectors","subtract","scale","multiply","sub","setScalar","addScalar","subScalar","multiplyScalar","scalar","divideScalar","clampScalar","multiplyByScalar","elements","validate","Error","valid","Number","isFinite","Vector","x","y","len","sqrt","lengthSquared","magnitude","magnitudeSquared","distance","mathArray","distanceSquared","dist","dot","product","normalize","divide","lengthSq","distanceTo","distanceToSquared","getComponent","setComponent","addVectors","subVectors","multiplyVectors","addScaledVector","ORIGIN","constants","Vector3","ZERO","freeze","z","super","set","object","angle","cross","rotateX","radians","origin","rotateY","rotateZ","transform","matrix4","transformAsPoint","transformAsVector","transformByMatrix3","matrix3","transformByMatrix2","matrix2","transformByQuaternion","quaternion","assert","condition","message","PI","DEGREES_TO_RADIANS","config","formatValue","precision","round","EPSILON","parseFloat","toPrecision","ArrayBuffer","isView","DataView","toRadians","degrees","result","func","map","epsilon","oldEpsilon","abs","debug","printDegrees","printRowMajor","vec2_transformMat4AsVector","out","m","w","vec3_transformMat4AsVector","vec3_transformMat2","vec4_transformMat2","vec4_transformMat3","checkNumber","checkVector","v","callerName","validateVector","deprecated","method","version","console","warn","Orientation","pitch","yaw","roll","orientation","gl","canvas","document","createElement","body","appendChild","getContext","iboLength","drawElements","TRIANGLES","UNSIGNED_SHORT","vaoLength","drawArrays","attachments","Keys","KEY_0","KEY_1","KEY_2","KEY_3","KEY_4","KEY_5","KEY_6","KEY_7","KEY_8","KEY_9","KEY_A","KEY_B","KEY_C","KEY_D","KEY_E","KEY_F","KEY_G","KEY_H","KEY_I","KEY_J","KEY_K","KEY_L","KEY_M","KEY_N","KEY_O","KEY_P","KEY_Q","KEY_R","KEY_S","KEY_T","KEY_U","KEY_V","KEY_X","KEY_W","KEY_Y","KEY_Z","KEY_SPACE","KEY_ESCAPE","KEY_ENTER","KEY_BACKSPACE","KEY_INSERT","KEY_DELETE","KEY_ALT_L","KEY_ALT_R","KEY_CTRL_L","KEY_CTRL_R","KEY_SHIFT_L","KEY_SHIFT_R","KEY_UP","KEY_DOWN","KEY_LEFT","KEY_RIGHT","KEY_HOME","KEY_END","KEY_PAGEUP","KEY_PAGEDOWN","KEY_BACKQUOTE","KEY_MINUS","KEY_EQUAL","KEY_BRACKET_L","KEY_BRACKET_R","KEY_BACKSLASH","KEY_SEMICOLON","KEY_QUOTE","KEY_COMMA","KEY_PERIOD","KEY_SLASH","InputManager","_bufferKeys","_keys","Map","keys","forEach","key","window","addEventListener","onKeyDown","onKeyUp","_mouseButtons","_currentMousePosition","_previousMousePosition","_mouseMovement","Razor","onMouseDown","onMouseUp","onMouseMove","_shouldDebug","includes","get","push","event","stopPropagation","preventDefault","code","filter","button","movementX","movementY","log","offsetX","offsetY","clientX","clientY","screenX","screenY","gameCore","CANVAS","GLUtils","defineProperty","clearColor","_gameLoop","time","delta","_then","fps","querySelector","textContent","toFixed","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","_gameCore","update","render","requestAnimationFrame","loop","start","enable","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","CULL_FACE","depthFunc","LESS","_started","FOCUSED","Boolean","IS_MOUSE_INSIDE","configs","resize","width","offsetWidth","height","offsetHeight","viewport","e","isInsideCanvas","requestPointerLock","offsetLeft","offsetTop","isStarted","getGameCore","camera","_name","_camera","_maximumRenderDistance","getEntitiesByMaterial","material","_scene","filterVisible","entity","getRenderer","getName","getMaterial","getTransform","getTranslation","getEntitiesByShader","shader","getShader","setScene","scene","getScene","getCamera","Matrix","RANK","row","col","getElementIndex","getElement","setElement","getColumn","columnIndex","fill","firstIndex","setColumn","columnVector","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","transformMat4","IDENTITY","INDICES","COL0ROW0","COL0ROW1","COL0ROW2","COL0ROW3","COL1ROW0","COL1ROW1","COL1ROW2","COL1ROW3","COL2ROW0","COL2ROW1","COL2ROW2","COL2ROW3","COL3ROW0","COL3ROW1","COL3ROW2","COL3ROW3","Matrix4","identity","m00","m10","m20","m30","m01","m11","m21","m31","m02","m12","m22","m32","m03","m13","m23","m33","setRowMajor","toRowMajor","fromQuaternion","q","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","frustum","left","right","bottom","top","near","far","Infinity","_computeInfinitePerspectiveOffCenter","rl","tb","nf","static","column0Row0","column1Row1","column2Row0","column2Row1","column3Row2","lookAt","eye","center","up","x0","x1","y0","y1","z0","z1","eyex","eyey","eyez","upx","upy","upz","centerx","centery","centerz","hypot","ortho","lr","bt","orthographic","fovy","aspect","focalDistance","halfY","tan","perspective","fov","f","determinant","getScale","getRotation","scaleResult","inverseScale0","inverseScale1","inverseScale2","getRotationMatrix3","transpose","invert","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","multiplyLeft","multiplyRight","rad","s","sin","c","cos","rotateXYZ","rx","ry","rz","rotateAxis","axis","b12","b20","b21","b22","factor","translate","vec","vec3","makeRotationX","makeTranslation","transformPoint","transformVector","transformDirection","Vector2","horizontalAngle","atan2","verticalAngle","transformByMatrix2x3","matrix2x3","intersectionPointsBetweenLineAndCircunference","line","circunference","n","r","intersectionX","bhaskara","functionOfXFromLineEquation","v1","p1","p2","v2","intersectionY","functionOfYFromLineEquation","lineEquationOf","circunferenceEquationOf","rDelta","translation","rotation","_translation","_rotation","_scale","setEntity","_entity","_children","Scene","children","parent","_parent","setTranslation","setX","setY","setZ","getX","getY","getZ","setRotation","_fixRotation","setPitch","setYaw","setRoll","getPitch","getYaw","getRoll","setScale","toMatrix","rotationX","rotationY","rotationZ","toInversePositionMatrix","worldMatrix","localMatrix","worldMatrixFrom","worldTranslation","Entity","vao","renderer","_listEntities","_vao","_material","_renderer","_transform","Transform","setVAO","setMaterial","setRenderer","getVAO","_entities","_visible","_hidden","_renderStrategy","_renderers","active","_validate","remove","delete","getKeys","fn","has","_getName","exists","Renderer","forEachVisible","visible","setVisibility","getKeysFromVisible","getKeysFromHidden","_forEach","forEachHidden","_has","hasInVisible","hasInHidden","predicate","filterResult","entities","getRenderStrategy","pathname","onSuccess","onError","xmlHttpRequest","XMLHttpRequest","open","onload","responseText","onerror","statusText","send","reader","fetch","then","res","async","getReader","read","stream","TextDecoder","decode","buffer","isAttribute","usage","STATIC_DRAW","_buffer","_offset","_created","_isAttribute","_usage","getUsage","getId","_id","setId","id","getBuffer","setBuffer","getOffset","setCreated","isCreated","getType","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","getLength","vboList","vertexCoordsOffset","_vboList","vbo","_ibo","_vertexCoordsOffset","addEmpty","VBO","DYNAMIC_DRAW","_createVBO","createBuffer","bindBuffer","bufferData","_setAttributePointer","bind","enableVertexAttribArray","unbind","disableVertexAttribArray","destroy","deleteBuffer","setAttributePointer","dataType","vertexAttribPointer","Int8Array","BYTE","Int16Array","SHORT","Int32Array","INT","Uint8Array","UNSIGNED_BYTE","Uint16Array","Uint32Array","UNSIGNED_INT","FLOAT","getVbo","getIbo","load","FileUtils","file","data","OBJFile","parse","vbos","vertices","normals","uvCoords","models","faces","face","v0","vertexIndex","vertexNormals","n0","vertexNormalIndex","n1","n2","textureCoords","uv0","textureCoordsIndex","uv1","uv2","u","VAO","err","loadHitboxes","JSON","_width","_height","_data","observer","setInterval","_bindData","clearInterval","_program","createTexture","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","deleteTexture","getWidth","getHeight","setWidth","setHeight","getData","setData","texImage2D","RGBA","getProgram","callback","texture","Texture","img","Image","naturalWidth","naturalHeight","tempCanvas","ctx","drawImage","getImageData","src","ResourceManager","_shaders","_vaos","_textures","_materials","_instance","vaos","getInstance","loadVAO","objectData","OBJLoader","forEachVAO","shaders","loadShader","params","_vertexShaderPathname","vertexShaderPathname","_fragmentShaderPathname","fragmentShaderPathname","_textureCounter","createProgram","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","error","getProgramInfoLog","trim","type","createShader","shaderSource","compileShader","getShaderInfoLog","useProgram","deleteShader","getUniformLocation","_checkIfUniformExists","setValue","location","setInt","uniform1i","setIntArray","arrayValue","uniform1iv","setFloat","uniform1f","setFloatArray","uniform1fv","setVector3","uniform3fv","setVector4","uniform4fv","setMatrix4x4","matrix","uniformMatrix4fv","setTexture","activeTexture","TEXTURE0","forEachShader","textures","loadTextures","TextureLoader","getTexture","forEachTexture","materials","addMaterials","forEachMaterial","_lampList","setLampList","lampList","getLampList","SimpleEntity","color","hitbox","_hitbox","setHitbox","getHitbox","SolidEntity","friction","_friction","setFriction","getFriction","StaticEntity","attachemnt","_attachment","_texture","_fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","_rbo","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferRenderbuffer","DEPTH_ATTACHMENT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","deleteFramebuffer","deleteRenderbuffer","storeBuffer","readPixels","getAttachemnt","FrameRenderer","cameraManager","mode","_mode","_frameBuffer","Framebuffer","COLOR_ATTACHMENT0","_shader","_buffers","_modeStatic","horizontal","first_iteration","amount","draw","TEXTURE1","Camera","_mainCamera","Main","getView","euler","Sound","options","Sounds","_audio","Audio","autoplay","volume","pause","play","force","paused","currentTime","vectorDistance","distanceLength","pow","clear2","size","DrawRectangle","setSize","getSize","updatePosition","position","relativeTo","relative","vertical","metric","split","setAlpha","alpha","Text","fontInfo","numVertices","positions","texcoords","maxX","textureWidth","maxY","textureHeight","ii","letter","glyphInfo","glyphInfos","u1","letterHeight","u2","spacing","spaceWidth","arrays","texcoord","setText","text","_currentText","_oldText","addRectangle","RectangleEntity","addText","TextEntity","DialogEntity","GuiEntity","_dialogs","init","_rectangle","_text","paddingLeft","paddingTop","setImage","image","updateText","toLowerCase","replace","diff","animateText","wordPerSeconds","intervalText","apply","slice","mass","_mass","_force","_speed","updateSpeed","updateSpeedByAcceleration","acceleration","setMass","getMass","setForce","getForce","setSpeed","speed","getSpeed","GameController","display","String","ammunition","life","_life","_ammunition","attribute","GameTest","_collisionDisabled","isCollisionDisabled","disableCollision","collisionDisabled","Hitbox","radius","_radius","getRadius","DynamicEntity","player","CircleHitbox","_path","_health","_impulse","_pathIndex","_triggered","_player","_hitPlayer","Player","getStop","_shouldTrigger","_updatePathIndex","_move","setTimeout","node","getPosition","distanceVector","takeDamage","setHealth","health","getHealth","setPath","path","current","indexOf","getPath","isTriggered","GunState","_sliderVao","_sliderTransform","_state","CHARGED","_counter","_step","RECHARGING","sliderPosition","shoot","playerPosition","rayCasting","bulletPath","intersectionMap","getDistanceFromPlayer","monster","monstersInTheSight","Monster","sort","entity1","entity2","distanceA","distanceB","monsterPosition","intersection","_isInsideLine","intersectionPoints","begin","end","getSliderVAO","getSliderTransform","getState","_sensitivity","_handTransform","_gun","_stop","_updateCameraPosition","_end","setEndPoint","isStep","ray","dx","getHandTransformMatrix","getHandTransform","setGun","gun","getGun","setStop","HallDoorState","MapEntity","cameraTransform","CLOSED","_cameraTransform","_giveAmmunition","OPENING","isOpen","OPENED","CLOSING","isClose","interact","finish","_hallDoor","_locked","setLocked","setHallDoor","hallDoor","getHallDoor","setPlayer","getPlayer","locked","isLocked","_projection","innerWidth","innerHeight","cameraPosition","distanceConfig","index","Lamp","lamp","shininess","DoorPanelEntity","CanvasCamera","_pitch","_lockedIn","MODE","FIRST_PERSON","_lookAt","_angleAround","_firstPersonMovement","dy","getLockedIn","setLookAt","shouldLookAt","THIRD_PERSON","setShader","setName","Material","Vector4","applyMatrix4","disable","select","selection","rect","selected","getRect","setExecute","execute","addOption","OptionEntity","padding","updateTranslation","keyDown","keyUp","change","next","prev","_getTransformMatrix","ROTATION","TRANSLATION","SCALE","rectangle","createMaterial","createVAO","Promise","resolve","defaultMaterial","DefaultMaterial","Line","p","_p","_q","getP","getQ","indices","_lines","ax","az","bx","bz","getLines","solid1","solid2","_solid1","_solid2","getSolid1","getSolid2","CircleCircleIntersection","Intersection","totalRadius","getAccelerationOnSolid1","_getAccelerationOnSolid","getAccelerationOnSolid2","qp","pq","pRadius","qRadius","pk","solve","CircleEdgeIntersection","intersectedLine","_intersectedLine","s1P","circleHitbox","edgeHitbox","intersectedLines","lineEquation","point","distanceBetweenPointAndLine","circleCenter","closestPoint","reflectorCircleCenter","_physics","_solidEntities","_staticEntities","_dynamicEntities","_intersections","applyPhysics","sceneProperties","defaultFakeFloor","gravity","airFrictionCoefficient","reapplyPhysics","anyCollisionDetected","dynamicEntity","_test","EdgeHitbox","distributeForces","_properties","getProperties","_position","_g","_h","_neighbours","_marked","calculateG","originPosition","setG","g","getG","calculateH","destinyPosition","setH","h","getH","getF","getNeighbours","setMarked","marked","isMarked","setPosition","PathNode","getEntity","PhysicsScene","_entityFactory","renderStrategy","_loadMap","_loadMonsters","_configureEntities","hitboxes","vaoName","substring","_createEntity","HallDoorEntity","_getHitbox","_getMaterial","_distributeClosestLampsForStaticEntities","lamps","get5ClosestLamps","edge","_lamps","_pathFinding","_lampSortingTimer","_pathFindingCalculationTimer","Gun","doorPanelMapping","_nodes","_openNodes","_closedNodes","_playerNode","EntityNode","_monsterNodes","monsterNode","find","destiny","_clearOldPath","_connectNearestNodesToMonster","_popLowestCostNode","neighbour","notInOpen","costToNeighbour","_getPath","pop","reverse","connectNearestNodesToPlayer","_clearOldNearestNodes","nearest","_findNearest","firstClosestNode","entityNode","firstClosestNodeDistance","updateFirst","nodeList","smaller","loadNodes","nodeName","_connectNodes","nodeMapping","nodeId","neighbourId","neighbourName","getNodes","_lockedTexture","_unlockedTexture","_displayMap","TEXTURE2","_bindMaterial","_renderHand","_renderGun","u_transform","_renderObject","receiverTransform","sliderTransform","u_worldInverseTranspose","clearRect","font","fillStyle","splitText","fillText","_sceneManager","_scenes","_active","Event","setActive","getActive","changeScene","sceneManager","getSceneManager","DoorPanelMaterial","scene1","MainScene","mapRenderer","MapRenderer","monsterRenderer","MonsterRenderer","playerRenderer","PlayerRenderer","guiRenderer","_guiRenderer","GuiRenderer","guiAmmunition","DisplayEntity","ImageEntity","guiLife","dialog","sceneScredits","CreditsEntity","select2","SelectEntity","gameover","gameoverDisplay","sceneLoading","loadingDisplay","sceneEnd","endDisplay","sceneMenu","select1","gameTest","reload","engine","onresize","ARRAY_TYPE","random","ay","by","transformMat3","transformQuat","qx","qy","qz","qw","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","mag","cosine","acos","_createClass","defineProperties","props","descriptor","Constructor","protoProps","staticProps","fileContents","defaultModelName","TypeError","_classCallCheck","_reset","materialLibraries","currentMaterial","currentGroup","smoothingGroup","lineString","commentIndex","lines","lineItems","_parseObject","_parseGroup","_parseVertexCoords","_parseTextureCoords","_parseVertexNormal","_parseSmoothShadingStatement","_parsePolygon","_parseMtlLib","_parseUseMtl","modelName","_currentModel","totalVertices","filePath","lineNumber","group","vertexValues","parseInt","groupNumber","module","exports"],"sourceRoot":""}